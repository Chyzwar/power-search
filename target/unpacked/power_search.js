if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.7.48";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__13594__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__13594 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13595__i = 0, G__13595__a = new Array(arguments.length - 0);
        while (G__13595__i < G__13595__a.length) {
          G__13595__a[G__13595__i] = arguments[G__13595__i + 0];
          ++G__13595__i;
        }
        args = new cljs.core.IndexedSeq(G__13595__a, 0);
      }
      return G__13594__delegate.call(this, args);
    };
    G__13594.cljs$lang$maxFixedArity = 0;
    G__13594.cljs$lang$applyTo = function(arglist__13596) {
      var args = cljs.core.seq(arglist__13596);
      return G__13594__delegate(args);
    };
    G__13594.cljs$core$IFn$_invoke$arity$variadic = G__13594__delegate;
    return G__13594;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__13597__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__13597 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13598__i = 0, G__13598__a = new Array(arguments.length - 0);
        while (G__13598__i < G__13598__a.length) {
          G__13598__a[G__13598__i] = arguments[G__13598__i + 0];
          ++G__13598__i;
        }
        args = new cljs.core.IndexedSeq(G__13598__a, 0);
      }
      return G__13597__delegate.call(this, args);
    };
    G__13597.cljs$lang$maxFixedArity = 0;
    G__13597.cljs$lang$applyTo = function(arglist__13599) {
      var args = cljs.core.seq(arglist__13599);
      return G__13597__delegate(args);
    };
    G__13597.cljs$core$IFn$_invoke$arity$variadic = G__13597__delegate;
    return G__13597;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4514__auto__ = ty;
    if (cljs.core.truth_(and__4514__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4514__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.make_array = function cljs$core$make_array() {
  var args13600 = [];
  var len__5565__auto___13603 = arguments.length;
  var i__5566__auto___13604 = 0;
  while (true) {
    if (i__5566__auto___13604 < len__5565__auto___13603) {
      args13600.push(arguments[i__5566__auto___13604]);
      var G__13605 = i__5566__auto___13604 + 1;
      i__5566__auto___13604 = G__13605;
      continue;
    } else {
    }
    break;
  }
  var G__13602 = args13600.length;
  switch(G__13602) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13600.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5410__auto___13607 = len;
  var i_13608 = 0;
  while (true) {
    if (i_13608 < n__5410__auto___13607) {
      new_arr[i_13608] = arr[i_13608];
      var G__13609 = i_13608 + 1;
      i_13608 = G__13609;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__13610 = i + 1;
      i = G__13610;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var args13611 = [];
  var len__5565__auto___13620 = arguments.length;
  var i__5566__auto___13621 = 0;
  while (true) {
    if (i__5566__auto___13621 < len__5565__auto___13620) {
      args13611.push(arguments[i__5566__auto___13621]);
      var G__13622 = i__5566__auto___13621 + 1;
      i__5566__auto___13621 = G__13622;
      continue;
    } else {
    }
    break;
  }
  var G__13616 = args13611.length;
  switch(G__13616) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args13611.slice(2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__13617 = cljs.core.aget;
  var G__13618 = array[i];
  var G__13619 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__13617, G__13618, G__13619) : cljs.core.apply.call(null, G__13617, G__13618, G__13619);
};
cljs.core.aget.cljs$lang$applyTo = function(seq13612) {
  var G__13613 = cljs.core.first(seq13612);
  var seq13612__$1 = cljs.core.next(seq13612);
  var G__13614 = cljs.core.first(seq13612__$1);
  var seq13612__$2 = cljs.core.next(seq13612__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__13613, G__13614, seq13612__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var args13624 = [];
  var len__5565__auto___13635 = arguments.length;
  var i__5566__auto___13636 = 0;
  while (true) {
    if (i__5566__auto___13636 < len__5565__auto___13635) {
      args13624.push(arguments[i__5566__auto___13636]);
      var G__13637 = i__5566__auto___13636 + 1;
      i__5566__auto___13636 = G__13637;
      continue;
    } else {
    }
    break;
  }
  var G__13630 = args13624.length;
  switch(G__13630) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args13624.slice(3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__13631 = cljs.core.aset;
  var G__13632 = array[idx];
  var G__13633 = idx2;
  var G__13634 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__13631, G__13632, G__13633, G__13634) : cljs.core.apply.call(null, G__13631, G__13632, G__13633, G__13634);
};
cljs.core.aset.cljs$lang$applyTo = function(seq13625) {
  var G__13626 = cljs.core.first(seq13625);
  var seq13625__$1 = cljs.core.next(seq13625);
  var G__13627 = cljs.core.first(seq13625__$1);
  var seq13625__$2 = cljs.core.next(seq13625__$1);
  var G__13628 = cljs.core.first(seq13625__$2);
  var seq13625__$3 = cljs.core.next(seq13625__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__13626, G__13627, G__13628, seq13625__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var args13639 = [];
  var len__5565__auto___13645 = arguments.length;
  var i__5566__auto___13646 = 0;
  while (true) {
    if (i__5566__auto___13646 < len__5565__auto___13645) {
      args13639.push(arguments[i__5566__auto___13646]);
      var G__13647 = i__5566__auto___13646 + 1;
      i__5566__auto___13646 = G__13647;
      continue;
    } else {
    }
    break;
  }
  var G__13641 = args13639.length;
  switch(G__13641) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13639.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__13642 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__13643 = [];
  var G__13644 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__13642, G__13643, G__13644) : cljs.core.reduce.call(null, G__13642, G__13643, G__13644);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var args__5572__auto__ = [];
  var len__5565__auto___13652 = arguments.length;
  var i__5566__auto___13653 = 0;
  while (true) {
    if (i__5566__auto___13653 < len__5565__auto___13652) {
      args__5572__auto__.push(arguments[i__5566__auto___13653]);
      var G__13654 = i__5566__auto___13653 + 1;
      i__5566__auto___13653 = G__13654;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 2 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5573__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq13649) {
  var G__13650 = cljs.core.first(seq13649);
  var seq13649__$1 = cljs.core.next(seq13649);
  var G__13651 = cljs.core.first(seq13649__$1);
  var seq13649__$2 = cljs.core.next(seq13649__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__13650, G__13651, seq13649__$2);
};
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function cljs$core$_invoke() {
  var args13659 = [];
  var len__5565__auto___13662 = arguments.length;
  var i__5566__auto___13663 = 0;
  while (true) {
    if (i__5566__auto___13663 < len__5565__auto___13662) {
      args13659.push(arguments[i__5566__auto___13663]);
      var G__13664 = i__5566__auto___13663 + 1;
      i__5566__auto___13663 = G__13664;
      continue;
    } else {
    }
    break;
  }
  var G__13661 = args13659.length;
  switch(G__13661) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13659.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__5163__auto__.call(null, this$, a);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__5163__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__5163__auto__.call(null, this$, a, b);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__5163__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__5163__auto__.call(null, this$, a, b, c);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__5163__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__5163__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__5163__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$6 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__5163__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__5163__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$7 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__5163__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$8 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$9 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$10 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$11 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$12 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$13 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$14 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$15 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$16 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$17 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$18 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$19 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$20 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$21 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$22 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = {};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__5162__auto__ = value == null ? null : value;
    var m__5163__auto__ = cljs.core._clone[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5163__auto__.call(null, value);
    } else {
      var m__5163__auto____$1 = cljs.core._clone["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__5163__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = {};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._count[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._count["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._empty[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._empty["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._conj[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__5163__auto__.call(null, coll, o);
    } else {
      var m__5163__auto____$1 = cljs.core._conj["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__5163__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function cljs$core$_nth() {
  var args13676 = [];
  var len__5565__auto___13679 = arguments.length;
  var i__5566__auto___13680 = 0;
  while (true) {
    if (i__5566__auto___13680 < len__5565__auto___13679) {
      args13676.push(arguments[i__5566__auto___13680]);
      var G__13681 = i__5566__auto___13680 + 1;
      i__5566__auto___13680 = G__13681;
      continue;
    } else {
    }
    break;
  }
  var G__13678 = args13676.length;
  switch(G__13678) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13676.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._nth[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__5163__auto__.call(null, coll, n);
    } else {
      var m__5163__auto____$1 = cljs.core._nth["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__5163__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._nth[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__5163__auto__.call(null, coll, n, not_found);
    } else {
      var m__5163__auto____$1 = cljs.core._nth["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__5163__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._first[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._first["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._rest[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._rest["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = {};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._next[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._next["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function cljs$core$_lookup() {
  var args13691 = [];
  var len__5565__auto___13694 = arguments.length;
  var i__5566__auto___13695 = 0;
  while (true) {
    if (i__5566__auto___13695 < len__5565__auto___13694) {
      args13691.push(arguments[i__5566__auto___13695]);
      var G__13696 = i__5566__auto___13695 + 1;
      i__5566__auto___13695 = G__13696;
      continue;
    } else {
    }
    break;
  }
  var G__13693 = args13691.length;
  switch(G__13693) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13691.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._lookup[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__5163__auto__.call(null, o, k);
    } else {
      var m__5163__auto____$1 = cljs.core._lookup["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__5163__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._lookup[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__5163__auto__.call(null, o, k, not_found);
    } else {
      var m__5163__auto____$1 = cljs.core._lookup["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__5163__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5163__auto__.call(null, coll, k);
    } else {
      var m__5163__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5163__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._assoc[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__5163__auto__.call(null, coll, k, v);
    } else {
      var m__5163__auto____$1 = cljs.core._assoc["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__5163__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._dissoc[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5163__auto__.call(null, coll, k);
    } else {
      var m__5163__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5163__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._key[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._key["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._val[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._val["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._disjoin[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__5163__auto__.call(null, coll, v);
    } else {
      var m__5163__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__5163__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = {};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._peek[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._peek["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._pop[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._pop["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._assoc_n[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__5163__auto__.call(null, coll, n, val);
    } else {
      var m__5163__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__5163__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._deref[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto__.call(null, o);
    } else {
      var m__5163__auto____$1 = cljs.core._deref["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__5163__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__5163__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__5163__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._meta[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto__.call(null, o);
    } else {
      var m__5163__auto____$1 = cljs.core._meta["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._with_meta[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__5163__auto__.call(null, o, meta);
    } else {
      var m__5163__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__5163__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function cljs$core$_reduce() {
  var args13720 = [];
  var len__5565__auto___13723 = arguments.length;
  var i__5566__auto___13724 = 0;
  while (true) {
    if (i__5566__auto___13724 < len__5565__auto___13723) {
      args13720.push(arguments[i__5566__auto___13724]);
      var G__13725 = i__5566__auto___13724 + 1;
      i__5566__auto___13724 = G__13725;
      continue;
    } else {
    }
    break;
  }
  var G__13722 = args13720.length;
  switch(G__13722) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13720.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._reduce[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__5163__auto__.call(null, coll, f);
    } else {
      var m__5163__auto____$1 = cljs.core._reduce["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__5163__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._reduce[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__5163__auto__.call(null, coll, f, start);
    } else {
      var m__5163__auto____$1 = cljs.core._reduce["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__5163__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._kv_reduce[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__5163__auto__.call(null, coll, f, init);
    } else {
      var m__5163__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__5163__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._equiv[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__5163__auto__.call(null, o, other);
    } else {
      var m__5163__auto____$1 = cljs.core._equiv["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__5163__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = {};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._hash[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto__.call(null, o);
    } else {
      var m__5163__auto____$1 = cljs.core._hash["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._seq[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto__.call(null, o);
    } else {
      var m__5163__auto____$1 = cljs.core._seq["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._rseq[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._rseq["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._sorted_seq[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__5163__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__5163__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__5163__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__5163__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__5163__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__5163__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._entry_key[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__5163__auto__.call(null, coll, entry);
    } else {
      var m__5163__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__5163__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._comparator[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._comparator["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = {};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__5162__auto__ = writer == null ? null : writer;
    var m__5163__auto__ = cljs.core._write[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__5163__auto__.call(null, writer, s);
    } else {
      var m__5163__auto____$1 = cljs.core._write["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__5163__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__5162__auto__ = writer == null ? null : writer;
    var m__5163__auto__ = cljs.core._flush[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__5163__auto__.call(null, writer);
    } else {
      var m__5163__auto____$1 = cljs.core._flush["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__5163__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._pr_writer[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__5163__auto__.call(null, o, writer, opts);
    } else {
      var m__5163__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__5163__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (!(d == null) && !(d.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__5162__auto__ = d == null ? null : d;
    var m__5163__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(d) : m__5163__auto__.call(null, d);
    } else {
      var m__5163__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(d) : m__5163__auto____$1.call(null, d);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", d);
      }
    }
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._notify_watches[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__5163__auto__.call(null, this$, oldval, newval);
    } else {
      var m__5163__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__5163__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._add_watch[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__5163__auto__.call(null, this$, key, f);
    } else {
      var m__5163__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__5163__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._remove_watch[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__5163__auto__.call(null, this$, key);
    } else {
      var m__5163__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__5163__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._as_transient[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__5163__auto__.call(null, tcoll, val);
    } else {
      var m__5163__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__5163__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5163__auto__.call(null, tcoll);
    } else {
      var m__5163__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5163__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__5163__auto__.call(null, tcoll, key, val);
    } else {
      var m__5163__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__5163__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__5163__auto__.call(null, tcoll, key);
    } else {
      var m__5163__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__5163__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__5163__auto__.call(null, tcoll, n, val);
    } else {
      var m__5163__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__5163__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5163__auto__.call(null, tcoll);
    } else {
      var m__5163__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5163__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__5163__auto__.call(null, tcoll, v);
    } else {
      var m__5163__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__5163__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._compare[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__5163__auto__.call(null, x, y);
    } else {
      var m__5163__auto____$1 = cljs.core._compare["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__5163__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._drop_first[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._chunked_first[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._chunked_rest[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._chunked_next[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = {};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._name[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = cljs.core._name["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._namespace[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = cljs.core._namespace["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = {};
cljs.core.IReset = {};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5163__auto__.call(null, o, new_value);
    } else {
      var m__5163__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5163__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = {};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var args13781 = [];
  var len__5565__auto___13784 = arguments.length;
  var i__5566__auto___13785 = 0;
  while (true) {
    if (i__5566__auto___13785 < len__5565__auto___13784) {
      args13781.push(arguments[i__5566__auto___13785]);
      var G__13786 = i__5566__auto___13785 + 1;
      i__5566__auto___13785 = G__13786;
      continue;
    } else {
    }
    break;
  }
  var G__13783 = args13781.length;
  switch(G__13783) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13781.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__5163__auto__.call(null, o, f);
    } else {
      var m__5163__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__5163__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__5163__auto__.call(null, o, f, a);
    } else {
      var m__5163__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__5163__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__5163__auto__.call(null, o, f, a, b);
    } else {
      var m__5163__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__5163__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__5163__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__5163__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__5163__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = {};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5163__auto__.call(null, o, new_value);
    } else {
      var m__5163__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5163__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = {};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._iterator[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._iterator["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__13792 = i + 2;
        var G__13793 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__13792;
        h1 = G__13793;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__13796 = i + 1;
          var G__13797 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__13796;
          hash = G__13797;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = cljs.core.not(a.ns);
      if (and__4514__auto__) {
        return b.ns;
      } else {
        return and__4514__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__13810 = a.ns;
            var G__13811 = b.ns;
            return goog.array.defaultCompare(G__13810, G__13811);
          }();
          if (0 === nsc) {
            var G__13812 = a.name;
            var G__13813 = b.name;
            return goog.array.defaultCompare(G__13812, G__13813);
          } else {
            return nsc;
          }
        }
      } else {
        var G__13814 = a.name;
        var G__13815 = b.name;
        return goog.array.defaultCompare(G__13814, G__13815);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__13817 = null;
  var G__13817__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__13817__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__13817 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13817__2.call(this, self__, coll);
      case 3:
        return G__13817__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13817.cljs$core$IFn$_invoke$arity$2 = G__13817__2;
  G__13817.cljs$core$IFn$_invoke$arity$3 = G__13817__3;
  return G__13817;
}();
cljs.core.Symbol.prototype.apply = function(self__, args13816) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13816)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4942__auto__ = self__._hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var args13818 = [];
  var len__5565__auto___13821 = arguments.length;
  var i__5566__auto___13822 = 0;
  while (true) {
    if (i__5566__auto___13822 < len__5565__auto___13821) {
      args13818.push(arguments[i__5566__auto___13822]);
      var G__13823 = i__5566__auto___13822 + 1;
      i__5566__auto___13822 = G__13823;
      continue;
    } else {
    }
    break;
  }
  var G__13820 = args13818.length;
  switch(G__13820) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13818.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx === -1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__13826 = this$__$1.sym;
    var G__13827 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__13826, G__13827) : cljs.core._EQ_.call(null, G__13826, G__13827);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__13872 = null;
  var G__13872__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__13872__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__13872__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__13872__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__13872__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__13872__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__13872__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__13872__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__13872__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__13872__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__13872__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__13872__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__13872__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__13872__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__13872__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__13872__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__13872__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__13872__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__13872__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__13872__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__13872__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__13872__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13828 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__13829 = a;
    var G__13830 = b;
    var G__13831 = c;
    var G__13832 = d;
    var G__13833 = e;
    var G__13834 = f;
    var G__13835 = g;
    var G__13836 = h;
    var G__13837 = i;
    var G__13838 = j;
    var G__13839 = k;
    var G__13840 = l;
    var G__13841 = m;
    var G__13842 = n;
    var G__13843 = o;
    var G__13844 = p;
    var G__13845 = q;
    var G__13846 = r;
    var G__13847 = s;
    var G__13848 = t;
    var G__13849 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13828, G__13829, G__13830, G__13831, G__13832, G__13833, G__13834, G__13835, G__13836, G__13837, G__13838, G__13839, G__13840, G__13841, G__13842, G__13843, G__13844, G__13845, G__13846, G__13847, G__13848, G__13849) : cljs.core.apply.call(null, G__13828, G__13829, G__13830, G__13831, G__13832, G__13833, G__13834, G__13835, G__13836, G__13837, G__13838, G__13839, G__13840, G__13841, G__13842, 
    G__13843, G__13844, G__13845, G__13846, G__13847, G__13848, G__13849);
  };
  G__13872 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__13872__1.call(this, self__);
      case 2:
        return G__13872__2.call(this, self__, a);
      case 3:
        return G__13872__3.call(this, self__, a, b);
      case 4:
        return G__13872__4.call(this, self__, a, b, c);
      case 5:
        return G__13872__5.call(this, self__, a, b, c, d);
      case 6:
        return G__13872__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__13872__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__13872__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__13872__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__13872__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__13872__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__13872__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__13872__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__13872__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__13872__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__13872__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__13872__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__13872__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__13872__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__13872__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__13872__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__13872__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13872.cljs$core$IFn$_invoke$arity$1 = G__13872__1;
  G__13872.cljs$core$IFn$_invoke$arity$2 = G__13872__2;
  G__13872.cljs$core$IFn$_invoke$arity$3 = G__13872__3;
  G__13872.cljs$core$IFn$_invoke$arity$4 = G__13872__4;
  G__13872.cljs$core$IFn$_invoke$arity$5 = G__13872__5;
  G__13872.cljs$core$IFn$_invoke$arity$6 = G__13872__6;
  G__13872.cljs$core$IFn$_invoke$arity$7 = G__13872__7;
  G__13872.cljs$core$IFn$_invoke$arity$8 = G__13872__8;
  G__13872.cljs$core$IFn$_invoke$arity$9 = G__13872__9;
  G__13872.cljs$core$IFn$_invoke$arity$10 = G__13872__10;
  G__13872.cljs$core$IFn$_invoke$arity$11 = G__13872__11;
  G__13872.cljs$core$IFn$_invoke$arity$12 = G__13872__12;
  G__13872.cljs$core$IFn$_invoke$arity$13 = G__13872__13;
  G__13872.cljs$core$IFn$_invoke$arity$14 = G__13872__14;
  G__13872.cljs$core$IFn$_invoke$arity$15 = G__13872__15;
  G__13872.cljs$core$IFn$_invoke$arity$16 = G__13872__16;
  G__13872.cljs$core$IFn$_invoke$arity$17 = G__13872__17;
  G__13872.cljs$core$IFn$_invoke$arity$18 = G__13872__18;
  G__13872.cljs$core$IFn$_invoke$arity$19 = G__13872__19;
  G__13872.cljs$core$IFn$_invoke$arity$20 = G__13872__20;
  G__13872.cljs$core$IFn$_invoke$arity$21 = G__13872__21;
  G__13872.cljs$core$IFn$_invoke$arity$22 = G__13872__22;
  return G__13872;
}();
cljs.core.Var.prototype.apply = function(self__, args13825) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13825)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__13850 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__13851 = a;
  var G__13852 = b;
  var G__13853 = c;
  var G__13854 = d;
  var G__13855 = e;
  var G__13856 = f;
  var G__13857 = g;
  var G__13858 = h;
  var G__13859 = i;
  var G__13860 = j;
  var G__13861 = k;
  var G__13862 = l;
  var G__13863 = m;
  var G__13864 = n;
  var G__13865 = o;
  var G__13866 = p;
  var G__13867 = q;
  var G__13868 = r;
  var G__13869 = s;
  var G__13870 = t;
  var G__13871 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13850, G__13851, G__13852, G__13853, G__13854, G__13855, G__13856, G__13857, G__13858, G__13859, G__13860, G__13861, G__13862, G__13863, G__13864, G__13865, G__13866, G__13867, G__13868, G__13869, G__13870, G__13871) : cljs.core.apply.call(null, G__13850, G__13851, G__13852, G__13853, G__13854, G__13855, G__13856, G__13857, G__13858, G__13859, G__13860, G__13861, G__13862, G__13863, G__13864, 
  G__13865, G__13866, G__13867, G__13868, G__13869, G__13870, G__13871);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var args13885 = [];
  var len__5565__auto___13891 = arguments.length;
  var i__5566__auto___13892 = 0;
  while (true) {
    if (i__5566__auto___13892 < len__5565__auto___13891) {
      args13885.push(arguments[i__5566__auto___13892]);
      var G__13893 = i__5566__auto___13892 + 1;
      i__5566__auto___13892 = G__13893;
      continue;
    } else {
    }
    break;
  }
  var G__13890 = args13885.length;
  switch(G__13890) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args13885.slice(2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__13895 = y;
        var G__13896 = cljs.core.first(more);
        var G__13897 = cljs.core.next(more);
        x = G__13895;
        y = G__13896;
        more = G__13897;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq13886) {
  var G__13887 = cljs.core.first(seq13886);
  var seq13886__$1 = cljs.core.next(seq13886);
  var G__13888 = cljs.core.first(seq13886__$1);
  var seq13886__$2 = cljs.core.next(seq13886__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__13887, G__13888, seq13886__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__13898 = n + 1;
      var G__13899 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__13900 = cljs.core.next(coll__$1);
      n = G__13898;
      hash_code = G__13899;
      coll__$1 = G__13900;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__13901 = n + 1;
      var G__13902 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__13903 = cljs.core.next(coll__$1);
      n = G__13901;
      hash_code = G__13902;
      coll__$1 = G__13903;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__13904 = this$__$1.valueOf();
    var G__13905 = other.valueOf();
    return goog.array.defaultCompare(G__13904, G__13905);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var args13906 = [];
  var len__5565__auto___13915 = arguments.length;
  var i__5566__auto___13916 = 0;
  while (true) {
    if (i__5566__auto___13916 < len__5565__auto___13915) {
      args13906.push(arguments[i__5566__auto___13916]);
      var G__13917 = i__5566__auto___13916 + 1;
      i__5566__auto___13916 = G__13917;
      continue;
    } else {
    }
    break;
  }
  var G__13908 = args13906.length;
  switch(G__13908) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13906.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__13909 = val;
          var G__13910 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13909, G__13910) : f.call(null, G__13909, G__13910);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__13919 = nval;
          var G__13920 = n + 1;
          val = G__13919;
          n = G__13920;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__13911 = val__$1;
        var G__13912 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13911, G__13912) : f.call(null, G__13911, G__13912);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13921 = nval;
        var G__13922 = n + 1;
        val__$1 = G__13921;
        n = G__13922;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__13913 = val__$1;
        var G__13914 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13913, G__13914) : f.call(null, G__13913, G__13914);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13923 = nval;
        var G__13924 = n + 1;
        val__$1 = G__13923;
        n = G__13924;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var args13925 = [];
  var len__5565__auto___13934 = arguments.length;
  var i__5566__auto___13935 = 0;
  while (true) {
    if (i__5566__auto___13935 < len__5565__auto___13934) {
      args13925.push(arguments[i__5566__auto___13935]);
      var G__13936 = i__5566__auto___13935 + 1;
      i__5566__auto___13935 = G__13936;
      continue;
    } else {
    }
    break;
  }
  var G__13927 = args13925.length;
  switch(G__13927) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13925.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__13928 = val;
          var G__13929 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13928, G__13929) : f.call(null, G__13928, G__13929);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__13938 = nval;
          var G__13939 = n + 1;
          val = G__13938;
          n = G__13939;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__13930 = val__$1;
        var G__13931 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13930, G__13931) : f.call(null, G__13930, G__13931);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13940 = nval;
        var G__13941 = n + 1;
        val__$1 = G__13940;
        n = G__13941;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__13932 = val__$1;
        var G__13933 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13932, G__13933) : f.call(null, G__13932, G__13933);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13942 = nval;
        var G__13943 = n + 1;
        val__$1 = G__13942;
        n = G__13943;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4838__auto__ = 0;
  var y__4839__auto__ = self__.arr.length - self__.i;
  return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var args13948 = [];
  var len__5565__auto___13951 = arguments.length;
  var i__5566__auto___13952 = 0;
  while (true) {
    if (i__5566__auto___13952 < len__5565__auto___13951) {
      args13948.push(arguments[i__5566__auto___13952]);
      var G__13953 = i__5566__auto___13952 + 1;
      i__5566__auto___13952 = G__13953;
      continue;
    } else {
    }
    break;
  }
  var G__13950 = args13948.length;
  switch(G__13950) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13948.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var args13955 = [];
  var len__5565__auto___13958 = arguments.length;
  var i__5566__auto___13959 = 0;
  while (true) {
    if (i__5566__auto___13959 < len__5565__auto___13958) {
      args13955.push(arguments[i__5566__auto___13959]);
      var G__13960 = i__5566__auto___13959 + 1;
      i__5566__auto___13959 = G__13960;
      continue;
    } else {
    }
    break;
  }
  var G__13957 = args13955.length;
  switch(G__13957) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13955.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__13962 = cljs.core.List.EMPTY;
  var G__13963 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__13962, G__13963) : cljs.core.with_meta.call(null, G__13962, G__13963);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__13964 = sn;
      s = G__13964;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var args13965 = [];
  var len__5565__auto___13971 = arguments.length;
  var i__5566__auto___13972 = 0;
  while (true) {
    if (i__5566__auto___13972 < len__5565__auto___13971) {
      args13965.push(arguments[i__5566__auto___13972]);
      var G__13973 = i__5566__auto___13972 + 1;
      i__5566__auto___13972 = G__13973;
      continue;
    } else {
    }
    break;
  }
  var G__13970 = args13965.length;
  switch(G__13970) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args13965.slice(2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__13975 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__13976 = cljs.core.first(xs);
      var G__13977 = cljs.core.next(xs);
      coll = G__13975;
      x = G__13976;
      xs = G__13977;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq13966) {
  var G__13967 = cljs.core.first(seq13966);
  var seq13966__$1 = cljs.core.next(seq13966);
  var G__13968 = cljs.core.first(seq13966__$1);
  var seq13966__$2 = cljs.core.next(seq13966__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__13967, G__13968, seq13966__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__13978 = cljs.core.next(s);
      var G__13979 = acc + 1;
      s = G__13978;
      acc = G__13979;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var args13984 = [];
  var len__5565__auto___13987 = arguments.length;
  var i__5566__auto___13988 = 0;
  while (true) {
    if (i__5566__auto___13988 < len__5565__auto___13987) {
      args13984.push(arguments[i__5566__auto___13988]);
      var G__13989 = i__5566__auto___13988 + 1;
      i__5566__auto___13988 = G__13989;
      continue;
    } else {
    }
    break;
  }
  var G__13986 = args13984.length;
  switch(G__13986) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13984.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__13991 = cljs.core.next(coll);
            var G__13992 = n - 1;
            coll = G__13991;
            n = G__13992;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__13993 = cljs.core.next(coll);
            var G__13994 = n - 1;
            var G__13995 = not_found;
            coll = G__13993;
            n = G__13994;
            not_found = G__13995;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var args13996 = [];
  var len__5565__auto___14003 = arguments.length;
  var i__5566__auto___14004 = 0;
  while (true) {
    if (i__5566__auto___14004 < len__5565__auto___14003) {
      args13996.push(arguments[i__5566__auto___14004]);
      var G__14005 = i__5566__auto___14004 + 1;
      i__5566__auto___14004 = G__14005;
      continue;
    } else {
    }
    break;
  }
  var G__13998 = args13996.length;
  switch(G__13998) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13996.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__14007 = n__$1 - 1;
      var G__14008 = cljs.core.rest(xs);
      n__$1 = G__14007;
      xs = G__14008;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var args14009 = [];
  var len__5565__auto___14014 = arguments.length;
  var i__5566__auto___14015 = 0;
  while (true) {
    if (i__5566__auto___14015 < len__5565__auto___14014) {
      args14009.push(arguments[i__5566__auto___14015]);
      var G__14016 = i__5566__auto___14015 + 1;
      i__5566__auto___14015 = G__14016;
      continue;
    } else {
    }
    break;
  }
  var G__14011 = args14009.length;
  switch(G__14011) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14009.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var args14018 = [];
  var len__5565__auto___14025 = arguments.length;
  var i__5566__auto___14026 = 0;
  while (true) {
    if (i__5566__auto___14026 < len__5565__auto___14025) {
      args14018.push(arguments[i__5566__auto___14026]);
      var G__14027 = i__5566__auto___14026 + 1;
      i__5566__auto___14026 = G__14027;
      continue;
    } else {
    }
    break;
  }
  var G__14024 = args14018.length;
  switch(G__14024) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14018.slice(3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__14029 = ret;
      var G__14030 = cljs.core.first(kvs);
      var G__14031 = cljs.core.second(kvs);
      var G__14032 = cljs.core.nnext(kvs);
      coll = G__14029;
      k = G__14030;
      v = G__14031;
      kvs = G__14032;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq14019) {
  var G__14020 = cljs.core.first(seq14019);
  var seq14019__$1 = cljs.core.next(seq14019);
  var G__14021 = cljs.core.first(seq14019__$1);
  var seq14019__$2 = cljs.core.next(seq14019__$1);
  var G__14022 = cljs.core.first(seq14019__$2);
  var seq14019__$3 = cljs.core.next(seq14019__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__14020, G__14021, G__14022, seq14019__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var args14033 = [];
  var len__5565__auto___14039 = arguments.length;
  var i__5566__auto___14040 = 0;
  while (true) {
    if (i__5566__auto___14040 < len__5565__auto___14039) {
      args14033.push(arguments[i__5566__auto___14040]);
      var G__14041 = i__5566__auto___14040 + 1;
      i__5566__auto___14040 = G__14041;
      continue;
    } else {
    }
    break;
  }
  var G__14038 = args14033.length;
  switch(G__14038) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14033.slice(2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__14043 = ret;
        var G__14044 = cljs.core.first(ks);
        var G__14045 = cljs.core.next(ks);
        coll = G__14043;
        k = G__14044;
        ks = G__14045;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq14034) {
  var G__14035 = cljs.core.first(seq14034);
  var seq14034__$1 = cljs.core.next(seq14034);
  var G__14036 = cljs.core.first(seq14034__$1);
  var seq14034__$2 = cljs.core.next(seq14034__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__14035, G__14036, seq14034__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4526__auto__ = goog.isFunction(f);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__14051 = null;
  var G__14051__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__14051__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__14051__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__14051__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__14051__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__14051__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__14051__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__14051__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__14051__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__14051__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__14051__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__14051__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__14051__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__14051__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__14051__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__14051__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__14051__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__14051__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__14051__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__14051__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__14051__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__14051__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__14051 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__14051__1.call(this, self__);
      case 2:
        return G__14051__2.call(this, self__, a);
      case 3:
        return G__14051__3.call(this, self__, a, b);
      case 4:
        return G__14051__4.call(this, self__, a, b, c);
      case 5:
        return G__14051__5.call(this, self__, a, b, c, d);
      case 6:
        return G__14051__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__14051__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__14051__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__14051__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__14051__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__14051__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__14051__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__14051__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__14051__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__14051__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__14051__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__14051__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__14051__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__14051__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__14051__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__14051__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__14051__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14051.cljs$core$IFn$_invoke$arity$1 = G__14051__1;
  G__14051.cljs$core$IFn$_invoke$arity$2 = G__14051__2;
  G__14051.cljs$core$IFn$_invoke$arity$3 = G__14051__3;
  G__14051.cljs$core$IFn$_invoke$arity$4 = G__14051__4;
  G__14051.cljs$core$IFn$_invoke$arity$5 = G__14051__5;
  G__14051.cljs$core$IFn$_invoke$arity$6 = G__14051__6;
  G__14051.cljs$core$IFn$_invoke$arity$7 = G__14051__7;
  G__14051.cljs$core$IFn$_invoke$arity$8 = G__14051__8;
  G__14051.cljs$core$IFn$_invoke$arity$9 = G__14051__9;
  G__14051.cljs$core$IFn$_invoke$arity$10 = G__14051__10;
  G__14051.cljs$core$IFn$_invoke$arity$11 = G__14051__11;
  G__14051.cljs$core$IFn$_invoke$arity$12 = G__14051__12;
  G__14051.cljs$core$IFn$_invoke$arity$13 = G__14051__13;
  G__14051.cljs$core$IFn$_invoke$arity$14 = G__14051__14;
  G__14051.cljs$core$IFn$_invoke$arity$15 = G__14051__15;
  G__14051.cljs$core$IFn$_invoke$arity$16 = G__14051__16;
  G__14051.cljs$core$IFn$_invoke$arity$17 = G__14051__17;
  G__14051.cljs$core$IFn$_invoke$arity$18 = G__14051__18;
  G__14051.cljs$core$IFn$_invoke$arity$19 = G__14051__19;
  G__14051.cljs$core$IFn$_invoke$arity$20 = G__14051__20;
  G__14051.cljs$core$IFn$_invoke$arity$21 = G__14051__21;
  G__14051.cljs$core$IFn$_invoke$arity$22 = G__14051__22;
  return G__14051;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args14050) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14050)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4514__auto__ = !(o == null);
    if (and__4514__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4514__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var args14056 = [];
  var len__5565__auto___14062 = arguments.length;
  var i__5566__auto___14063 = 0;
  while (true) {
    if (i__5566__auto___14063 < len__5565__auto___14062) {
      args14056.push(arguments[i__5566__auto___14063]);
      var G__14064 = i__5566__auto___14063 + 1;
      i__5566__auto___14063 = G__14064;
      continue;
    } else {
    }
    break;
  }
  var G__14061 = args14056.length;
  switch(G__14061) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14056.slice(2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__14066 = ret;
        var G__14067 = cljs.core.first(ks);
        var G__14068 = cljs.core.next(ks);
        coll = G__14066;
        k = G__14067;
        ks = G__14068;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq14057) {
  var G__14058 = cljs.core.first(seq14057);
  var seq14057__$1 = cljs.core.next(seq14057);
  var G__14059 = cljs.core.first(seq14057__$1);
  var seq14057__$2 = cljs.core.next(seq14057__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__14058, G__14059, seq14057__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var args14089 = [];
  var len__5565__auto___14095 = arguments.length;
  var i__5566__auto___14096 = 0;
  while (true) {
    if (i__5566__auto___14096 < len__5565__auto___14095) {
      args14089.push(arguments[i__5566__auto___14096]);
      var G__14097 = i__5566__auto___14096 + 1;
      i__5566__auto___14096 = G__14097;
      continue;
    } else {
    }
    break;
  }
  var G__14092 = args14089.length;
  switch(G__14092) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14089.slice(0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5584__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq14090) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14090));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__14101_14103 = obj;
  var G__14102_14104 = function(G__14101_14103, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__14101_14103, keys);
  goog.object.forEach(G__14101_14103, G__14102_14104);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__14105 = i__$1 + 1;
      var G__14106 = j__$1 + 1;
      var G__14107 = len__$1 - 1;
      i__$1 = G__14105;
      j__$1 = G__14106;
      len__$1 = G__14107;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__14108 = i__$1 - 1;
      var G__14109 = j__$1 - 1;
      var G__14110 = len__$1 - 1;
      i__$1 = G__14108;
      j__$1 = G__14109;
      len__$1 = G__14110;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4526__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var args14121 = [];
  var len__5565__auto___14127 = arguments.length;
  var i__5566__auto___14128 = 0;
  while (true) {
    if (i__5566__auto___14128 < len__5565__auto___14127) {
      args14121.push(arguments[i__5566__auto___14128]);
      var G__14129 = i__5566__auto___14128 + 1;
      i__5566__auto___14128 = G__14129;
      continue;
    } else {
    }
    break;
  }
  var G__14126 = args14121.length;
  switch(G__14126) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14121.slice(2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__14131 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__14132 = etc;
          s = G__14131;
          xs = G__14132;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq14122) {
  var G__14123 = cljs.core.first(seq14122);
  var seq14122__$1 = cljs.core.next(seq14122);
  var G__14124 = cljs.core.first(seq14122__$1);
  var seq14122__$2 = cljs.core.next(seq14122__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__14123, G__14124, seq14122__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var args14135 = [];
  var len__5565__auto___14138 = arguments.length;
  var i__5566__auto___14139 = 0;
  while (true) {
    if (i__5566__auto___14139 < len__5565__auto___14138) {
      args14135.push(arguments[i__5566__auto___14139]);
      var G__14140 = i__5566__auto___14139 + 1;
      i__5566__auto___14139 = G__14140;
      continue;
    } else {
    }
    break;
  }
  var G__14137 = args14135.length;
  switch(G__14137) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14135.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__14142 = xs;
      var G__14143 = ys;
      var G__14144 = len;
      var G__14145 = n + 1;
      xs = G__14142;
      ys = G__14143;
      len = G__14144;
      n = G__14145;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var args14146 = [];
  var len__5565__auto___14151 = arguments.length;
  var i__5566__auto___14152 = 0;
  while (true) {
    if (i__5566__auto___14152 < len__5565__auto___14151) {
      args14146.push(arguments[i__5566__auto___14152]);
      var G__14153 = i__5566__auto___14152 + 1;
      i__5566__auto___14152 = G__14153;
      continue;
    } else {
    }
    break;
  }
  var G__14148 = args14146.length;
  switch(G__14148) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14146.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__14149_14155 = a;
    var G__14150_14156 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__14149_14155, G__14150_14156);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var args14157 = [];
  var len__5565__auto___14160 = arguments.length;
  var i__5566__auto___14161 = 0;
  while (true) {
    if (i__5566__auto___14161 < len__5565__auto___14160) {
      args14157.push(arguments[i__5566__auto___14161]);
      var G__14162 = i__5566__auto___14161 + 1;
      i__5566__auto___14161 = G__14162;
      continue;
    } else {
    }
    break;
  }
  var G__14159 = args14157.length;
  switch(G__14159) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14157.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var args14164 = [];
  var len__5565__auto___14172 = arguments.length;
  var i__5566__auto___14173 = 0;
  while (true) {
    if (i__5566__auto___14173 < len__5565__auto___14172) {
      args14164.push(arguments[i__5566__auto___14173]);
      var G__14174 = i__5566__auto___14173 + 1;
      i__5566__auto___14173 = G__14174;
      continue;
    } else {
    }
    break;
  }
  var G__14166 = args14164.length;
  switch(G__14166) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14164.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__14167 = f;
    var G__14168 = cljs.core.first(s);
    var G__14169 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__14167, G__14168, G__14169) : cljs.core.reduce.call(null, G__14167, G__14168, G__14169);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__14170 = val__$1;
        var G__14171 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14170, G__14171) : f.call(null, G__14170, G__14171);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__14176 = nval;
        var G__14177 = cljs.core.next(coll__$1);
        val__$1 = G__14176;
        coll__$1 = G__14177;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce() {
  var args14178 = [];
  var len__5565__auto___14183 = arguments.length;
  var i__5566__auto___14184 = 0;
  while (true) {
    if (i__5566__auto___14184 < len__5565__auto___14183) {
      args14178.push(arguments[i__5566__auto___14184]);
      var G__14185 = i__5566__auto___14184 + 1;
      i__5566__auto___14184 = G__14185;
      continue;
    } else {
    }
    break;
  }
  var G__14180 = args14178.length;
  switch(G__14180) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14178.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var args14187 = [];
  var len__5565__auto___14190 = arguments.length;
  var i__5566__auto___14191 = 0;
  while (true) {
    if (i__5566__auto___14191 < len__5565__auto___14190) {
      args14187.push(arguments[i__5566__auto___14191]);
      var G__14192 = i__5566__auto___14191 + 1;
      i__5566__auto___14191 = G__14192;
      continue;
    } else {
    }
    break;
  }
  var G__14189 = args14187.length;
  switch(G__14189) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14187.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__14194 = null;
    var G__14194__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__14194__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__14194__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__14194 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__14194__0.call(this);
        case 1:
          return G__14194__1.call(this, x);
        case 2:
          return G__14194__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14194.cljs$core$IFn$_invoke$arity$0 = G__14194__0;
    G__14194.cljs$core$IFn$_invoke$arity$1 = G__14194__1;
    G__14194.cljs$core$IFn$_invoke$arity$2 = G__14194__2;
    return G__14194;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var args14195 = [];
  var len__5565__auto___14198 = arguments.length;
  var i__5566__auto___14199 = 0;
  while (true) {
    if (i__5566__auto___14199 < len__5565__auto___14198) {
      args14195.push(arguments[i__5566__auto___14199]);
      var G__14200 = i__5566__auto___14199 + 1;
      i__5566__auto___14199 = G__14200;
      continue;
    } else {
    }
    break;
  }
  var G__14197 = args14195.length;
  switch(G__14197) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14195.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var args14202 = [];
  var len__5565__auto___14208 = arguments.length;
  var i__5566__auto___14209 = 0;
  while (true) {
    if (i__5566__auto___14209 < len__5565__auto___14208) {
      args14202.push(arguments[i__5566__auto___14209]);
      var G__14210 = i__5566__auto___14209 + 1;
      i__5566__auto___14209 = G__14210;
      continue;
    } else {
    }
    break;
  }
  var G__14207 = args14202.length;
  switch(G__14207) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14202.slice(2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq14203) {
  var G__14204 = cljs.core.first(seq14203);
  var seq14203__$1 = cljs.core.next(seq14203);
  var G__14205 = cljs.core.first(seq14203__$1);
  var seq14203__$2 = cljs.core.next(seq14203__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__14204, G__14205, seq14203__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var args14212 = [];
  var len__5565__auto___14218 = arguments.length;
  var i__5566__auto___14219 = 0;
  while (true) {
    if (i__5566__auto___14219 < len__5565__auto___14218) {
      args14212.push(arguments[i__5566__auto___14219]);
      var G__14220 = i__5566__auto___14219 + 1;
      i__5566__auto___14219 = G__14220;
      continue;
    } else {
    }
    break;
  }
  var G__14217 = args14212.length;
  switch(G__14217) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14212.slice(2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq14213) {
  var G__14214 = cljs.core.first(seq14213);
  var seq14213__$1 = cljs.core.next(seq14213);
  var G__14215 = cljs.core.first(seq14213__$1);
  var seq14213__$2 = cljs.core.next(seq14213__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__14214, G__14215, seq14213__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var args14222 = [];
  var len__5565__auto___14228 = arguments.length;
  var i__5566__auto___14229 = 0;
  while (true) {
    if (i__5566__auto___14229 < len__5565__auto___14228) {
      args14222.push(arguments[i__5566__auto___14229]);
      var G__14230 = i__5566__auto___14229 + 1;
      i__5566__auto___14229 = G__14230;
      continue;
    } else {
    }
    break;
  }
  var G__14227 = args14222.length;
  switch(G__14227) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14222.slice(2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq14223) {
  var G__14224 = cljs.core.first(seq14223);
  var seq14223__$1 = cljs.core.next(seq14223);
  var G__14225 = cljs.core.first(seq14223__$1);
  var seq14223__$2 = cljs.core.next(seq14223__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__14224, G__14225, seq14223__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var args14232 = [];
  var len__5565__auto___14238 = arguments.length;
  var i__5566__auto___14239 = 0;
  while (true) {
    if (i__5566__auto___14239 < len__5565__auto___14238) {
      args14232.push(arguments[i__5566__auto___14239]);
      var G__14240 = i__5566__auto___14239 + 1;
      i__5566__auto___14239 = G__14240;
      continue;
    } else {
    }
    break;
  }
  var G__14237 = args14232.length;
  switch(G__14237) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14232.slice(2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq14233) {
  var G__14234 = cljs.core.first(seq14233);
  var seq14233__$1 = cljs.core.next(seq14233);
  var G__14235 = cljs.core.first(seq14233__$1);
  var seq14233__$2 = cljs.core.next(seq14233__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__14234, G__14235, seq14233__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var args14242 = [];
  var len__5565__auto___14248 = arguments.length;
  var i__5566__auto___14249 = 0;
  while (true) {
    if (i__5566__auto___14249 < len__5565__auto___14248) {
      args14242.push(arguments[i__5566__auto___14249]);
      var G__14250 = i__5566__auto___14249 + 1;
      i__5566__auto___14249 = G__14250;
      continue;
    } else {
    }
    break;
  }
  var G__14247 = args14242.length;
  switch(G__14247) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14242.slice(2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__14252 = y;
        var G__14253 = cljs.core.first(more);
        var G__14254 = cljs.core.next(more);
        x = G__14252;
        y = G__14253;
        more = G__14254;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq14243) {
  var G__14244 = cljs.core.first(seq14243);
  var seq14243__$1 = cljs.core.next(seq14243);
  var G__14245 = cljs.core.first(seq14243__$1);
  var seq14243__$2 = cljs.core.next(seq14243__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__14244, G__14245, seq14243__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var args14255 = [];
  var len__5565__auto___14261 = arguments.length;
  var i__5566__auto___14262 = 0;
  while (true) {
    if (i__5566__auto___14262 < len__5565__auto___14261) {
      args14255.push(arguments[i__5566__auto___14262]);
      var G__14263 = i__5566__auto___14262 + 1;
      i__5566__auto___14262 = G__14263;
      continue;
    } else {
    }
    break;
  }
  var G__14260 = args14255.length;
  switch(G__14260) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14255.slice(2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__14265 = y;
        var G__14266 = cljs.core.first(more);
        var G__14267 = cljs.core.next(more);
        x = G__14265;
        y = G__14266;
        more = G__14267;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq14256) {
  var G__14257 = cljs.core.first(seq14256);
  var seq14256__$1 = cljs.core.next(seq14256);
  var G__14258 = cljs.core.first(seq14256__$1);
  var seq14256__$2 = cljs.core.next(seq14256__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__14257, G__14258, seq14256__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var args14268 = [];
  var len__5565__auto___14274 = arguments.length;
  var i__5566__auto___14275 = 0;
  while (true) {
    if (i__5566__auto___14275 < len__5565__auto___14274) {
      args14268.push(arguments[i__5566__auto___14275]);
      var G__14276 = i__5566__auto___14275 + 1;
      i__5566__auto___14275 = G__14276;
      continue;
    } else {
    }
    break;
  }
  var G__14273 = args14268.length;
  switch(G__14273) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14268.slice(2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__14278 = y;
        var G__14279 = cljs.core.first(more);
        var G__14280 = cljs.core.next(more);
        x = G__14278;
        y = G__14279;
        more = G__14280;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq14269) {
  var G__14270 = cljs.core.first(seq14269);
  var seq14269__$1 = cljs.core.next(seq14269);
  var G__14271 = cljs.core.first(seq14269__$1);
  var seq14269__$2 = cljs.core.next(seq14269__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__14270, G__14271, seq14269__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var args14281 = [];
  var len__5565__auto___14287 = arguments.length;
  var i__5566__auto___14288 = 0;
  while (true) {
    if (i__5566__auto___14288 < len__5565__auto___14287) {
      args14281.push(arguments[i__5566__auto___14288]);
      var G__14289 = i__5566__auto___14288 + 1;
      i__5566__auto___14288 = G__14289;
      continue;
    } else {
    }
    break;
  }
  var G__14286 = args14281.length;
  switch(G__14286) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14281.slice(2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__14291 = y;
        var G__14292 = cljs.core.first(more);
        var G__14293 = cljs.core.next(more);
        x = G__14291;
        y = G__14292;
        more = G__14293;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq14282) {
  var G__14283 = cljs.core.first(seq14282);
  var seq14282__$1 = cljs.core.next(seq14282);
  var G__14284 = cljs.core.first(seq14282__$1);
  var seq14282__$2 = cljs.core.next(seq14282__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__14283, G__14284, seq14282__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var args14294 = [];
  var len__5565__auto___14300 = arguments.length;
  var i__5566__auto___14301 = 0;
  while (true) {
    if (i__5566__auto___14301 < len__5565__auto___14300) {
      args14294.push(arguments[i__5566__auto___14301]);
      var G__14302 = i__5566__auto___14301 + 1;
      i__5566__auto___14301 = G__14302;
      continue;
    } else {
    }
    break;
  }
  var G__14299 = args14294.length;
  switch(G__14299) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14294.slice(2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4838__auto__ = x;
  var y__4839__auto__ = y;
  return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4838__auto__ = x;
    var y__4839__auto__ = y;
    return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq14295) {
  var G__14296 = cljs.core.first(seq14295);
  var seq14295__$1 = cljs.core.next(seq14295);
  var G__14297 = cljs.core.first(seq14295__$1);
  var seq14295__$2 = cljs.core.next(seq14295__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__14296, G__14297, seq14295__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var args14304 = [];
  var len__5565__auto___14310 = arguments.length;
  var i__5566__auto___14311 = 0;
  while (true) {
    if (i__5566__auto___14311 < len__5565__auto___14310) {
      args14304.push(arguments[i__5566__auto___14311]);
      var G__14312 = i__5566__auto___14311 + 1;
      i__5566__auto___14311 = G__14312;
      continue;
    } else {
    }
    break;
  }
  var G__14309 = args14304.length;
  switch(G__14309) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14304.slice(2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4845__auto__ = x;
  var y__4846__auto__ = y;
  return x__4845__auto__ < y__4846__auto__ ? x__4845__auto__ : y__4846__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4845__auto__ = x;
    var y__4846__auto__ = y;
    return x__4845__auto__ < y__4846__auto__ ? x__4845__auto__ : y__4846__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq14305) {
  var G__14306 = cljs.core.first(seq14305);
  var seq14305__$1 = cljs.core.next(seq14305);
  var G__14307 = cljs.core.first(seq14305__$1);
  var seq14305__$2 = cljs.core.next(seq14305__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__14306, G__14307, seq14305__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var args14314 = [];
  var len__5565__auto___14320 = arguments.length;
  var i__5566__auto___14321 = 0;
  while (true) {
    if (i__5566__auto___14321 < len__5565__auto___14320) {
      args14314.push(arguments[i__5566__auto___14321]);
      var G__14322 = i__5566__auto___14321 + 1;
      i__5566__auto___14321 = G__14322;
      continue;
    } else {
    }
    break;
  }
  var G__14319 = args14314.length;
  switch(G__14319) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14314.slice(2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq14315) {
  var G__14316 = cljs.core.first(seq14315);
  var seq14315__$1 = cljs.core.next(seq14315);
  var G__14317 = cljs.core.first(seq14315__$1);
  var seq14315__$2 = cljs.core.next(seq14315__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__14316, G__14317, seq14315__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var args14324 = [];
  var len__5565__auto___14330 = arguments.length;
  var i__5566__auto___14331 = 0;
  while (true) {
    if (i__5566__auto___14331 < len__5565__auto___14330) {
      args14324.push(arguments[i__5566__auto___14331]);
      var G__14332 = i__5566__auto___14331 + 1;
      i__5566__auto___14331 = G__14332;
      continue;
    } else {
    }
    break;
  }
  var G__14329 = args14324.length;
  switch(G__14329) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14324.slice(2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq14325) {
  var G__14326 = cljs.core.first(seq14325);
  var seq14325__$1 = cljs.core.next(seq14325);
  var G__14327 = cljs.core.first(seq14325__$1);
  var seq14325__$2 = cljs.core.next(seq14325__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__14326, G__14327, seq14325__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var args14334 = [];
  var len__5565__auto___14340 = arguments.length;
  var i__5566__auto___14341 = 0;
  while (true) {
    if (i__5566__auto___14341 < len__5565__auto___14340) {
      args14334.push(arguments[i__5566__auto___14341]);
      var G__14342 = i__5566__auto___14341 + 1;
      i__5566__auto___14341 = G__14342;
      continue;
    } else {
    }
    break;
  }
  var G__14339 = args14334.length;
  switch(G__14339) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14334.slice(2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq14335) {
  var G__14336 = cljs.core.first(seq14335);
  var seq14335__$1 = cljs.core.next(seq14335);
  var G__14337 = cljs.core.first(seq14335__$1);
  var seq14335__$2 = cljs.core.next(seq14335__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__14336, G__14337, seq14335__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var args14344 = [];
  var len__5565__auto___14350 = arguments.length;
  var i__5566__auto___14351 = 0;
  while (true) {
    if (i__5566__auto___14351 < len__5565__auto___14350) {
      args14344.push(arguments[i__5566__auto___14351]);
      var G__14352 = i__5566__auto___14351 + 1;
      i__5566__auto___14351 = G__14352;
      continue;
    } else {
    }
    break;
  }
  var G__14349 = args14344.length;
  switch(G__14349) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14344.slice(2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq14345) {
  var G__14346 = cljs.core.first(seq14345);
  var seq14345__$1 = cljs.core.next(seq14345);
  var G__14347 = cljs.core.first(seq14345__$1);
  var seq14345__$2 = cljs.core.next(seq14345__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__14346, G__14347, seq14345__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var args14354 = [];
  var len__5565__auto___14360 = arguments.length;
  var i__5566__auto___14361 = 0;
  while (true) {
    if (i__5566__auto___14361 < len__5565__auto___14360) {
      args14354.push(arguments[i__5566__auto___14361]);
      var G__14362 = i__5566__auto___14361 + 1;
      i__5566__auto___14361 = G__14362;
      continue;
    } else {
    }
    break;
  }
  var G__14359 = args14354.length;
  switch(G__14359) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14354.slice(2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq14355) {
  var G__14356 = cljs.core.first(seq14355);
  var seq14355__$1 = cljs.core.next(seq14355);
  var G__14357 = cljs.core.first(seq14355__$1);
  var seq14355__$2 = cljs.core.next(seq14355__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__14356, G__14357, seq14355__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var args14364 = [];
  var len__5565__auto___14370 = arguments.length;
  var i__5566__auto___14371 = 0;
  while (true) {
    if (i__5566__auto___14371 < len__5565__auto___14370) {
      args14364.push(arguments[i__5566__auto___14371]);
      var G__14372 = i__5566__auto___14371 + 1;
      i__5566__auto___14371 = G__14372;
      continue;
    } else {
    }
    break;
  }
  var G__14369 = args14364.length;
  switch(G__14369) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14364.slice(2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq14365) {
  var G__14366 = cljs.core.first(seq14365);
  var seq14365__$1 = cljs.core.next(seq14365);
  var G__14367 = cljs.core.first(seq14365__$1);
  var seq14365__$2 = cljs.core.next(seq14365__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__14366, G__14367, seq14365__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var args14374 = [];
  var len__5565__auto___14380 = arguments.length;
  var i__5566__auto___14381 = 0;
  while (true) {
    if (i__5566__auto___14381 < len__5565__auto___14380) {
      args14374.push(arguments[i__5566__auto___14381]);
      var G__14382 = i__5566__auto___14381 + 1;
      i__5566__auto___14381 = G__14382;
      continue;
    } else {
    }
    break;
  }
  var G__14379 = args14374.length;
  switch(G__14379) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14374.slice(2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq14375) {
  var G__14376 = cljs.core.first(seq14375);
  var seq14375__$1 = cljs.core.next(seq14375);
  var G__14377 = cljs.core.first(seq14375__$1);
  var seq14375__$2 = cljs.core.next(seq14375__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__14376, G__14377, seq14375__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var args14384 = [];
  var len__5565__auto___14390 = arguments.length;
  var i__5566__auto___14391 = 0;
  while (true) {
    if (i__5566__auto___14391 < len__5565__auto___14390) {
      args14384.push(arguments[i__5566__auto___14391]);
      var G__14392 = i__5566__auto___14391 + 1;
      i__5566__auto___14391 = G__14392;
      continue;
    } else {
    }
    break;
  }
  var G__14389 = args14384.length;
  switch(G__14389) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14384.slice(2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq14385) {
  var G__14386 = cljs.core.first(seq14385);
  var seq14385__$1 = cljs.core.next(seq14385);
  var G__14387 = cljs.core.first(seq14385__$1);
  var seq14385__$2 = cljs.core.next(seq14385__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__14386, G__14387, seq14385__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var args14394 = [];
  var len__5565__auto___14400 = arguments.length;
  var i__5566__auto___14401 = 0;
  while (true) {
    if (i__5566__auto___14401 < len__5565__auto___14400) {
      args14394.push(arguments[i__5566__auto___14401]);
      var G__14402 = i__5566__auto___14401 + 1;
      i__5566__auto___14401 = G__14402;
      continue;
    } else {
    }
    break;
  }
  var G__14399 = args14394.length;
  switch(G__14399) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14394.slice(2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq14395) {
  var G__14396 = cljs.core.first(seq14395);
  var seq14395__$1 = cljs.core.next(seq14395);
  var G__14397 = cljs.core.first(seq14395__$1);
  var seq14395__$2 = cljs.core.next(seq14395__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__14396, G__14397, seq14395__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var args14404 = [];
  var len__5565__auto___14410 = arguments.length;
  var i__5566__auto___14411 = 0;
  while (true) {
    if (i__5566__auto___14411 < len__5565__auto___14410) {
      args14404.push(arguments[i__5566__auto___14411]);
      var G__14412 = i__5566__auto___14411 + 1;
      i__5566__auto___14411 = G__14412;
      continue;
    } else {
    }
    break;
  }
  var G__14409 = args14404.length;
  switch(G__14409) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14404.slice(2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq14405) {
  var G__14406 = cljs.core.first(seq14405);
  var seq14405__$1 = cljs.core.next(seq14405);
  var G__14407 = cljs.core.first(seq14405__$1);
  var seq14405__$2 = cljs.core.next(seq14405__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__14406, G__14407, seq14405__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var args14414 = [];
  var len__5565__auto___14420 = arguments.length;
  var i__5566__auto___14421 = 0;
  while (true) {
    if (i__5566__auto___14421 < len__5565__auto___14420) {
      args14414.push(arguments[i__5566__auto___14421]);
      var G__14422 = i__5566__auto___14421 + 1;
      i__5566__auto___14421 = G__14422;
      continue;
    } else {
    }
    break;
  }
  var G__14419 = args14414.length;
  switch(G__14419) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14414.slice(2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq14415) {
  var G__14416 = cljs.core.first(seq14415);
  var seq14415__$1 = cljs.core.next(seq14415);
  var G__14417 = cljs.core.first(seq14415__$1);
  var seq14415__$2 = cljs.core.next(seq14415__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__14416, G__14417, seq14415__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var args14424 = [];
  var len__5565__auto___14430 = arguments.length;
  var i__5566__auto___14431 = 0;
  while (true) {
    if (i__5566__auto___14431 < len__5565__auto___14430) {
      args14424.push(arguments[i__5566__auto___14431]);
      var G__14432 = i__5566__auto___14431 + 1;
      i__5566__auto___14431 = G__14432;
      continue;
    } else {
    }
    break;
  }
  var G__14429 = args14424.length;
  switch(G__14429) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14424.slice(2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__14434 = y;
        var G__14435 = cljs.core.first(more);
        var G__14436 = cljs.core.next(more);
        x = G__14434;
        y = G__14435;
        more = G__14436;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq14425) {
  var G__14426 = cljs.core.first(seq14425);
  var seq14425__$1 = cljs.core.next(seq14425);
  var G__14427 = cljs.core.first(seq14425__$1);
  var seq14425__$2 = cljs.core.next(seq14425__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__14426, G__14427, seq14425__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__14437 = n__$1 - 1;
      var G__14438 = cljs.core.next(xs);
      n__$1 = G__14437;
      xs = G__14438;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var args14439 = [];
  var len__5565__auto___14444 = arguments.length;
  var i__5566__auto___14445 = 0;
  while (true) {
    if (i__5566__auto___14445 < len__5565__auto___14444) {
      args14439.push(arguments[i__5566__auto___14445]);
      var G__14446 = i__5566__auto___14445 + 1;
      i__5566__auto___14445 = G__14446;
      continue;
    } else {
    }
    break;
  }
  var G__14443 = args14439.length;
  switch(G__14443) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14439.slice(1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__14448 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__14449 = cljs.core.next(more);
      sb = G__14448;
      more = G__14449;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq14440) {
  var G__14441 = cljs.core.first(seq14440);
  var seq14440__$1 = cljs.core.next(seq14440);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__14441, seq14440__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var args14450 = [];
  var len__5565__auto___14453 = arguments.length;
  var i__5566__auto___14454 = 0;
  while (true) {
    if (i__5566__auto___14454 < len__5565__auto___14453) {
      args14450.push(arguments[i__5566__auto___14454]);
      var G__14455 = i__5566__auto___14454 + 1;
      i__5566__auto___14454 = G__14455;
      continue;
    } else {
    }
    break;
  }
  var G__14452 = args14450.length;
  switch(G__14452) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14450.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__14457 = cljs.core.next(xs);
            var G__14458 = cljs.core.next(ys);
            xs = G__14457;
            ys = G__14458;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__14459 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__14460 = cljs.core.next(s);
        res = G__14459;
        s = G__14460;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__14461 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__14462 = cljs.core.next(s);
      h = G__14461;
      s = G__14462;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__14463 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__14464 = cljs.core.next(s__$1);
      h = G__14463;
      s__$1 = G__14464;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__14471_14477 = cljs.core.seq(fn_map);
  var chunk__14472_14478 = null;
  var count__14473_14479 = 0;
  var i__14474_14480 = 0;
  while (true) {
    if (i__14474_14480 < count__14473_14479) {
      var vec__14475_14481 = chunk__14472_14478.cljs$core$IIndexed$_nth$arity$2(null, i__14474_14480);
      var key_name_14482 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14475_14481, 0, null);
      var f_14483 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14475_14481, 1, null);
      var str_name_14484 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_14482) : cljs.core.name.call(null, key_name_14482);
      obj[str_name_14484] = f_14483;
      var G__14485 = seq__14471_14477;
      var G__14486 = chunk__14472_14478;
      var G__14487 = count__14473_14479;
      var G__14488 = i__14474_14480 + 1;
      seq__14471_14477 = G__14485;
      chunk__14472_14478 = G__14486;
      count__14473_14479 = G__14487;
      i__14474_14480 = G__14488;
      continue;
    } else {
      var temp__4425__auto___14489 = cljs.core.seq(seq__14471_14477);
      if (temp__4425__auto___14489) {
        var seq__14471_14490__$1 = temp__4425__auto___14489;
        if (cljs.core.chunked_seq_QMARK_(seq__14471_14490__$1)) {
          var c__5310__auto___14491 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__14471_14490__$1) : cljs.core.chunk_first.call(null, seq__14471_14490__$1);
          var G__14492 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__14471_14490__$1) : cljs.core.chunk_rest.call(null, seq__14471_14490__$1);
          var G__14493 = c__5310__auto___14491;
          var G__14494 = cljs.core.count(c__5310__auto___14491);
          var G__14495 = 0;
          seq__14471_14477 = G__14492;
          chunk__14472_14478 = G__14493;
          count__14473_14479 = G__14494;
          i__14474_14480 = G__14495;
          continue;
        } else {
          var vec__14476_14496 = cljs.core.first(seq__14471_14490__$1);
          var key_name_14497 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14476_14496, 0, null);
          var f_14498 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14476_14496, 1, null);
          var str_name_14499 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_14497) : cljs.core.name.call(null, key_name_14497);
          obj[str_name_14499] = f_14498;
          var G__14500 = cljs.core.next(seq__14471_14490__$1);
          var G__14501 = null;
          var G__14502 = 0;
          var G__14503 = 0;
          seq__14471_14477 = G__14500;
          chunk__14472_14478 = G__14501;
          count__14473_14479 = G__14502;
          i__14474_14480 = G__14503;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var args__5572__auto__ = [];
  var len__5565__auto___14509 = arguments.length;
  var i__5566__auto___14510 = 0;
  while (true) {
    if (i__5566__auto___14510 < len__5565__auto___14509) {
      args__5572__auto__.push(arguments[i__5566__auto___14510]);
      var G__14511 = i__5566__auto___14510 + 1;
      i__5566__auto___14510 = G__14511;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__14512 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__14512;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__14513 = i - 1;
      var G__14514 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__14513;
      r = G__14514;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq14508) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14508));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4526__auto__ = coll == null;
    if (or__4526__auto__) {
      return or__4526__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = cljs.core.not(a.ns);
      if (and__4514__auto__) {
        return b.ns;
      } else {
        return and__4514__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__14525 = a.ns;
            var G__14526 = b.ns;
            return goog.array.defaultCompare(G__14525, G__14526);
          }();
          if (0 === nsc) {
            var G__14527 = a.name;
            var G__14528 = b.name;
            return goog.array.defaultCompare(G__14527, G__14528);
          } else {
            return nsc;
          }
        }
      } else {
        var G__14529 = a.name;
        var G__14530 = b.name;
        return goog.array.defaultCompare(G__14529, G__14530);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__14532 = null;
  var G__14532__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__14532__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__14532 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14532__2.call(this, self__, coll);
      case 3:
        return G__14532__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14532.cljs$core$IFn$_invoke$arity$2 = G__14532__2;
  G__14532.cljs$core$IFn$_invoke$arity$3 = G__14532__3;
  return G__14532;
}();
cljs.core.Keyword.prototype.apply = function(self__, args14531) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14531)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4942__auto__ = self__._hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var args14535 = [];
  var len__5565__auto___14538 = arguments.length;
  var i__5566__auto___14539 = 0;
  while (true) {
    if (i__5566__auto___14539 < len__5565__auto___14538) {
      args14535.push(arguments[i__5566__auto___14539]);
      var G__14540 = i__5566__auto___14539 + 1;
      i__5566__auto___14539 = G__14540;
      continue;
    } else {
    }
    break;
  }
  var G__14537 = args14535.length;
  switch(G__14537) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14535.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__14542 = ls.sval();
        ls = G__14542;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var args14543 = [];
  var len__5565__auto___14546 = arguments.length;
  var i__5566__auto___14547 = 0;
  while (true) {
    if (i__5566__auto___14547 < len__5565__auto___14546) {
      args14543.push(arguments[i__5566__auto___14547]);
      var G__14548 = i__5566__auto___14547 + 1;
      i__5566__auto___14547 = G__14548;
      continue;
    } else {
    }
    break;
  }
  var G__14545 = args14543.length;
  switch(G__14545) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14543.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__14552 = cljs.core.next(s__$1);
      s__$1 = G__14552;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_14553 = 0;
  var xs_14554 = cljs.core.seq(coll);
  while (true) {
    if (xs_14554) {
      ret[i_14553] = cljs.core.to_array(cljs.core.first(xs_14554));
      var G__14555 = i_14553 + 1;
      var G__14556 = cljs.core.next(xs_14554);
      i_14553 = G__14555;
      xs_14554 = G__14556;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var args14557 = [];
  var len__5565__auto___14560 = arguments.length;
  var i__5566__auto___14561 = 0;
  while (true) {
    if (i__5566__auto___14561 < len__5565__auto___14560) {
      args14557.push(arguments[i__5566__auto___14561]);
      var G__14562 = i__5566__auto___14561 + 1;
      i__5566__auto___14561 = G__14562;
      continue;
    } else {
    }
    break;
  }
  var G__14559 = args14557.length;
  switch(G__14559) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14557.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__14564 = i + 1;
        var G__14565 = cljs.core.next(s__$1);
        i = G__14564;
        s__$1 = G__14565;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5410__auto___14566 = size;
    var i_14567 = 0;
    while (true) {
      if (i_14567 < n__5410__auto___14566) {
        a[i_14567] = init_val_or_seq;
        var G__14568 = i_14567 + 1;
        i_14567 = G__14568;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var args14569 = [];
  var len__5565__auto___14572 = arguments.length;
  var i__5566__auto___14573 = 0;
  while (true) {
    if (i__5566__auto___14573 < len__5565__auto___14572) {
      args14569.push(arguments[i__5566__auto___14573]);
      var G__14574 = i__5566__auto___14573 + 1;
      i__5566__auto___14573 = G__14574;
      continue;
    } else {
    }
    break;
  }
  var G__14571 = args14569.length;
  switch(G__14571) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14569.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__14576 = i + 1;
        var G__14577 = cljs.core.next(s__$1);
        i = G__14576;
        s__$1 = G__14577;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5410__auto___14578 = size;
    var i_14579 = 0;
    while (true) {
      if (i_14579 < n__5410__auto___14578) {
        a[i_14579] = init_val_or_seq;
        var G__14580 = i_14579 + 1;
        i_14579 = G__14580;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var args14581 = [];
  var len__5565__auto___14584 = arguments.length;
  var i__5566__auto___14585 = 0;
  while (true) {
    if (i__5566__auto___14585 < len__5565__auto___14584) {
      args14581.push(arguments[i__5566__auto___14585]);
      var G__14586 = i__5566__auto___14585 + 1;
      i__5566__auto___14585 = G__14586;
      continue;
    } else {
    }
    break;
  }
  var G__14583 = args14581.length;
  switch(G__14583) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14581.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__14588 = i + 1;
        var G__14589 = cljs.core.next(s__$1);
        i = G__14588;
        s__$1 = G__14589;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5410__auto___14590 = size;
    var i_14591 = 0;
    while (true) {
      if (i_14591 < n__5410__auto___14590) {
        a[i_14591] = init_val_or_seq;
        var G__14592 = i_14591 + 1;
        i_14591 = G__14592;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var args14593 = [];
  var len__5565__auto___14596 = arguments.length;
  var i__5566__auto___14597 = 0;
  while (true) {
    if (i__5566__auto___14597 < len__5565__auto___14596) {
      args14593.push(arguments[i__5566__auto___14597]);
      var G__14598 = i__5566__auto___14597 + 1;
      i__5566__auto___14597 = G__14598;
      continue;
    } else {
    }
    break;
  }
  var G__14595 = args14593.length;
  switch(G__14595) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14593.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__14600 = i + 1;
        var G__14601 = cljs.core.next(s__$1);
        i = G__14600;
        s__$1 = G__14601;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5410__auto___14602 = size;
    var i_14603 = 0;
    while (true) {
      if (i_14603 < n__5410__auto___14602) {
        a[i_14603] = init_val_or_seq;
        var G__14604 = i_14603 + 1;
        i_14603 = G__14604;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__14605 = cljs.core.next(s__$1);
        var G__14606 = i - 1;
        var G__14607 = sum + 1;
        s__$1 = G__14605;
        i = G__14606;
        sum = G__14607;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var args14609 = [];
  var len__5565__auto___14621 = arguments.length;
  var i__5566__auto___14622 = 0;
  while (true) {
    if (i__5566__auto___14622 < len__5565__auto___14621) {
      args14609.push(arguments[i__5566__auto___14622]);
      var G__14623 = i__5566__auto___14622 + 1;
      i__5566__auto___14622 = G__14623;
      continue;
    } else {
    }
    break;
  }
  var G__14614 = args14609.length;
  switch(G__14614) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14609.slice(2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq14610) {
  var G__14611 = cljs.core.first(seq14610);
  var seq14610__$1 = cljs.core.next(seq14610);
  var G__14612 = cljs.core.first(seq14610__$1);
  var seq14610__$2 = cljs.core.next(seq14610__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__14611, G__14612, seq14610__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var args14625 = [];
  var len__5565__auto___14633 = arguments.length;
  var i__5566__auto___14634 = 0;
  while (true) {
    if (i__5566__auto___14634 < len__5565__auto___14633) {
      args14625.push(arguments[i__5566__auto___14634]);
      var G__14635 = i__5566__auto___14634 + 1;
      i__5566__auto___14634 = G__14635;
      continue;
    } else {
    }
    break;
  }
  var G__14632 = args14625.length;
  switch(G__14632) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14625.slice(4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq14626) {
  var G__14627 = cljs.core.first(seq14626);
  var seq14626__$1 = cljs.core.next(seq14626);
  var G__14628 = cljs.core.first(seq14626__$1);
  var seq14626__$2 = cljs.core.next(seq14626__$1);
  var G__14629 = cljs.core.first(seq14626__$2);
  var seq14626__$3 = cljs.core.next(seq14626__$2);
  var G__14630 = cljs.core.first(seq14626__$3);
  var seq14626__$4 = cljs.core.next(seq14626__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__14627, G__14628, G__14629, G__14630, seq14626__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var args14637 = [];
  var len__5565__auto___14643 = arguments.length;
  var i__5566__auto___14644 = 0;
  while (true) {
    if (i__5566__auto___14644 < len__5565__auto___14643) {
      args14637.push(arguments[i__5566__auto___14644]);
      var G__14645 = i__5566__auto___14644 + 1;
      i__5566__auto___14644 = G__14645;
      continue;
    } else {
    }
    break;
  }
  var G__14642 = args14637.length;
  switch(G__14642) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14637.slice(2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__14647 = ntcoll;
      var G__14648 = cljs.core.first(vals);
      var G__14649 = cljs.core.next(vals);
      tcoll = G__14647;
      val = G__14648;
      vals = G__14649;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq14638) {
  var G__14639 = cljs.core.first(seq14638);
  var seq14638__$1 = cljs.core.next(seq14638);
  var G__14640 = cljs.core.first(seq14638__$1);
  var seq14638__$2 = cljs.core.next(seq14638__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14639, G__14640, seq14638__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var args14650 = [];
  var len__5565__auto___14657 = arguments.length;
  var i__5566__auto___14658 = 0;
  while (true) {
    if (i__5566__auto___14658 < len__5565__auto___14657) {
      args14650.push(arguments[i__5566__auto___14658]);
      var G__14659 = i__5566__auto___14658 + 1;
      i__5566__auto___14658 = G__14659;
      continue;
    } else {
    }
    break;
  }
  var G__14656 = args14650.length;
  switch(G__14656) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14650.slice(3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__14661 = ntcoll;
      var G__14662 = cljs.core.first(kvs);
      var G__14663 = cljs.core.second(kvs);
      var G__14664 = cljs.core.nnext(kvs);
      tcoll = G__14661;
      key = G__14662;
      val = G__14663;
      kvs = G__14664;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq14651) {
  var G__14652 = cljs.core.first(seq14651);
  var seq14651__$1 = cljs.core.next(seq14651);
  var G__14653 = cljs.core.first(seq14651__$1);
  var seq14651__$2 = cljs.core.next(seq14651__$1);
  var G__14654 = cljs.core.first(seq14651__$2);
  var seq14651__$3 = cljs.core.next(seq14651__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14652, G__14653, G__14654, seq14651__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var args14665 = [];
  var len__5565__auto___14671 = arguments.length;
  var i__5566__auto___14672 = 0;
  while (true) {
    if (i__5566__auto___14672 < len__5565__auto___14671) {
      args14665.push(arguments[i__5566__auto___14672]);
      var G__14673 = i__5566__auto___14672 + 1;
      i__5566__auto___14672 = G__14673;
      continue;
    } else {
    }
    break;
  }
  var G__14670 = args14665.length;
  switch(G__14670) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14665.slice(2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__14675 = ntcoll;
      var G__14676 = cljs.core.first(ks);
      var G__14677 = cljs.core.next(ks);
      tcoll = G__14675;
      key = G__14676;
      ks = G__14677;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq14666) {
  var G__14667 = cljs.core.first(seq14666);
  var seq14666__$1 = cljs.core.next(seq14666);
  var G__14668 = cljs.core.first(seq14666__$1);
  var seq14666__$2 = cljs.core.next(seq14666__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14667, G__14668, seq14666__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var args14678 = [];
  var len__5565__auto___14684 = arguments.length;
  var i__5566__auto___14685 = 0;
  while (true) {
    if (i__5566__auto___14685 < len__5565__auto___14684) {
      args14678.push(arguments[i__5566__auto___14685]);
      var G__14686 = i__5566__auto___14685 + 1;
      i__5566__auto___14685 = G__14686;
      continue;
    } else {
    }
    break;
  }
  var G__14683 = args14678.length;
  switch(G__14683) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14678.slice(2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__14688 = ntcoll;
      var G__14689 = cljs.core.first(vals);
      var G__14690 = cljs.core.next(vals);
      tcoll = G__14688;
      val = G__14689;
      vals = G__14690;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq14679) {
  var G__14680 = cljs.core.first(seq14679);
  var seq14679__$1 = cljs.core.next(seq14679);
  var G__14681 = cljs.core.first(seq14679__$1);
  var seq14679__$2 = cljs.core.next(seq14679__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14680, G__14681, seq14679__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5454 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5454);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a5454) : f.call(null, a5454);
      }
    } else {
      var b5455 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5454, b5455);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a5454, b5455) : f.call(null, a5454, b5455);
        }
      } else {
        var c5456 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5454, b5455, c5456);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a5454, b5455, c5456) : f.call(null, a5454, b5455, c5456);
          }
        } else {
          var d5457 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5454, b5455, c5456, d5457);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a5454, b5455, c5456, d5457) : f.call(null, a5454, b5455, c5456, d5457);
            }
          } else {
            var e5458 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5454, b5455, c5456, d5457, e5458);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a5454, b5455, c5456, d5457, e5458) : f.call(null, a5454, b5455, c5456, d5457, e5458);
              }
            } else {
              var f5459 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5454, b5455, c5456, d5457, e5458, f5459);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a5454, b5455, c5456, d5457, e5458, f5459) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459);
                }
              } else {
                var g5460 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5454, b5455, c5456, d5457, e5458, f5459, g5460);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a5454, b5455, c5456, d5457, e5458, f5459, g5460) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460);
                  }
                } else {
                  var h5461 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461);
                    }
                  } else {
                    var i5462 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462);
                      }
                    } else {
                      var j5463 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463);
                        }
                      } else {
                        var k5464 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464);
                          }
                        } else {
                          var l5465 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465);
                            }
                          } else {
                            var m5466 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466);
                              }
                            } else {
                              var n5467 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467);
                                }
                              } else {
                                var o5468 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468);
                                  }
                                } else {
                                  var p5469 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469);
                                    }
                                  } else {
                                    var q5470 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470);
                                      }
                                    } else {
                                      var r5471 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471);
                                        }
                                      } else {
                                        var s5472 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472);
                                          }
                                        } else {
                                          var t5473 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472, t5473);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472, t5473) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472, t5473);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var args14691 = [];
  var len__5565__auto___14700 = arguments.length;
  var i__5566__auto___14701 = 0;
  while (true) {
    if (i__5566__auto___14701 < len__5565__auto___14700) {
      args14691.push(arguments[i__5566__auto___14701]);
      var G__14702 = i__5566__auto___14701 + 1;
      i__5566__auto___14701 = G__14702;
      continue;
    } else {
    }
    break;
  }
  var G__14699 = args14691.length;
  switch(G__14699) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14691.slice(5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5584__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq14692) {
  var G__14693 = cljs.core.first(seq14692);
  var seq14692__$1 = cljs.core.next(seq14692);
  var G__14694 = cljs.core.first(seq14692__$1);
  var seq14692__$2 = cljs.core.next(seq14692__$1);
  var G__14695 = cljs.core.first(seq14692__$2);
  var seq14692__$3 = cljs.core.next(seq14692__$2);
  var G__14696 = cljs.core.first(seq14692__$3);
  var seq14692__$4 = cljs.core.next(seq14692__$3);
  var G__14697 = cljs.core.first(seq14692__$4);
  var seq14692__$5 = cljs.core.next(seq14692__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__14693, G__14694, G__14695, G__14696, G__14697, seq14692__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var args14704 = [];
  var len__5565__auto___14729 = arguments.length;
  var i__5566__auto___14730 = 0;
  while (true) {
    if (i__5566__auto___14730 < len__5565__auto___14729) {
      args14704.push(arguments[i__5566__auto___14730]);
      var G__14731 = i__5566__auto___14730 + 1;
      i__5566__auto___14730 = G__14731;
      continue;
    } else {
    }
    break;
  }
  var G__14713 = args14704.length;
  switch(G__14713) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14704.slice(6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5584__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__14714 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14714) : f.call(null, G__14714);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__14715 = cljs.core.meta(obj);
    var G__14716 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14715, G__14716) : f.call(null, G__14715, G__14716);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__14717 = cljs.core.meta(obj);
    var G__14718 = a;
    var G__14719 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14717, G__14718, G__14719) : f.call(null, G__14717, G__14718, G__14719);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__14720 = cljs.core.meta(obj);
    var G__14721 = a;
    var G__14722 = b;
    var G__14723 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14720, G__14721, G__14722, G__14723) : f.call(null, G__14720, G__14721, G__14722, G__14723);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__14724 = cljs.core.meta(obj);
    var G__14725 = a;
    var G__14726 = b;
    var G__14727 = c;
    var G__14728 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14724, G__14725, G__14726, G__14727, G__14728) : f.call(null, G__14724, G__14725, G__14726, G__14727, G__14728);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq14705) {
  var G__14706 = cljs.core.first(seq14705);
  var seq14705__$1 = cljs.core.next(seq14705);
  var G__14707 = cljs.core.first(seq14705__$1);
  var seq14705__$2 = cljs.core.next(seq14705__$1);
  var G__14708 = cljs.core.first(seq14705__$2);
  var seq14705__$3 = cljs.core.next(seq14705__$2);
  var G__14709 = cljs.core.first(seq14705__$3);
  var seq14705__$4 = cljs.core.next(seq14705__$3);
  var G__14710 = cljs.core.first(seq14705__$4);
  var seq14705__$5 = cljs.core.next(seq14705__$4);
  var G__14711 = cljs.core.first(seq14705__$5);
  var seq14705__$6 = cljs.core.next(seq14705__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__14706, G__14707, G__14708, G__14709, G__14710, G__14711, seq14705__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var args14733 = [];
  var len__5565__auto___14739 = arguments.length;
  var i__5566__auto___14740 = 0;
  while (true) {
    if (i__5566__auto___14740 < len__5565__auto___14739) {
      args14733.push(arguments[i__5566__auto___14740]);
      var G__14741 = i__5566__auto___14740 + 1;
      i__5566__auto___14740 = G__14741;
      continue;
    } else {
    }
    break;
  }
  var G__14738 = args14733.length;
  switch(G__14738) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14733.slice(2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq14734) {
  var G__14735 = cljs.core.first(seq14734);
  var seq14734__$1 = cljs.core.next(seq14734);
  var G__14736 = cljs.core.first(seq14734__$1);
  var seq14734__$2 = cljs.core.next(seq14734__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__14735, G__14736, seq14734__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t14746 !== "undefined") {
  } else {
    cljs.core.t14746 = function(nil_iter, meta14747) {
      this.nil_iter = nil_iter;
      this.meta14747 = meta14747;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t14746.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14748, meta14747__$1) {
      var self__ = this;
      var _14748__$1 = this;
      return new cljs.core.t14746(self__.nil_iter, meta14747__$1);
    };
    cljs.core.t14746.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14748) {
      var self__ = this;
      var _14748__$1 = this;
      return self__.meta14747;
    };
    cljs.core.t14746.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t14746.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t14746.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t14746.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta14747", "meta14747", -22690298, null)], 
      null);
    };
    cljs.core.t14746.cljs$lang$type = true;
    cljs.core.t14746.cljs$lang$ctorStr = "cljs.core/t14746";
    cljs.core.t14746.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write(writer__5106__auto__, "cljs.core/t14746");
    };
    cljs.core.__GT_t14746 = function cljs$core$nil_iter_$___GT_t14746(nil_iter__$1, meta14747) {
      return new cljs.core.t14746(nil_iter__$1, meta14747);
    };
  }
  return new cljs.core.t14746(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = !(lt.stepper == null);
      if (and__4514__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4514__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__14749 = lt;
        var G__14750 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__14749, G__14750) : self__.xform.call(null, G__14749, G__14750);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__14751 = cljs.core.next(iters__$1);
        iters__$1 = G__14751;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5410__auto___14752 = self__.iters.length;
  var i_14753 = 0;
  while (true) {
    if (i_14753 < n__5410__auto___14752) {
      self__.nexts[i_14753] = self__.iters[i_14753].next();
      var G__14754 = i_14753 + 1;
      i_14753 = G__14754;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = !(lt.stepper == null);
      if (and__4514__auto__) {
        return this$.hasNext();
      } else {
        return and__4514__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var args14755 = [];
  var len__5565__auto___14758 = arguments.length;
  var i__5566__auto___14759 = 0;
  while (true) {
    if (i__5566__auto___14759 < len__5565__auto___14758) {
      args14755.push(arguments[i__5566__auto___14759]);
      var G__14760 = i__5566__auto___14759 + 1;
      i__5566__auto___14759 = G__14760;
      continue;
    } else {
    }
    break;
  }
  var G__14757 = args14755.length;
  switch(G__14757) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14755.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__14762_14766 = cljs.core.seq(colls);
  var chunk__14763_14767 = null;
  var count__14764_14768 = 0;
  var i__14765_14769 = 0;
  while (true) {
    if (i__14765_14769 < count__14764_14768) {
      var coll_14770 = chunk__14763_14767.cljs$core$IIndexed$_nth$arity$2(null, i__14765_14769);
      iters.push(cljs.core.iter(coll_14770));
      var G__14771 = seq__14762_14766;
      var G__14772 = chunk__14763_14767;
      var G__14773 = count__14764_14768;
      var G__14774 = i__14765_14769 + 1;
      seq__14762_14766 = G__14771;
      chunk__14763_14767 = G__14772;
      count__14764_14768 = G__14773;
      i__14765_14769 = G__14774;
      continue;
    } else {
      var temp__4425__auto___14775 = cljs.core.seq(seq__14762_14766);
      if (temp__4425__auto___14775) {
        var seq__14762_14776__$1 = temp__4425__auto___14775;
        if (cljs.core.chunked_seq_QMARK_(seq__14762_14776__$1)) {
          var c__5310__auto___14777 = cljs.core.chunk_first(seq__14762_14776__$1);
          var G__14778 = cljs.core.chunk_rest(seq__14762_14776__$1);
          var G__14779 = c__5310__auto___14777;
          var G__14780 = cljs.core.count(c__5310__auto___14777);
          var G__14781 = 0;
          seq__14762_14766 = G__14778;
          chunk__14763_14767 = G__14779;
          count__14764_14768 = G__14780;
          i__14765_14769 = G__14781;
          continue;
        } else {
          var coll_14782 = cljs.core.first(seq__14762_14776__$1);
          iters.push(cljs.core.iter(coll_14782));
          var G__14783 = cljs.core.next(seq__14762_14776__$1);
          var G__14784 = null;
          var G__14785 = 0;
          var G__14786 = 0;
          seq__14762_14766 = G__14783;
          chunk__14763_14767 = G__14784;
          count__14764_14768 = G__14785;
          i__14765_14769 = G__14786;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var args14787 = [];
  var len__5565__auto___14793 = arguments.length;
  var i__5566__auto___14794 = 0;
  while (true) {
    if (i__5566__auto___14794 < len__5565__auto___14793) {
      args14787.push(arguments[i__5566__auto___14794]);
      var G__14795 = i__5566__auto___14794 + 1;
      i__5566__auto___14794 = G__14795;
      continue;
    } else {
    }
    break;
  }
  var G__14792 = args14787.length;
  switch(G__14792) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14787.slice(2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4526__auto__ = cljs.core.seq(coll);
    if (or__4526__auto__) {
      return or__4526__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq14788) {
  var G__14789 = cljs.core.first(seq14788);
  var seq14788__$1 = cljs.core.next(seq14788);
  var G__14790 = cljs.core.first(seq14788__$1);
  var seq14788__$2 = cljs.core.next(seq14788__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__14789, G__14790, seq14788__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__14798 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14798) : pred.call(null, G__14798);
      }())) {
        var G__14799 = pred;
        var G__14800 = cljs.core.next(coll);
        pred = G__14799;
        coll = G__14800;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4526__auto__ = function() {
        var G__14804 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14804) : pred.call(null, G__14804);
      }();
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var G__14805 = pred;
        var G__14806 = cljs.core.next(coll);
        pred = G__14805;
        coll = G__14806;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__14807 = null;
    var G__14807__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__14807__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__14807__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__14807__3 = function() {
      var G__14808__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__14808 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__14809__i = 0, G__14809__a = new Array(arguments.length - 2);
          while (G__14809__i < G__14809__a.length) {
            G__14809__a[G__14809__i] = arguments[G__14809__i + 2];
            ++G__14809__i;
          }
          zs = new cljs.core.IndexedSeq(G__14809__a, 0);
        }
        return G__14808__delegate.call(this, x, y, zs);
      };
      G__14808.cljs$lang$maxFixedArity = 2;
      G__14808.cljs$lang$applyTo = function(arglist__14810) {
        var x = cljs.core.first(arglist__14810);
        arglist__14810 = cljs.core.next(arglist__14810);
        var y = cljs.core.first(arglist__14810);
        var zs = cljs.core.rest(arglist__14810);
        return G__14808__delegate(x, y, zs);
      };
      G__14808.cljs$core$IFn$_invoke$arity$variadic = G__14808__delegate;
      return G__14808;
    }();
    G__14807 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__14807__0.call(this);
        case 1:
          return G__14807__1.call(this, x);
        case 2:
          return G__14807__2.call(this, x, y);
        default:
          var G__14811 = null;
          if (arguments.length > 2) {
            var G__14812__i = 0, G__14812__a = new Array(arguments.length - 2);
            while (G__14812__i < G__14812__a.length) {
              G__14812__a[G__14812__i] = arguments[G__14812__i + 2];
              ++G__14812__i;
            }
            G__14811 = new cljs.core.IndexedSeq(G__14812__a, 0);
          }
          return G__14807__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__14811);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14807.cljs$lang$maxFixedArity = 2;
    G__14807.cljs$lang$applyTo = G__14807__3.cljs$lang$applyTo;
    G__14807.cljs$core$IFn$_invoke$arity$0 = G__14807__0;
    G__14807.cljs$core$IFn$_invoke$arity$1 = G__14807__1;
    G__14807.cljs$core$IFn$_invoke$arity$2 = G__14807__2;
    G__14807.cljs$core$IFn$_invoke$arity$variadic = G__14807__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__14807;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__14813__delegate = function(args) {
      return x;
    };
    var G__14813 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__14814__i = 0, G__14814__a = new Array(arguments.length - 0);
        while (G__14814__i < G__14814__a.length) {
          G__14814__a[G__14814__i] = arguments[G__14814__i + 0];
          ++G__14814__i;
        }
        args = new cljs.core.IndexedSeq(G__14814__a, 0);
      }
      return G__14813__delegate.call(this, args);
    };
    G__14813.cljs$lang$maxFixedArity = 0;
    G__14813.cljs$lang$applyTo = function(arglist__14815) {
      var args = cljs.core.seq(arglist__14815);
      return G__14813__delegate(args);
    };
    G__14813.cljs$core$IFn$_invoke$arity$variadic = G__14813__delegate;
    return G__14813;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var args14816 = [];
  var len__5565__auto___14843 = arguments.length;
  var i__5566__auto___14844 = 0;
  while (true) {
    if (i__5566__auto___14844 < len__5565__auto___14843) {
      args14816.push(arguments[i__5566__auto___14844]);
      var G__14845 = i__5566__auto___14844 + 1;
      i__5566__auto___14844 = G__14845;
      continue;
    } else {
    }
    break;
  }
  var G__14822 = args14816.length;
  switch(G__14822) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14816.slice(3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__14847 = null;
    var G__14847__0 = function() {
      var G__14823 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14823) : f.call(null, G__14823);
    };
    var G__14847__1 = function(x) {
      var G__14824 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14824) : f.call(null, G__14824);
    };
    var G__14847__2 = function(x, y) {
      var G__14825 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14825) : f.call(null, G__14825);
    };
    var G__14847__3 = function(x, y, z) {
      var G__14826 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14826) : f.call(null, G__14826);
    };
    var G__14847__4 = function() {
      var G__14848__delegate = function(x, y, z, args) {
        var G__14827 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14827) : f.call(null, G__14827);
      };
      var G__14848 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14849__i = 0, G__14849__a = new Array(arguments.length - 3);
          while (G__14849__i < G__14849__a.length) {
            G__14849__a[G__14849__i] = arguments[G__14849__i + 3];
            ++G__14849__i;
          }
          args = new cljs.core.IndexedSeq(G__14849__a, 0);
        }
        return G__14848__delegate.call(this, x, y, z, args);
      };
      G__14848.cljs$lang$maxFixedArity = 3;
      G__14848.cljs$lang$applyTo = function(arglist__14850) {
        var x = cljs.core.first(arglist__14850);
        arglist__14850 = cljs.core.next(arglist__14850);
        var y = cljs.core.first(arglist__14850);
        arglist__14850 = cljs.core.next(arglist__14850);
        var z = cljs.core.first(arglist__14850);
        var args = cljs.core.rest(arglist__14850);
        return G__14848__delegate(x, y, z, args);
      };
      G__14848.cljs$core$IFn$_invoke$arity$variadic = G__14848__delegate;
      return G__14848;
    }();
    G__14847 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14847__0.call(this);
        case 1:
          return G__14847__1.call(this, x);
        case 2:
          return G__14847__2.call(this, x, y);
        case 3:
          return G__14847__3.call(this, x, y, z);
        default:
          var G__14851 = null;
          if (arguments.length > 3) {
            var G__14852__i = 0, G__14852__a = new Array(arguments.length - 3);
            while (G__14852__i < G__14852__a.length) {
              G__14852__a[G__14852__i] = arguments[G__14852__i + 3];
              ++G__14852__i;
            }
            G__14851 = new cljs.core.IndexedSeq(G__14852__a, 0);
          }
          return G__14847__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14851);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14847.cljs$lang$maxFixedArity = 3;
    G__14847.cljs$lang$applyTo = G__14847__4.cljs$lang$applyTo;
    G__14847.cljs$core$IFn$_invoke$arity$0 = G__14847__0;
    G__14847.cljs$core$IFn$_invoke$arity$1 = G__14847__1;
    G__14847.cljs$core$IFn$_invoke$arity$2 = G__14847__2;
    G__14847.cljs$core$IFn$_invoke$arity$3 = G__14847__3;
    G__14847.cljs$core$IFn$_invoke$arity$variadic = G__14847__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14847;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__14853 = null;
    var G__14853__0 = function() {
      var G__14829 = function() {
        var G__14830 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14830) : g.call(null, G__14830);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14829) : f.call(null, G__14829);
    };
    var G__14853__1 = function(x) {
      var G__14832 = function() {
        var G__14833 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14833) : g.call(null, G__14833);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14832) : f.call(null, G__14832);
    };
    var G__14853__2 = function(x, y) {
      var G__14835 = function() {
        var G__14836 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14836) : g.call(null, G__14836);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14835) : f.call(null, G__14835);
    };
    var G__14853__3 = function(x, y, z) {
      var G__14838 = function() {
        var G__14839 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14839) : g.call(null, G__14839);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14838) : f.call(null, G__14838);
    };
    var G__14853__4 = function() {
      var G__14854__delegate = function(x, y, z, args) {
        var G__14841 = function() {
          var G__14842 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14842) : g.call(null, G__14842);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14841) : f.call(null, G__14841);
      };
      var G__14854 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14855__i = 0, G__14855__a = new Array(arguments.length - 3);
          while (G__14855__i < G__14855__a.length) {
            G__14855__a[G__14855__i] = arguments[G__14855__i + 3];
            ++G__14855__i;
          }
          args = new cljs.core.IndexedSeq(G__14855__a, 0);
        }
        return G__14854__delegate.call(this, x, y, z, args);
      };
      G__14854.cljs$lang$maxFixedArity = 3;
      G__14854.cljs$lang$applyTo = function(arglist__14856) {
        var x = cljs.core.first(arglist__14856);
        arglist__14856 = cljs.core.next(arglist__14856);
        var y = cljs.core.first(arglist__14856);
        arglist__14856 = cljs.core.next(arglist__14856);
        var z = cljs.core.first(arglist__14856);
        var args = cljs.core.rest(arglist__14856);
        return G__14854__delegate(x, y, z, args);
      };
      G__14854.cljs$core$IFn$_invoke$arity$variadic = G__14854__delegate;
      return G__14854;
    }();
    G__14853 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14853__0.call(this);
        case 1:
          return G__14853__1.call(this, x);
        case 2:
          return G__14853__2.call(this, x, y);
        case 3:
          return G__14853__3.call(this, x, y, z);
        default:
          var G__14857 = null;
          if (arguments.length > 3) {
            var G__14858__i = 0, G__14858__a = new Array(arguments.length - 3);
            while (G__14858__i < G__14858__a.length) {
              G__14858__a[G__14858__i] = arguments[G__14858__i + 3];
              ++G__14858__i;
            }
            G__14857 = new cljs.core.IndexedSeq(G__14858__a, 0);
          }
          return G__14853__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14857);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14853.cljs$lang$maxFixedArity = 3;
    G__14853.cljs$lang$applyTo = G__14853__4.cljs$lang$applyTo;
    G__14853.cljs$core$IFn$_invoke$arity$0 = G__14853__0;
    G__14853.cljs$core$IFn$_invoke$arity$1 = G__14853__1;
    G__14853.cljs$core$IFn$_invoke$arity$2 = G__14853__2;
    G__14853.cljs$core$IFn$_invoke$arity$3 = G__14853__3;
    G__14853.cljs$core$IFn$_invoke$arity$variadic = G__14853__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14853;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__14859__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__14860 = cljs.core.first(fs__$2).call(null, ret);
            var G__14861 = cljs.core.next(fs__$2);
            ret = G__14860;
            fs__$2 = G__14861;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__14859 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__14862__i = 0, G__14862__a = new Array(arguments.length - 0);
          while (G__14862__i < G__14862__a.length) {
            G__14862__a[G__14862__i] = arguments[G__14862__i + 0];
            ++G__14862__i;
          }
          args = new cljs.core.IndexedSeq(G__14862__a, 0);
        }
        return G__14859__delegate.call(this, args);
      };
      G__14859.cljs$lang$maxFixedArity = 0;
      G__14859.cljs$lang$applyTo = function(arglist__14863) {
        var args = cljs.core.seq(arglist__14863);
        return G__14859__delegate(args);
      };
      G__14859.cljs$core$IFn$_invoke$arity$variadic = G__14859__delegate;
      return G__14859;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq14817) {
  var G__14818 = cljs.core.first(seq14817);
  var seq14817__$1 = cljs.core.next(seq14817);
  var G__14819 = cljs.core.first(seq14817__$1);
  var seq14817__$2 = cljs.core.next(seq14817__$1);
  var G__14820 = cljs.core.first(seq14817__$2);
  var seq14817__$3 = cljs.core.next(seq14817__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__14818, G__14819, G__14820, seq14817__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var args14864 = [];
  var len__5565__auto___14872 = arguments.length;
  var i__5566__auto___14873 = 0;
  while (true) {
    if (i__5566__auto___14873 < len__5565__auto___14872) {
      args14864.push(arguments[i__5566__auto___14873]);
      var G__14874 = i__5566__auto___14873 + 1;
      i__5566__auto___14873 = G__14874;
      continue;
    } else {
    }
    break;
  }
  var G__14871 = args14864.length;
  switch(G__14871) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args14864.slice(4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__14876 = null;
    var G__14876__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__14876__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__14876__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__14876__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__14876__4 = function() {
      var G__14877__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__14877 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14878__i = 0, G__14878__a = new Array(arguments.length - 3);
          while (G__14878__i < G__14878__a.length) {
            G__14878__a[G__14878__i] = arguments[G__14878__i + 3];
            ++G__14878__i;
          }
          args = new cljs.core.IndexedSeq(G__14878__a, 0);
        }
        return G__14877__delegate.call(this, x, y, z, args);
      };
      G__14877.cljs$lang$maxFixedArity = 3;
      G__14877.cljs$lang$applyTo = function(arglist__14879) {
        var x = cljs.core.first(arglist__14879);
        arglist__14879 = cljs.core.next(arglist__14879);
        var y = cljs.core.first(arglist__14879);
        arglist__14879 = cljs.core.next(arglist__14879);
        var z = cljs.core.first(arglist__14879);
        var args = cljs.core.rest(arglist__14879);
        return G__14877__delegate(x, y, z, args);
      };
      G__14877.cljs$core$IFn$_invoke$arity$variadic = G__14877__delegate;
      return G__14877;
    }();
    G__14876 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14876__0.call(this);
        case 1:
          return G__14876__1.call(this, x);
        case 2:
          return G__14876__2.call(this, x, y);
        case 3:
          return G__14876__3.call(this, x, y, z);
        default:
          var G__14880 = null;
          if (arguments.length > 3) {
            var G__14881__i = 0, G__14881__a = new Array(arguments.length - 3);
            while (G__14881__i < G__14881__a.length) {
              G__14881__a[G__14881__i] = arguments[G__14881__i + 3];
              ++G__14881__i;
            }
            G__14880 = new cljs.core.IndexedSeq(G__14881__a, 0);
          }
          return G__14876__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14880);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14876.cljs$lang$maxFixedArity = 3;
    G__14876.cljs$lang$applyTo = G__14876__4.cljs$lang$applyTo;
    G__14876.cljs$core$IFn$_invoke$arity$0 = G__14876__0;
    G__14876.cljs$core$IFn$_invoke$arity$1 = G__14876__1;
    G__14876.cljs$core$IFn$_invoke$arity$2 = G__14876__2;
    G__14876.cljs$core$IFn$_invoke$arity$3 = G__14876__3;
    G__14876.cljs$core$IFn$_invoke$arity$variadic = G__14876__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14876;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__14882 = null;
    var G__14882__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__14882__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__14882__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__14882__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__14882__4 = function() {
      var G__14883__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__14883 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14884__i = 0, G__14884__a = new Array(arguments.length - 3);
          while (G__14884__i < G__14884__a.length) {
            G__14884__a[G__14884__i] = arguments[G__14884__i + 3];
            ++G__14884__i;
          }
          args = new cljs.core.IndexedSeq(G__14884__a, 0);
        }
        return G__14883__delegate.call(this, x, y, z, args);
      };
      G__14883.cljs$lang$maxFixedArity = 3;
      G__14883.cljs$lang$applyTo = function(arglist__14885) {
        var x = cljs.core.first(arglist__14885);
        arglist__14885 = cljs.core.next(arglist__14885);
        var y = cljs.core.first(arglist__14885);
        arglist__14885 = cljs.core.next(arglist__14885);
        var z = cljs.core.first(arglist__14885);
        var args = cljs.core.rest(arglist__14885);
        return G__14883__delegate(x, y, z, args);
      };
      G__14883.cljs$core$IFn$_invoke$arity$variadic = G__14883__delegate;
      return G__14883;
    }();
    G__14882 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14882__0.call(this);
        case 1:
          return G__14882__1.call(this, x);
        case 2:
          return G__14882__2.call(this, x, y);
        case 3:
          return G__14882__3.call(this, x, y, z);
        default:
          var G__14886 = null;
          if (arguments.length > 3) {
            var G__14887__i = 0, G__14887__a = new Array(arguments.length - 3);
            while (G__14887__i < G__14887__a.length) {
              G__14887__a[G__14887__i] = arguments[G__14887__i + 3];
              ++G__14887__i;
            }
            G__14886 = new cljs.core.IndexedSeq(G__14887__a, 0);
          }
          return G__14882__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14886);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14882.cljs$lang$maxFixedArity = 3;
    G__14882.cljs$lang$applyTo = G__14882__4.cljs$lang$applyTo;
    G__14882.cljs$core$IFn$_invoke$arity$0 = G__14882__0;
    G__14882.cljs$core$IFn$_invoke$arity$1 = G__14882__1;
    G__14882.cljs$core$IFn$_invoke$arity$2 = G__14882__2;
    G__14882.cljs$core$IFn$_invoke$arity$3 = G__14882__3;
    G__14882.cljs$core$IFn$_invoke$arity$variadic = G__14882__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14882;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__14888 = null;
    var G__14888__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__14888__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__14888__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__14888__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__14888__4 = function() {
      var G__14889__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__14889 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14890__i = 0, G__14890__a = new Array(arguments.length - 3);
          while (G__14890__i < G__14890__a.length) {
            G__14890__a[G__14890__i] = arguments[G__14890__i + 3];
            ++G__14890__i;
          }
          args = new cljs.core.IndexedSeq(G__14890__a, 0);
        }
        return G__14889__delegate.call(this, x, y, z, args);
      };
      G__14889.cljs$lang$maxFixedArity = 3;
      G__14889.cljs$lang$applyTo = function(arglist__14891) {
        var x = cljs.core.first(arglist__14891);
        arglist__14891 = cljs.core.next(arglist__14891);
        var y = cljs.core.first(arglist__14891);
        arglist__14891 = cljs.core.next(arglist__14891);
        var z = cljs.core.first(arglist__14891);
        var args = cljs.core.rest(arglist__14891);
        return G__14889__delegate(x, y, z, args);
      };
      G__14889.cljs$core$IFn$_invoke$arity$variadic = G__14889__delegate;
      return G__14889;
    }();
    G__14888 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14888__0.call(this);
        case 1:
          return G__14888__1.call(this, x);
        case 2:
          return G__14888__2.call(this, x, y);
        case 3:
          return G__14888__3.call(this, x, y, z);
        default:
          var G__14892 = null;
          if (arguments.length > 3) {
            var G__14893__i = 0, G__14893__a = new Array(arguments.length - 3);
            while (G__14893__i < G__14893__a.length) {
              G__14893__a[G__14893__i] = arguments[G__14893__i + 3];
              ++G__14893__i;
            }
            G__14892 = new cljs.core.IndexedSeq(G__14893__a, 0);
          }
          return G__14888__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14892);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14888.cljs$lang$maxFixedArity = 3;
    G__14888.cljs$lang$applyTo = G__14888__4.cljs$lang$applyTo;
    G__14888.cljs$core$IFn$_invoke$arity$0 = G__14888__0;
    G__14888.cljs$core$IFn$_invoke$arity$1 = G__14888__1;
    G__14888.cljs$core$IFn$_invoke$arity$2 = G__14888__2;
    G__14888.cljs$core$IFn$_invoke$arity$3 = G__14888__3;
    G__14888.cljs$core$IFn$_invoke$arity$variadic = G__14888__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14888;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__14894__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__14894 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__14895__i = 0, G__14895__a = new Array(arguments.length - 0);
        while (G__14895__i < G__14895__a.length) {
          G__14895__a[G__14895__i] = arguments[G__14895__i + 0];
          ++G__14895__i;
        }
        args = new cljs.core.IndexedSeq(G__14895__a, 0);
      }
      return G__14894__delegate.call(this, args);
    };
    G__14894.cljs$lang$maxFixedArity = 0;
    G__14894.cljs$lang$applyTo = function(arglist__14896) {
      var args = cljs.core.seq(arglist__14896);
      return G__14894__delegate(args);
    };
    G__14894.cljs$core$IFn$_invoke$arity$variadic = G__14894__delegate;
    return G__14894;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq14865) {
  var G__14866 = cljs.core.first(seq14865);
  var seq14865__$1 = cljs.core.next(seq14865);
  var G__14867 = cljs.core.first(seq14865__$1);
  var seq14865__$2 = cljs.core.next(seq14865__$1);
  var G__14868 = cljs.core.first(seq14865__$2);
  var seq14865__$3 = cljs.core.next(seq14865__$2);
  var G__14869 = cljs.core.first(seq14865__$3);
  var seq14865__$4 = cljs.core.next(seq14865__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__14866, G__14867, G__14868, G__14869, seq14865__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var args14897 = [];
  var len__5565__auto___14916 = arguments.length;
  var i__5566__auto___14917 = 0;
  while (true) {
    if (i__5566__auto___14917 < len__5565__auto___14916) {
      args14897.push(arguments[i__5566__auto___14917]);
      var G__14918 = i__5566__auto___14917 + 1;
      i__5566__auto___14917 = G__14918;
      continue;
    } else {
    }
    break;
  }
  var G__14899 = args14897.length;
  switch(G__14899) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14897.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__14920 = null;
    var G__14920__1 = function(a) {
      var G__14900 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14900) : f.call(null, G__14900);
    };
    var G__14920__2 = function(a, b) {
      var G__14901 = a == null ? x : a;
      var G__14902 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14901, G__14902) : f.call(null, G__14901, G__14902);
    };
    var G__14920__3 = function(a, b, c) {
      var G__14903 = a == null ? x : a;
      var G__14904 = b;
      var G__14905 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14903, G__14904, G__14905) : f.call(null, G__14903, G__14904, G__14905);
    };
    var G__14920__4 = function() {
      var G__14921__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__14921 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__14922__i = 0, G__14922__a = new Array(arguments.length - 3);
          while (G__14922__i < G__14922__a.length) {
            G__14922__a[G__14922__i] = arguments[G__14922__i + 3];
            ++G__14922__i;
          }
          ds = new cljs.core.IndexedSeq(G__14922__a, 0);
        }
        return G__14921__delegate.call(this, a, b, c, ds);
      };
      G__14921.cljs$lang$maxFixedArity = 3;
      G__14921.cljs$lang$applyTo = function(arglist__14923) {
        var a = cljs.core.first(arglist__14923);
        arglist__14923 = cljs.core.next(arglist__14923);
        var b = cljs.core.first(arglist__14923);
        arglist__14923 = cljs.core.next(arglist__14923);
        var c = cljs.core.first(arglist__14923);
        var ds = cljs.core.rest(arglist__14923);
        return G__14921__delegate(a, b, c, ds);
      };
      G__14921.cljs$core$IFn$_invoke$arity$variadic = G__14921__delegate;
      return G__14921;
    }();
    G__14920 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__14920__1.call(this, a);
        case 2:
          return G__14920__2.call(this, a, b);
        case 3:
          return G__14920__3.call(this, a, b, c);
        default:
          var G__14924 = null;
          if (arguments.length > 3) {
            var G__14925__i = 0, G__14925__a = new Array(arguments.length - 3);
            while (G__14925__i < G__14925__a.length) {
              G__14925__a[G__14925__i] = arguments[G__14925__i + 3];
              ++G__14925__i;
            }
            G__14924 = new cljs.core.IndexedSeq(G__14925__a, 0);
          }
          return G__14920__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__14924);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14920.cljs$lang$maxFixedArity = 3;
    G__14920.cljs$lang$applyTo = G__14920__4.cljs$lang$applyTo;
    G__14920.cljs$core$IFn$_invoke$arity$1 = G__14920__1;
    G__14920.cljs$core$IFn$_invoke$arity$2 = G__14920__2;
    G__14920.cljs$core$IFn$_invoke$arity$3 = G__14920__3;
    G__14920.cljs$core$IFn$_invoke$arity$variadic = G__14920__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14920;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__14926 = null;
    var G__14926__2 = function(a, b) {
      var G__14906 = a == null ? x : a;
      var G__14907 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14906, G__14907) : f.call(null, G__14906, G__14907);
    };
    var G__14926__3 = function(a, b, c) {
      var G__14908 = a == null ? x : a;
      var G__14909 = b == null ? y : b;
      var G__14910 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14908, G__14909, G__14910) : f.call(null, G__14908, G__14909, G__14910);
    };
    var G__14926__4 = function() {
      var G__14927__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__14927 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__14928__i = 0, G__14928__a = new Array(arguments.length - 3);
          while (G__14928__i < G__14928__a.length) {
            G__14928__a[G__14928__i] = arguments[G__14928__i + 3];
            ++G__14928__i;
          }
          ds = new cljs.core.IndexedSeq(G__14928__a, 0);
        }
        return G__14927__delegate.call(this, a, b, c, ds);
      };
      G__14927.cljs$lang$maxFixedArity = 3;
      G__14927.cljs$lang$applyTo = function(arglist__14929) {
        var a = cljs.core.first(arglist__14929);
        arglist__14929 = cljs.core.next(arglist__14929);
        var b = cljs.core.first(arglist__14929);
        arglist__14929 = cljs.core.next(arglist__14929);
        var c = cljs.core.first(arglist__14929);
        var ds = cljs.core.rest(arglist__14929);
        return G__14927__delegate(a, b, c, ds);
      };
      G__14927.cljs$core$IFn$_invoke$arity$variadic = G__14927__delegate;
      return G__14927;
    }();
    G__14926 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__14926__2.call(this, a, b);
        case 3:
          return G__14926__3.call(this, a, b, c);
        default:
          var G__14930 = null;
          if (arguments.length > 3) {
            var G__14931__i = 0, G__14931__a = new Array(arguments.length - 3);
            while (G__14931__i < G__14931__a.length) {
              G__14931__a[G__14931__i] = arguments[G__14931__i + 3];
              ++G__14931__i;
            }
            G__14930 = new cljs.core.IndexedSeq(G__14931__a, 0);
          }
          return G__14926__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__14930);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14926.cljs$lang$maxFixedArity = 3;
    G__14926.cljs$lang$applyTo = G__14926__4.cljs$lang$applyTo;
    G__14926.cljs$core$IFn$_invoke$arity$2 = G__14926__2;
    G__14926.cljs$core$IFn$_invoke$arity$3 = G__14926__3;
    G__14926.cljs$core$IFn$_invoke$arity$variadic = G__14926__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14926;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__14932 = null;
    var G__14932__2 = function(a, b) {
      var G__14911 = a == null ? x : a;
      var G__14912 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14911, G__14912) : f.call(null, G__14911, G__14912);
    };
    var G__14932__3 = function(a, b, c) {
      var G__14913 = a == null ? x : a;
      var G__14914 = b == null ? y : b;
      var G__14915 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14913, G__14914, G__14915) : f.call(null, G__14913, G__14914, G__14915);
    };
    var G__14932__4 = function() {
      var G__14933__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__14933 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__14934__i = 0, G__14934__a = new Array(arguments.length - 3);
          while (G__14934__i < G__14934__a.length) {
            G__14934__a[G__14934__i] = arguments[G__14934__i + 3];
            ++G__14934__i;
          }
          ds = new cljs.core.IndexedSeq(G__14934__a, 0);
        }
        return G__14933__delegate.call(this, a, b, c, ds);
      };
      G__14933.cljs$lang$maxFixedArity = 3;
      G__14933.cljs$lang$applyTo = function(arglist__14935) {
        var a = cljs.core.first(arglist__14935);
        arglist__14935 = cljs.core.next(arglist__14935);
        var b = cljs.core.first(arglist__14935);
        arglist__14935 = cljs.core.next(arglist__14935);
        var c = cljs.core.first(arglist__14935);
        var ds = cljs.core.rest(arglist__14935);
        return G__14933__delegate(a, b, c, ds);
      };
      G__14933.cljs$core$IFn$_invoke$arity$variadic = G__14933__delegate;
      return G__14933;
    }();
    G__14932 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__14932__2.call(this, a, b);
        case 3:
          return G__14932__3.call(this, a, b, c);
        default:
          var G__14936 = null;
          if (arguments.length > 3) {
            var G__14937__i = 0, G__14937__a = new Array(arguments.length - 3);
            while (G__14937__i < G__14937__a.length) {
              G__14937__a[G__14937__i] = arguments[G__14937__i + 3];
              ++G__14937__i;
            }
            G__14936 = new cljs.core.IndexedSeq(G__14937__a, 0);
          }
          return G__14932__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__14936);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14932.cljs$lang$maxFixedArity = 3;
    G__14932.cljs$lang$applyTo = G__14932__4.cljs$lang$applyTo;
    G__14932.cljs$core$IFn$_invoke$arity$2 = G__14932__2;
    G__14932.cljs$core$IFn$_invoke$arity$3 = G__14932__3;
    G__14932.cljs$core$IFn$_invoke$arity$variadic = G__14932__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14932;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var args14938 = [];
  var len__5565__auto___14971 = arguments.length;
  var i__5566__auto___14972 = 0;
  while (true) {
    if (i__5566__auto___14972 < len__5565__auto___14971) {
      args14938.push(arguments[i__5566__auto___14972]);
      var G__14973 = i__5566__auto___14972 + 1;
      i__5566__auto___14972 = G__14973;
      continue;
    } else {
    }
    break;
  }
  var G__14940 = args14938.length;
  switch(G__14940) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14938.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__14975 = null;
        var G__14975__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14975__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__14975__2 = function(result, input) {
          var G__14943 = result;
          var G__14944 = function() {
            var G__14945 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__14946 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14945, G__14946) : f.call(null, G__14945, G__14946);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14943, G__14944) : rf.call(null, G__14943, G__14944);
        };
        G__14975 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14975__0.call(this);
            case 1:
              return G__14975__1.call(this, result);
            case 2:
              return G__14975__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14975.cljs$core$IFn$_invoke$arity$0 = G__14975__0;
        G__14975.cljs$core$IFn$_invoke$arity$1 = G__14975__1;
        G__14975.cljs$core$IFn$_invoke$arity$2 = G__14975__2;
        return G__14975;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5410__auto___14976 = size;
          var i_14977 = 0;
          while (true) {
            if (i_14977 < n__5410__auto___14976) {
              cljs.core.chunk_append(b, function() {
                var G__14967 = idx + i_14977;
                var G__14968 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14977);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14967, G__14968) : f.call(null, G__14967, G__14968);
              }());
              var G__14978 = i_14977 + 1;
              i_14977 = G__14978;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__14969 = idx;
            var G__14970 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14969, G__14970) : f.call(null, G__14969, G__14970);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var args14979 = [];
  var len__5565__auto___14984 = arguments.length;
  var i__5566__auto___14985 = 0;
  while (true) {
    if (i__5566__auto___14985 < len__5565__auto___14984) {
      args14979.push(arguments[i__5566__auto___14985]);
      var G__14986 = i__5566__auto___14985 + 1;
      i__5566__auto___14985 = G__14986;
      continue;
    } else {
    }
    break;
  }
  var G__14981 = args14979.length;
  switch(G__14981) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14979.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__14988 = null;
      var G__14988__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__14988__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__14988__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__14988 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__14988__0.call(this);
          case 1:
            return G__14988__1.call(this, result);
          case 2:
            return G__14988__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14988.cljs$core$IFn$_invoke$arity$0 = G__14988__0;
      G__14988.cljs$core$IFn$_invoke$arity$1 = G__14988__1;
      G__14988.cljs$core$IFn$_invoke$arity$2 = G__14988__2;
      return G__14988;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5410__auto___14989 = size;
        var i_14990 = 0;
        while (true) {
          if (i_14990 < n__5410__auto___14989) {
            var x_14991 = function() {
              var G__14982 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14990);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14982) : f.call(null, G__14982);
            }();
            if (x_14991 == null) {
            } else {
              cljs.core.chunk_append(b, x_14991);
            }
            var G__14992 = i_14990 + 1;
            i_14990 = G__14992;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__14983 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14983) : f.call(null, G__14983);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__14993 = cljs.core.seq(self__.watches);
  var chunk__14994 = null;
  var count__14995 = 0;
  var i__14996 = 0;
  while (true) {
    if (i__14996 < count__14995) {
      var vec__14997 = chunk__14994.cljs$core$IIndexed$_nth$arity$2(null, i__14996);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14997, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14997, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__14999 = seq__14993;
      var G__15000 = chunk__14994;
      var G__15001 = count__14995;
      var G__15002 = i__14996 + 1;
      seq__14993 = G__14999;
      chunk__14994 = G__15000;
      count__14995 = G__15001;
      i__14996 = G__15002;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__14993);
      if (temp__4425__auto__) {
        var seq__14993__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14993__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__14993__$1);
          var G__15003 = cljs.core.chunk_rest(seq__14993__$1);
          var G__15004 = c__5310__auto__;
          var G__15005 = cljs.core.count(c__5310__auto__);
          var G__15006 = 0;
          seq__14993 = G__15003;
          chunk__14994 = G__15004;
          count__14995 = G__15005;
          i__14996 = G__15006;
          continue;
        } else {
          var vec__14998 = cljs.core.first(seq__14993__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14998, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14998, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__15007 = cljs.core.next(seq__14993__$1);
          var G__15008 = null;
          var G__15009 = 0;
          var G__15010 = 0;
          seq__14993 = G__15007;
          chunk__14994 = G__15008;
          count__14995 = G__15009;
          i__14996 = G__15010;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var args15011 = [];
  var len__5565__auto___15019 = arguments.length;
  var i__5566__auto___15020 = 0;
  while (true) {
    if (i__5566__auto___15020 < len__5565__auto___15019) {
      args15011.push(arguments[i__5566__auto___15020]);
      var G__15021 = i__5566__auto___15020 + 1;
      i__5566__auto___15020 = G__15021;
      continue;
    } else {
    }
    break;
  }
  var G__15015 = args15011.length;
  switch(G__15015) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15011.slice(1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__15016) {
  var map__15017 = p__15016;
  var map__15017__$1 = (!(map__15017 == null) ? map__15017.cljs$lang$protocol_mask$partition0$ & 64 || map__15017.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__15017) : map__15017;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15017__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15017__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq15012) {
  var G__15013 = cljs.core.first(seq15012);
  var seq15012__$1 = cljs.core.next(seq15012);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__15013, seq15012__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__15024 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__15024) : cljs.core.pr_str.call(null, G__15024);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var args15025 = [];
  var len__5565__auto___15039 = arguments.length;
  var i__5566__auto___15040 = 0;
  while (true) {
    if (i__5566__auto___15040 < len__5565__auto___15039) {
      args15025.push(arguments[i__5566__auto___15040]);
      var G__15041 = i__5566__auto___15040 + 1;
      i__5566__auto___15040 = G__15041;
      continue;
    } else {
    }
    break;
  }
  var G__15032 = args15025.length;
  switch(G__15032) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15025.slice(4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__15033 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15033) : f.call(null, G__15033);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__15034 = a.state;
      var G__15035 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15034, G__15035) : f.call(null, G__15034, G__15035);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__15036 = a.state;
      var G__15037 = x;
      var G__15038 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15036, G__15037, G__15038) : f.call(null, G__15036, G__15037, G__15038);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq15026) {
  var G__15027 = cljs.core.first(seq15026);
  var seq15026__$1 = cljs.core.next(seq15026);
  var G__15028 = cljs.core.first(seq15026__$1);
  var seq15026__$2 = cljs.core.next(seq15026__$1);
  var G__15029 = cljs.core.first(seq15026__$2);
  var seq15026__$3 = cljs.core.next(seq15026__$2);
  var G__15030 = cljs.core.first(seq15026__$3);
  var seq15026__$4 = cljs.core.next(seq15026__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__15027, G__15028, G__15029, G__15030, seq15026__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var args15043 = [];
  var len__5565__auto___15074 = arguments.length;
  var i__5566__auto___15075 = 0;
  while (true) {
    if (i__5566__auto___15075 < len__5565__auto___15074) {
      args15043.push(arguments[i__5566__auto___15075]);
      var G__15076 = i__5566__auto___15075 + 1;
      i__5566__auto___15075 = G__15076;
      continue;
    } else {
    }
    break;
  }
  var G__15045 = args15043.length;
  switch(G__15045) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15043.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__15078 = null;
        var G__15078__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15078__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__15078__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__15078 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15078__0.call(this);
            case 1:
              return G__15078__1.call(this, result);
            case 2:
              return G__15078__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15078.cljs$core$IFn$_invoke$arity$0 = G__15078__0;
        G__15078.cljs$core$IFn$_invoke$arity$1 = G__15078__1;
        G__15078.cljs$core$IFn$_invoke$arity$2 = G__15078__2;
        return G__15078;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5410__auto___15079 = size;
          var i_15080 = 0;
          while (true) {
            if (i_15080 < n__5410__auto___15079) {
              var x_15081 = function() {
                var G__15070 = idx + i_15080;
                var G__15071 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15080);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15070, G__15071) : f.call(null, G__15070, G__15071);
              }();
              if (x_15081 == null) {
              } else {
                cljs.core.chunk_append(b, x_15081);
              }
              var G__15082 = i_15080 + 1;
              i_15080 = G__15082;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__15072 = idx;
            var G__15073 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15072, G__15073) : f.call(null, G__15072, G__15073);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var args15089 = [];
  var len__5565__auto___15096 = arguments.length;
  var i__5566__auto___15097 = 0;
  while (true) {
    if (i__5566__auto___15097 < len__5565__auto___15096) {
      args15089.push(arguments[i__5566__auto___15097]);
      var G__15098 = i__5566__auto___15097 + 1;
      i__5566__auto___15097 = G__15098;
      continue;
    } else {
    }
    break;
  }
  var G__15095 = args15089.length;
  switch(G__15095) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15089.slice(3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__15100__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4514__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4514__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4514__auto__;
          }
        }());
      };
      var G__15100 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15101__i = 0, G__15101__a = new Array(arguments.length - 3);
          while (G__15101__i < G__15101__a.length) {
            G__15101__a[G__15101__i] = arguments[G__15101__i + 3];
            ++G__15101__i;
          }
          args = new cljs.core.IndexedSeq(G__15101__a, 0);
        }
        return G__15100__delegate.call(this, x, y, z, args);
      };
      G__15100.cljs$lang$maxFixedArity = 3;
      G__15100.cljs$lang$applyTo = function(arglist__15102) {
        var x = cljs.core.first(arglist__15102);
        arglist__15102 = cljs.core.next(arglist__15102);
        var y = cljs.core.first(arglist__15102);
        arglist__15102 = cljs.core.next(arglist__15102);
        var z = cljs.core.first(arglist__15102);
        var args = cljs.core.rest(arglist__15102);
        return G__15100__delegate(x, y, z, args);
      };
      G__15100.cljs$core$IFn$_invoke$arity$variadic = G__15100__delegate;
      return G__15100;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__15103 = null;
          if (arguments.length > 3) {
            var G__15104__i = 0, G__15104__a = new Array(arguments.length - 3);
            while (G__15104__i < G__15104__a.length) {
              G__15104__a[G__15104__i] = arguments[G__15104__i + 3];
              ++G__15104__i;
            }
            G__15103 = new cljs.core.IndexedSeq(G__15104__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15103);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            var and__4514__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4514__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4514__auto____$2;
            }
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            var and__4514__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4514__auto____$2)) {
              var and__4514__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4514__auto____$3)) {
                var and__4514__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4514__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4514__auto____$4;
                }
              } else {
                return and__4514__auto____$3;
              }
            } else {
              return and__4514__auto____$2;
            }
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__15105__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4514__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4514__auto__)) {
            return cljs.core.every_QMARK_(function(and__4514__auto__) {
              return function(p1__15083_SHARP_) {
                var and__4514__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__15083_SHARP_) : p1.call(null, p1__15083_SHARP_);
                if (cljs.core.truth_(and__4514__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__15083_SHARP_) : p2.call(null, p1__15083_SHARP_);
                } else {
                  return and__4514__auto____$1;
                }
              };
            }(and__4514__auto__), args);
          } else {
            return and__4514__auto__;
          }
        }());
      };
      var G__15105 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15106__i = 0, G__15106__a = new Array(arguments.length - 3);
          while (G__15106__i < G__15106__a.length) {
            G__15106__a[G__15106__i] = arguments[G__15106__i + 3];
            ++G__15106__i;
          }
          args = new cljs.core.IndexedSeq(G__15106__a, 0);
        }
        return G__15105__delegate.call(this, x, y, z, args);
      };
      G__15105.cljs$lang$maxFixedArity = 3;
      G__15105.cljs$lang$applyTo = function(arglist__15107) {
        var x = cljs.core.first(arglist__15107);
        arglist__15107 = cljs.core.next(arglist__15107);
        var y = cljs.core.first(arglist__15107);
        arglist__15107 = cljs.core.next(arglist__15107);
        var z = cljs.core.first(arglist__15107);
        var args = cljs.core.rest(arglist__15107);
        return G__15105__delegate(x, y, z, args);
      };
      G__15105.cljs$core$IFn$_invoke$arity$variadic = G__15105__delegate;
      return G__15105;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__15108 = null;
          if (arguments.length > 3) {
            var G__15109__i = 0, G__15109__a = new Array(arguments.length - 3);
            while (G__15109__i < G__15109__a.length) {
              G__15109__a[G__15109__i] = arguments[G__15109__i + 3];
              ++G__15109__i;
            }
            G__15108 = new cljs.core.IndexedSeq(G__15109__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15108);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            var and__4514__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4514__auto____$2)) {
              var and__4514__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4514__auto____$3)) {
                var and__4514__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4514__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4514__auto____$4;
                }
              } else {
                return and__4514__auto____$3;
              }
            } else {
              return and__4514__auto____$2;
            }
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            var and__4514__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4514__auto____$2)) {
              var and__4514__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4514__auto____$3)) {
                var and__4514__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4514__auto____$4)) {
                  var and__4514__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4514__auto____$5)) {
                    var and__4514__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4514__auto____$6)) {
                      var and__4514__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4514__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4514__auto____$7;
                      }
                    } else {
                      return and__4514__auto____$6;
                    }
                  } else {
                    return and__4514__auto____$5;
                  }
                } else {
                  return and__4514__auto____$4;
                }
              } else {
                return and__4514__auto____$3;
              }
            } else {
              return and__4514__auto____$2;
            }
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__15110__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4514__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4514__auto__)) {
            return cljs.core.every_QMARK_(function(and__4514__auto__) {
              return function(p1__15084_SHARP_) {
                var and__4514__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__15084_SHARP_) : p1.call(null, p1__15084_SHARP_);
                if (cljs.core.truth_(and__4514__auto____$1)) {
                  var and__4514__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__15084_SHARP_) : p2.call(null, p1__15084_SHARP_);
                  if (cljs.core.truth_(and__4514__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__15084_SHARP_) : p3.call(null, p1__15084_SHARP_);
                  } else {
                    return and__4514__auto____$2;
                  }
                } else {
                  return and__4514__auto____$1;
                }
              };
            }(and__4514__auto__), args);
          } else {
            return and__4514__auto__;
          }
        }());
      };
      var G__15110 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15111__i = 0, G__15111__a = new Array(arguments.length - 3);
          while (G__15111__i < G__15111__a.length) {
            G__15111__a[G__15111__i] = arguments[G__15111__i + 3];
            ++G__15111__i;
          }
          args = new cljs.core.IndexedSeq(G__15111__a, 0);
        }
        return G__15110__delegate.call(this, x, y, z, args);
      };
      G__15110.cljs$lang$maxFixedArity = 3;
      G__15110.cljs$lang$applyTo = function(arglist__15112) {
        var x = cljs.core.first(arglist__15112);
        arglist__15112 = cljs.core.next(arglist__15112);
        var y = cljs.core.first(arglist__15112);
        arglist__15112 = cljs.core.next(arglist__15112);
        var z = cljs.core.first(arglist__15112);
        var args = cljs.core.rest(arglist__15112);
        return G__15110__delegate(x, y, z, args);
      };
      G__15110.cljs$core$IFn$_invoke$arity$variadic = G__15110__delegate;
      return G__15110;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__15113 = null;
          if (arguments.length > 3) {
            var G__15114__i = 0, G__15114__a = new Array(arguments.length - 3);
            while (G__15114__i < G__15114__a.length) {
              G__15114__a[G__15114__i] = arguments[G__15114__i + 3];
              ++G__15114__i;
            }
            G__15113 = new cljs.core.IndexedSeq(G__15114__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15113);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__15085_SHARP_) {
            return p1__15085_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15085_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15085_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__15086_SHARP_) {
            var and__4514__auto__ = p1__15086_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15086_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15086_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4514__auto__)) {
              return p1__15086_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15086_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__15086_SHARP_.call(null, y);
            } else {
              return and__4514__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__15087_SHARP_) {
            var and__4514__auto__ = p1__15087_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15087_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15087_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4514__auto__)) {
              var and__4514__auto____$1 = p1__15087_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15087_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__15087_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4514__auto____$1)) {
                return p1__15087_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15087_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__15087_SHARP_.call(null, z);
              } else {
                return and__4514__auto____$1;
              }
            } else {
              return and__4514__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__15115__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4514__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4514__auto__)) {
              return cljs.core.every_QMARK_(function(and__4514__auto__, ps__$1) {
                return function(p1__15088_SHARP_) {
                  return cljs.core.every_QMARK_(p1__15088_SHARP_, args);
                };
              }(and__4514__auto__, ps__$1), ps__$1);
            } else {
              return and__4514__auto__;
            }
          }());
        };
        var G__15115 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15116__i = 0, G__15116__a = new Array(arguments.length - 3);
            while (G__15116__i < G__15116__a.length) {
              G__15116__a[G__15116__i] = arguments[G__15116__i + 3];
              ++G__15116__i;
            }
            args = new cljs.core.IndexedSeq(G__15116__a, 0);
          }
          return G__15115__delegate.call(this, x, y, z, args);
        };
        G__15115.cljs$lang$maxFixedArity = 3;
        G__15115.cljs$lang$applyTo = function(arglist__15117) {
          var x = cljs.core.first(arglist__15117);
          arglist__15117 = cljs.core.next(arglist__15117);
          var y = cljs.core.first(arglist__15117);
          arglist__15117 = cljs.core.next(arglist__15117);
          var z = cljs.core.first(arglist__15117);
          var args = cljs.core.rest(arglist__15117);
          return G__15115__delegate(x, y, z, args);
        };
        G__15115.cljs$core$IFn$_invoke$arity$variadic = G__15115__delegate;
        return G__15115;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__15118 = null;
            if (arguments.length > 3) {
              var G__15119__i = 0, G__15119__a = new Array(arguments.length - 3);
              while (G__15119__i < G__15119__a.length) {
                G__15119__a[G__15119__i] = arguments[G__15119__i + 3];
                ++G__15119__i;
              }
              G__15118 = new cljs.core.IndexedSeq(G__15119__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15118);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq15090) {
  var G__15091 = cljs.core.first(seq15090);
  var seq15090__$1 = cljs.core.next(seq15090);
  var G__15092 = cljs.core.first(seq15090__$1);
  var seq15090__$2 = cljs.core.next(seq15090__$1);
  var G__15093 = cljs.core.first(seq15090__$2);
  var seq15090__$3 = cljs.core.next(seq15090__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__15091, G__15092, G__15093, seq15090__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var args15126 = [];
  var len__5565__auto___15133 = arguments.length;
  var i__5566__auto___15134 = 0;
  while (true) {
    if (i__5566__auto___15134 < len__5565__auto___15133) {
      args15126.push(arguments[i__5566__auto___15134]);
      var G__15135 = i__5566__auto___15134 + 1;
      i__5566__auto___15134 = G__15135;
      continue;
    } else {
    }
    break;
  }
  var G__15132 = args15126.length;
  switch(G__15132) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15126.slice(3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4526__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4526__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__15137__delegate = function(x, y, z, args) {
        var or__4526__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__15137 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15138__i = 0, G__15138__a = new Array(arguments.length - 3);
          while (G__15138__i < G__15138__a.length) {
            G__15138__a[G__15138__i] = arguments[G__15138__i + 3];
            ++G__15138__i;
          }
          args = new cljs.core.IndexedSeq(G__15138__a, 0);
        }
        return G__15137__delegate.call(this, x, y, z, args);
      };
      G__15137.cljs$lang$maxFixedArity = 3;
      G__15137.cljs$lang$applyTo = function(arglist__15139) {
        var x = cljs.core.first(arglist__15139);
        arglist__15139 = cljs.core.next(arglist__15139);
        var y = cljs.core.first(arglist__15139);
        arglist__15139 = cljs.core.next(arglist__15139);
        var z = cljs.core.first(arglist__15139);
        var args = cljs.core.rest(arglist__15139);
        return G__15137__delegate(x, y, z, args);
      };
      G__15137.cljs$core$IFn$_invoke$arity$variadic = G__15137__delegate;
      return G__15137;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__15140 = null;
          if (arguments.length > 3) {
            var G__15141__i = 0, G__15141__a = new Array(arguments.length - 3);
            while (G__15141__i < G__15141__a.length) {
              G__15141__a[G__15141__i] = arguments[G__15141__i + 3];
              ++G__15141__i;
            }
            G__15140 = new cljs.core.IndexedSeq(G__15141__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15140);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          var or__4526__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4526__auto____$2)) {
            return or__4526__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          var or__4526__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4526__auto____$2)) {
            return or__4526__auto____$2;
          } else {
            var or__4526__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4526__auto____$3)) {
              return or__4526__auto____$3;
            } else {
              var or__4526__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4526__auto____$4)) {
                return or__4526__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__15142__delegate = function(x, y, z, args) {
        var or__4526__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.some(function(or__4526__auto__) {
            return function(p1__15120_SHARP_) {
              var or__4526__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__15120_SHARP_) : p1.call(null, p1__15120_SHARP_);
              if (cljs.core.truth_(or__4526__auto____$1)) {
                return or__4526__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__15120_SHARP_) : p2.call(null, p1__15120_SHARP_);
              }
            };
          }(or__4526__auto__), args);
        }
      };
      var G__15142 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15143__i = 0, G__15143__a = new Array(arguments.length - 3);
          while (G__15143__i < G__15143__a.length) {
            G__15143__a[G__15143__i] = arguments[G__15143__i + 3];
            ++G__15143__i;
          }
          args = new cljs.core.IndexedSeq(G__15143__a, 0);
        }
        return G__15142__delegate.call(this, x, y, z, args);
      };
      G__15142.cljs$lang$maxFixedArity = 3;
      G__15142.cljs$lang$applyTo = function(arglist__15144) {
        var x = cljs.core.first(arglist__15144);
        arglist__15144 = cljs.core.next(arglist__15144);
        var y = cljs.core.first(arglist__15144);
        arglist__15144 = cljs.core.next(arglist__15144);
        var z = cljs.core.first(arglist__15144);
        var args = cljs.core.rest(arglist__15144);
        return G__15142__delegate(x, y, z, args);
      };
      G__15142.cljs$core$IFn$_invoke$arity$variadic = G__15142__delegate;
      return G__15142;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__15145 = null;
          if (arguments.length > 3) {
            var G__15146__i = 0, G__15146__a = new Array(arguments.length - 3);
            while (G__15146__i < G__15146__a.length) {
              G__15146__a[G__15146__i] = arguments[G__15146__i + 3];
              ++G__15146__i;
            }
            G__15145 = new cljs.core.IndexedSeq(G__15146__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15145);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          var or__4526__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4526__auto____$2)) {
            return or__4526__auto____$2;
          } else {
            var or__4526__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4526__auto____$3)) {
              return or__4526__auto____$3;
            } else {
              var or__4526__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4526__auto____$4)) {
                return or__4526__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          var or__4526__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4526__auto____$2)) {
            return or__4526__auto____$2;
          } else {
            var or__4526__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4526__auto____$3)) {
              return or__4526__auto____$3;
            } else {
              var or__4526__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4526__auto____$4)) {
                return or__4526__auto____$4;
              } else {
                var or__4526__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4526__auto____$5)) {
                  return or__4526__auto____$5;
                } else {
                  var or__4526__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4526__auto____$6)) {
                    return or__4526__auto____$6;
                  } else {
                    var or__4526__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4526__auto____$7)) {
                      return or__4526__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__15147__delegate = function(x, y, z, args) {
        var or__4526__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.some(function(or__4526__auto__) {
            return function(p1__15121_SHARP_) {
              var or__4526__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__15121_SHARP_) : p1.call(null, p1__15121_SHARP_);
              if (cljs.core.truth_(or__4526__auto____$1)) {
                return or__4526__auto____$1;
              } else {
                var or__4526__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__15121_SHARP_) : p2.call(null, p1__15121_SHARP_);
                if (cljs.core.truth_(or__4526__auto____$2)) {
                  return or__4526__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__15121_SHARP_) : p3.call(null, p1__15121_SHARP_);
                }
              }
            };
          }(or__4526__auto__), args);
        }
      };
      var G__15147 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15148__i = 0, G__15148__a = new Array(arguments.length - 3);
          while (G__15148__i < G__15148__a.length) {
            G__15148__a[G__15148__i] = arguments[G__15148__i + 3];
            ++G__15148__i;
          }
          args = new cljs.core.IndexedSeq(G__15148__a, 0);
        }
        return G__15147__delegate.call(this, x, y, z, args);
      };
      G__15147.cljs$lang$maxFixedArity = 3;
      G__15147.cljs$lang$applyTo = function(arglist__15149) {
        var x = cljs.core.first(arglist__15149);
        arglist__15149 = cljs.core.next(arglist__15149);
        var y = cljs.core.first(arglist__15149);
        arglist__15149 = cljs.core.next(arglist__15149);
        var z = cljs.core.first(arglist__15149);
        var args = cljs.core.rest(arglist__15149);
        return G__15147__delegate(x, y, z, args);
      };
      G__15147.cljs$core$IFn$_invoke$arity$variadic = G__15147__delegate;
      return G__15147;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__15150 = null;
          if (arguments.length > 3) {
            var G__15151__i = 0, G__15151__a = new Array(arguments.length - 3);
            while (G__15151__i < G__15151__a.length) {
              G__15151__a[G__15151__i] = arguments[G__15151__i + 3];
              ++G__15151__i;
            }
            G__15150 = new cljs.core.IndexedSeq(G__15151__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15150);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__15122_SHARP_) {
            return p1__15122_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15122_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15122_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__15123_SHARP_) {
            var or__4526__auto__ = p1__15123_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15123_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15123_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return p1__15123_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15123_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__15123_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__15124_SHARP_) {
            var or__4526__auto__ = p1__15124_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15124_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15124_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              var or__4526__auto____$1 = p1__15124_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15124_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__15124_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4526__auto____$1)) {
                return or__4526__auto____$1;
              } else {
                return p1__15124_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15124_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__15124_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__15152__delegate = function(x, y, z, args) {
          var or__4526__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4526__auto__)) {
            return or__4526__auto__;
          } else {
            return cljs.core.some(function(or__4526__auto__, ps__$1) {
              return function(p1__15125_SHARP_) {
                return cljs.core.some(p1__15125_SHARP_, args);
              };
            }(or__4526__auto__, ps__$1), ps__$1);
          }
        };
        var G__15152 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15153__i = 0, G__15153__a = new Array(arguments.length - 3);
            while (G__15153__i < G__15153__a.length) {
              G__15153__a[G__15153__i] = arguments[G__15153__i + 3];
              ++G__15153__i;
            }
            args = new cljs.core.IndexedSeq(G__15153__a, 0);
          }
          return G__15152__delegate.call(this, x, y, z, args);
        };
        G__15152.cljs$lang$maxFixedArity = 3;
        G__15152.cljs$lang$applyTo = function(arglist__15154) {
          var x = cljs.core.first(arglist__15154);
          arglist__15154 = cljs.core.next(arglist__15154);
          var y = cljs.core.first(arglist__15154);
          arglist__15154 = cljs.core.next(arglist__15154);
          var z = cljs.core.first(arglist__15154);
          var args = cljs.core.rest(arglist__15154);
          return G__15152__delegate(x, y, z, args);
        };
        G__15152.cljs$core$IFn$_invoke$arity$variadic = G__15152__delegate;
        return G__15152;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__15155 = null;
            if (arguments.length > 3) {
              var G__15156__i = 0, G__15156__a = new Array(arguments.length - 3);
              while (G__15156__i < G__15156__a.length) {
                G__15156__a[G__15156__i] = arguments[G__15156__i + 3];
                ++G__15156__i;
              }
              G__15155 = new cljs.core.IndexedSeq(G__15156__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15155);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq15127) {
  var G__15128 = cljs.core.first(seq15127);
  var seq15127__$1 = cljs.core.next(seq15127);
  var G__15129 = cljs.core.first(seq15127__$1);
  var seq15127__$2 = cljs.core.next(seq15127__$1);
  var G__15130 = cljs.core.first(seq15127__$2);
  var seq15127__$3 = cljs.core.next(seq15127__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__15128, G__15129, G__15130, seq15127__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var args15158 = [];
  var len__5565__auto___15178 = arguments.length;
  var i__5566__auto___15179 = 0;
  while (true) {
    if (i__5566__auto___15179 < len__5565__auto___15178) {
      args15158.push(arguments[i__5566__auto___15179]);
      var G__15180 = i__5566__auto___15179 + 1;
      i__5566__auto___15179 = G__15180;
      continue;
    } else {
    }
    break;
  }
  var G__15165 = args15158.length;
  switch(G__15165) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15158.slice(4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__15182 = null;
      var G__15182__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__15182__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__15182__2 = function(result, input) {
        var G__15166 = result;
        var G__15167 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15166, G__15167) : rf.call(null, G__15166, G__15167);
      };
      var G__15182__3 = function() {
        var G__15183__delegate = function(result, input, inputs) {
          var G__15168 = result;
          var G__15169 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15168, G__15169) : rf.call(null, G__15168, G__15169);
        };
        var G__15183 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__15184__i = 0, G__15184__a = new Array(arguments.length - 2);
            while (G__15184__i < G__15184__a.length) {
              G__15184__a[G__15184__i] = arguments[G__15184__i + 2];
              ++G__15184__i;
            }
            inputs = new cljs.core.IndexedSeq(G__15184__a, 0);
          }
          return G__15183__delegate.call(this, result, input, inputs);
        };
        G__15183.cljs$lang$maxFixedArity = 2;
        G__15183.cljs$lang$applyTo = function(arglist__15185) {
          var result = cljs.core.first(arglist__15185);
          arglist__15185 = cljs.core.next(arglist__15185);
          var input = cljs.core.first(arglist__15185);
          var inputs = cljs.core.rest(arglist__15185);
          return G__15183__delegate(result, input, inputs);
        };
        G__15183.cljs$core$IFn$_invoke$arity$variadic = G__15183__delegate;
        return G__15183;
      }();
      G__15182 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__15182__0.call(this);
          case 1:
            return G__15182__1.call(this, result);
          case 2:
            return G__15182__2.call(this, result, input);
          default:
            var G__15186 = null;
            if (arguments.length > 2) {
              var G__15187__i = 0, G__15187__a = new Array(arguments.length - 2);
              while (G__15187__i < G__15187__a.length) {
                G__15187__a[G__15187__i] = arguments[G__15187__i + 2];
                ++G__15187__i;
              }
              G__15186 = new cljs.core.IndexedSeq(G__15187__a, 0);
            }
            return G__15182__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__15186);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15182.cljs$lang$maxFixedArity = 2;
      G__15182.cljs$lang$applyTo = G__15182__3.cljs$lang$applyTo;
      G__15182.cljs$core$IFn$_invoke$arity$0 = G__15182__0;
      G__15182.cljs$core$IFn$_invoke$arity$1 = G__15182__1;
      G__15182.cljs$core$IFn$_invoke$arity$2 = G__15182__2;
      G__15182.cljs$core$IFn$_invoke$arity$variadic = G__15182__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__15182;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5410__auto___15188 = size;
        var i_15189 = 0;
        while (true) {
          if (i_15189 < n__5410__auto___15188) {
            cljs.core.chunk_append(b, function() {
              var G__15170 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15189);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15170) : f.call(null, G__15170);
            }());
            var G__15190 = i_15189 + 1;
            i_15189 = G__15190;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__15171 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15171) : f.call(null, G__15171);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__15172 = cljs.core.first(s1);
        var G__15173 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15172, G__15173) : f.call(null, G__15172, G__15173);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__15174 = cljs.core.first(s1);
        var G__15175 = cljs.core.first(s2);
        var G__15176 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15174, G__15175, G__15176) : f.call(null, G__15174, G__15175, G__15176);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__15157_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__15157_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq15159) {
  var G__15160 = cljs.core.first(seq15159);
  var seq15159__$1 = cljs.core.next(seq15159);
  var G__15161 = cljs.core.first(seq15159__$1);
  var seq15159__$2 = cljs.core.next(seq15159__$1);
  var G__15162 = cljs.core.first(seq15159__$2);
  var seq15159__$3 = cljs.core.next(seq15159__$2);
  var G__15163 = cljs.core.first(seq15159__$3);
  var seq15159__$4 = cljs.core.next(seq15159__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__15160, G__15161, G__15162, G__15163, seq15159__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var args15191 = [];
  var len__5565__auto___15196 = arguments.length;
  var i__5566__auto___15197 = 0;
  while (true) {
    if (i__5566__auto___15197 < len__5565__auto___15196) {
      args15191.push(arguments[i__5566__auto___15197]);
      var G__15198 = i__5566__auto___15197 + 1;
      i__5566__auto___15197 = G__15198;
      continue;
    } else {
    }
    break;
  }
  var G__15193 = args15191.length;
  switch(G__15193) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15191.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__15194 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__15194) : cljs.core.pr_str.call(null, G__15194);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__15200 = null;
        var G__15200__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15200__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__15200__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__15200 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15200__0.call(this);
            case 1:
              return G__15200__1.call(this, result);
            case 2:
              return G__15200__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15200.cljs$core$IFn$_invoke$arity$0 = G__15200__0;
        G__15200.cljs$core$IFn$_invoke$arity$1 = G__15200__1;
        G__15200.cljs$core$IFn$_invoke$arity$2 = G__15200__2;
        return G__15200;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__15195 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__15195) : cljs.core.pr_str.call(null, G__15195);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var args15201 = [];
  var len__5565__auto___15206 = arguments.length;
  var i__5566__auto___15207 = 0;
  while (true) {
    if (i__5566__auto___15207 < len__5565__auto___15206) {
      args15201.push(arguments[i__5566__auto___15207]);
      var G__15208 = i__5566__auto___15207 + 1;
      i__5566__auto___15207 = G__15208;
      continue;
    } else {
    }
    break;
  }
  var G__15203 = args15201.length;
  switch(G__15203) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15201.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__15204 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__15204) : cljs.core.pr_str.call(null, G__15204);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__15210 = null;
        var G__15210__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15210__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__15210__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__15210 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15210__0.call(this);
            case 1:
              return G__15210__1.call(this, result);
            case 2:
              return G__15210__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15210.cljs$core$IFn$_invoke$arity$0 = G__15210__0;
        G__15210.cljs$core$IFn$_invoke$arity$1 = G__15210__1;
        G__15210.cljs$core$IFn$_invoke$arity$2 = G__15210__2;
        return G__15210;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__15205 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__15205) : cljs.core.pr_str.call(null, G__15205);
    }())].join(""));
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__15211 = n__$1 - 1;
        var G__15212 = cljs.core.rest(s);
        n__$1 = G__15211;
        coll__$1 = G__15212;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var args15213 = [];
  var len__5565__auto___15216 = arguments.length;
  var i__5566__auto___15217 = 0;
  while (true) {
    if (i__5566__auto___15217 < len__5565__auto___15216) {
      args15213.push(arguments[i__5566__auto___15217]);
      var G__15218 = i__5566__auto___15217 + 1;
      i__5566__auto___15217 = G__15218;
      continue;
    } else {
    }
    break;
  }
  var G__15215 = args15213.length;
  switch(G__15215) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15213.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__15220 = cljs.core.next(s);
      var G__15221 = cljs.core.next(lead);
      s = G__15220;
      lead = G__15221;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var args15222 = [];
  var len__5565__auto___15227 = arguments.length;
  var i__5566__auto___15228 = 0;
  while (true) {
    if (i__5566__auto___15228 < len__5565__auto___15227) {
      args15222.push(arguments[i__5566__auto___15228]);
      var G__15229 = i__5566__auto___15228 + 1;
      i__5566__auto___15228 = G__15229;
      continue;
    } else {
    }
    break;
  }
  var G__15224 = args15222.length;
  switch(G__15224) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15222.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__15231 = null;
        var G__15231__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15231__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__15231__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4514__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4514__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4514__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__15231 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15231__0.call(this);
            case 1:
              return G__15231__1.call(this, result);
            case 2:
              return G__15231__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15231.cljs$core$IFn$_invoke$arity$0 = G__15231__0;
        G__15231.cljs$core$IFn$_invoke$arity$1 = G__15231__1;
        G__15231.cljs$core$IFn$_invoke$arity$2 = G__15231__2;
        return G__15231;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = s;
        if (and__4514__auto__) {
          var G__15226 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__15226) : pred__$1.call(null, G__15226);
        } else {
          return and__4514__auto__;
        }
      }())) {
        var G__15232 = pred__$1;
        var G__15233 = cljs.core.rest(s);
        pred__$1 = G__15232;
        coll__$1 = G__15233;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var args15234 = [];
  var len__5565__auto___15237 = arguments.length;
  var i__5566__auto___15238 = 0;
  while (true) {
    if (i__5566__auto___15238 < len__5565__auto___15237) {
      args15234.push(arguments[i__5566__auto___15238]);
      var G__15239 = i__5566__auto___15238 + 1;
      i__5566__auto___15238 = G__15239;
      continue;
    } else {
    }
    break;
  }
  var G__15236 = args15234.length;
  switch(G__15236) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15234.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var args15241 = [];
  var len__5565__auto___15244 = arguments.length;
  var i__5566__auto___15245 = 0;
  while (true) {
    if (i__5566__auto___15245 < len__5565__auto___15244) {
      args15241.push(arguments[i__5566__auto___15245]);
      var G__15246 = i__5566__auto___15245 + 1;
      i__5566__auto___15245 = G__15246;
      continue;
    } else {
    }
    break;
  }
  var G__15243 = args15241.length;
  switch(G__15243) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15241.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var args15250 = [];
  var len__5565__auto___15256 = arguments.length;
  var i__5566__auto___15257 = 0;
  while (true) {
    if (i__5566__auto___15257 < len__5565__auto___15256) {
      args15250.push(arguments[i__5566__auto___15257]);
      var G__15258 = i__5566__auto___15257 + 1;
      i__5566__auto___15257 = G__15258;
      continue;
    } else {
    }
    break;
  }
  var G__15255 = args15250.length;
  switch(G__15255) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15250.slice(2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq15251) {
  var G__15252 = cljs.core.first(seq15251);
  var seq15251__$1 = cljs.core.next(seq15251);
  var G__15253 = cljs.core.first(seq15251__$1);
  var seq15251__$2 = cljs.core.next(seq15251__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__15252, G__15253, seq15251__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var args15260 = [];
  var len__5565__auto___15263 = arguments.length;
  var i__5566__auto___15264 = 0;
  while (true) {
    if (i__5566__auto___15264 < len__5565__auto___15263) {
      args15260.push(arguments[i__5566__auto___15264]);
      var G__15265 = i__5566__auto___15264 + 1;
      i__5566__auto___15264 = G__15265;
      continue;
    } else {
    }
    break;
  }
  var G__15262 = args15260.length;
  switch(G__15262) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15260.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__15267 = null;
        var G__15267__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15267__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__15267__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__15267 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15267__0.call(this);
            case 1:
              return G__15267__1.call(this, result);
            case 2:
              return G__15267__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15267.cljs$core$IFn$_invoke$arity$0 = G__15267__0;
        G__15267.cljs$core$IFn$_invoke$arity$1 = G__15267__1;
        G__15267.cljs$core$IFn$_invoke$arity$2 = G__15267__2;
        return G__15267;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var args15276 = [];
  var len__5565__auto___15281 = arguments.length;
  var i__5566__auto___15282 = 0;
  while (true) {
    if (i__5566__auto___15282 < len__5565__auto___15281) {
      args15276.push(arguments[i__5566__auto___15282]);
      var G__15283 = i__5566__auto___15282 + 1;
      i__5566__auto___15282 = G__15283;
      continue;
    } else {
    }
    break;
  }
  var G__15280 = args15276.length;
  switch(G__15280) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15276.slice(1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq15277) {
  var G__15278 = cljs.core.first(seq15277);
  var seq15277__$1 = cljs.core.next(seq15277);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__15278, seq15277__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var args15285 = [];
  var len__5565__auto___15289 = arguments.length;
  var i__5566__auto___15290 = 0;
  while (true) {
    if (i__5566__auto___15290 < len__5565__auto___15289) {
      args15285.push(arguments[i__5566__auto___15290]);
      var G__15291 = i__5566__auto___15290 + 1;
      i__5566__auto___15290 = G__15291;
      continue;
    } else {
    }
    break;
  }
  var G__15287 = args15285.length;
  switch(G__15287) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15285.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__15293 = null;
      var G__15293__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__15293__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__15293__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__15293 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__15293__0.call(this);
          case 1:
            return G__15293__1.call(this, result);
          case 2:
            return G__15293__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15293.cljs$core$IFn$_invoke$arity$0 = G__15293__0;
      G__15293.cljs$core$IFn$_invoke$arity$1 = G__15293__1;
      G__15293.cljs$core$IFn$_invoke$arity$2 = G__15293__2;
      return G__15293;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5410__auto___15294 = size;
        var i_15295 = 0;
        while (true) {
          if (i_15295 < n__5410__auto___15294) {
            if (cljs.core.truth_(function() {
              var G__15288 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15295);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15288) : pred.call(null, G__15288);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15295));
            } else {
            }
            var G__15296 = i_15295 + 1;
            i_15295 = G__15296;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var args15297 = [];
  var len__5565__auto___15300 = arguments.length;
  var i__5566__auto___15301 = 0;
  while (true) {
    if (i__5566__auto___15301 < len__5565__auto___15300) {
      args15297.push(arguments[i__5566__auto___15301]);
      var G__15302 = i__5566__auto___15301 + 1;
      i__5566__auto___15301 = G__15302;
      continue;
    } else {
    }
    break;
  }
  var G__15299 = args15297.length;
  switch(G__15299) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15297.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__15304_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__15304_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var args15305 = [];
  var len__5565__auto___15310 = arguments.length;
  var i__5566__auto___15311 = 0;
  while (true) {
    if (i__5566__auto___15311 < len__5565__auto___15310) {
      args15305.push(arguments[i__5566__auto___15311]);
      var G__15312 = i__5566__auto___15311 + 1;
      i__5566__auto___15311 = G__15312;
      continue;
    } else {
    }
    break;
  }
  var G__15307 = args15305.length;
  switch(G__15307) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15305.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var args15314 = [];
  var len__5565__auto___15322 = arguments.length;
  var i__5566__auto___15323 = 0;
  while (true) {
    if (i__5566__auto___15323 < len__5565__auto___15322) {
      args15314.push(arguments[i__5566__auto___15323]);
      var G__15324 = i__5566__auto___15323 + 1;
      i__5566__auto___15323 = G__15324;
      continue;
    } else {
    }
    break;
  }
  var G__15321 = args15314.length;
  switch(G__15321) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15314.slice(4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq15315) {
  var G__15316 = cljs.core.first(seq15315);
  var seq15315__$1 = cljs.core.next(seq15315);
  var G__15317 = cljs.core.first(seq15315__$1);
  var seq15315__$2 = cljs.core.next(seq15315__$1);
  var G__15318 = cljs.core.first(seq15315__$2);
  var seq15315__$3 = cljs.core.next(seq15315__$2);
  var G__15319 = cljs.core.first(seq15315__$3);
  var seq15315__$4 = cljs.core.next(seq15315__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__15316, G__15317, G__15318, G__15319, seq15315__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var args15326 = [];
  var len__5565__auto___15329 = arguments.length;
  var i__5566__auto___15330 = 0;
  while (true) {
    if (i__5566__auto___15330 < len__5565__auto___15329) {
      args15326.push(arguments[i__5566__auto___15330]);
      var G__15331 = i__5566__auto___15330 + 1;
      i__5566__auto___15330 = G__15331;
      continue;
    } else {
    }
    break;
  }
  var G__15328 = args15326.length;
  switch(G__15328) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15326.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var args15333 = [];
  var len__5565__auto___15337 = arguments.length;
  var i__5566__auto___15338 = 0;
  while (true) {
    if (i__5566__auto___15338 < len__5565__auto___15337) {
      args15333.push(arguments[i__5566__auto___15338]);
      var G__15339 = i__5566__auto___15338 + 1;
      i__5566__auto___15338 = G__15339;
      continue;
    } else {
    }
    break;
  }
  var G__15335 = args15333.length;
  switch(G__15335) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15333.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__15341 = sentinel;
          var G__15342 = m__$2;
          var G__15343 = cljs.core.next(ks__$1);
          sentinel = G__15341;
          m__$1 = G__15342;
          ks__$1 = G__15343;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__15344, v) {
  var vec__15349 = p__15344;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15349, 0, null);
  var ks = cljs.core.nthnext(vec__15349, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var args15350 = [];
  var len__5565__auto___15380 = arguments.length;
  var i__5566__auto___15381 = 0;
  while (true) {
    if (i__5566__auto___15381 < len__5565__auto___15380) {
      args15350.push(arguments[i__5566__auto___15381]);
      var G__15382 = i__5566__auto___15381 + 1;
      i__5566__auto___15381 = G__15382;
      continue;
    } else {
    }
    break;
  }
  var G__15359 = args15350.length;
  switch(G__15359) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15350.slice(6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5584__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__15360, f) {
  var vec__15361 = p__15360;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15361, 0, null);
  var ks = cljs.core.nthnext(vec__15361, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15362 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15362) : f.call(null, G__15362);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__15363, f, a) {
  var vec__15364 = p__15363;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15364, 0, null);
  var ks = cljs.core.nthnext(vec__15364, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15365 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__15366 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15365, G__15366) : f.call(null, G__15365, G__15366);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__15367, f, a, b) {
  var vec__15368 = p__15367;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15368, 0, null);
  var ks = cljs.core.nthnext(vec__15368, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15369 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__15370 = a;
      var G__15371 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15369, G__15370, G__15371) : f.call(null, G__15369, G__15370, G__15371);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__15372, f, a, b, c) {
  var vec__15373 = p__15372;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15373, 0, null);
  var ks = cljs.core.nthnext(vec__15373, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15374 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__15375 = a;
      var G__15376 = b;
      var G__15377 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15374, G__15375, G__15376, G__15377) : f.call(null, G__15374, G__15375, G__15376, G__15377);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__15378, f, a, b, c, args) {
  var vec__15379 = p__15378;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15379, 0, null);
  var ks = cljs.core.nthnext(vec__15379, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq15351) {
  var G__15352 = cljs.core.first(seq15351);
  var seq15351__$1 = cljs.core.next(seq15351);
  var G__15353 = cljs.core.first(seq15351__$1);
  var seq15351__$2 = cljs.core.next(seq15351__$1);
  var G__15354 = cljs.core.first(seq15351__$2);
  var seq15351__$3 = cljs.core.next(seq15351__$2);
  var G__15355 = cljs.core.first(seq15351__$3);
  var seq15351__$4 = cljs.core.next(seq15351__$3);
  var G__15356 = cljs.core.first(seq15351__$4);
  var seq15351__$5 = cljs.core.next(seq15351__$4);
  var G__15357 = cljs.core.first(seq15351__$5);
  var seq15351__$6 = cljs.core.next(seq15351__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__15352, G__15353, G__15354, G__15355, G__15356, G__15357, seq15351__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var args15384 = [];
  var len__5565__auto___15404 = arguments.length;
  var i__5566__auto___15405 = 0;
  while (true) {
    if (i__5566__auto___15405 < len__5565__auto___15404) {
      args15384.push(arguments[i__5566__auto___15405]);
      var G__15406 = i__5566__auto___15405 + 1;
      i__5566__auto___15405 = G__15406;
      continue;
    } else {
    }
    break;
  }
  var G__15393 = args15384.length;
  switch(G__15393) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15384.slice(6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5584__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__15394 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15394) : f.call(null, G__15394);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__15395 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__15396 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15395, G__15396) : f.call(null, G__15395, G__15396);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__15397 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__15398 = x;
    var G__15399 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15397, G__15398, G__15399) : f.call(null, G__15397, G__15398, G__15399);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__15400 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__15401 = x;
    var G__15402 = y;
    var G__15403 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15400, G__15401, G__15402, G__15403) : f.call(null, G__15400, G__15401, G__15402, G__15403);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq15385) {
  var G__15386 = cljs.core.first(seq15385);
  var seq15385__$1 = cljs.core.next(seq15385);
  var G__15387 = cljs.core.first(seq15385__$1);
  var seq15385__$2 = cljs.core.next(seq15385__$1);
  var G__15388 = cljs.core.first(seq15385__$2);
  var seq15385__$3 = cljs.core.next(seq15385__$2);
  var G__15389 = cljs.core.first(seq15385__$3);
  var seq15385__$4 = cljs.core.next(seq15385__$3);
  var G__15390 = cljs.core.first(seq15385__$4);
  var seq15385__$5 = cljs.core.next(seq15385__$4);
  var G__15391 = cljs.core.first(seq15385__$5);
  var seq15385__$6 = cljs.core.next(seq15385__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__15386, G__15387, G__15388, G__15389, G__15390, G__15391, seq15385__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__15408 = ll - 5;
      var G__15409 = r;
      ll = G__15408;
      ret = G__15409;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__15414 = cljs.core.pv_aget(node, 0);
      var G__15415 = level - 5;
      node = G__15414;
      level = G__15415;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__15416 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__15417 = level - 5;
        node = G__15416;
        level = G__15417;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__15427 = init__$2;
              var G__15428 = j + i;
              var G__15429 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15427, G__15428, G__15429) : f.call(null, G__15427, G__15428, G__15429);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__15436 = j + 1;
              var G__15437 = init__$3;
              j = G__15436;
              init__$2 = G__15437;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__15438 = i + len;
        var G__15439 = init__$2;
        i = G__15438;
        init__$1 = G__15439;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__15430 = init__$2;
              var G__15431 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15430, G__15431) : f.call(null, G__15430, G__15431);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__15440 = j + 1;
              var G__15441 = init__$3;
              j = G__15440;
              init__$2 = G__15441;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__15442 = i + len;
        var G__15443 = init__$2;
        i = G__15442;
        init__$1 = G__15443;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__15432 = coll__$1;
      var G__15433 = cljs.core.first_array_for_longvec(coll__$1);
      var G__15434 = 0;
      var G__15435 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15432, G__15433, G__15434, G__15435) : cljs.core.chunked_seq.call(null, G__15432, G__15433, G__15434, G__15435);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5410__auto___15444 = len;
    var i_15445 = 0;
    while (true) {
      if (i_15445 < n__5410__auto___15444) {
        new_tail[i_15445] = self__.tail[i_15445];
        var G__15446 = i_15445 + 1;
        i_15445 = G__15446;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__15447 = null;
  var G__15447__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15447__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15447 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15447__2.call(this, self__, k);
      case 3:
        return G__15447__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15447.cljs$core$IFn$_invoke$arity$2 = G__15447__2;
  G__15447.cljs$core$IFn$_invoke$arity$3 = G__15447__3;
  return G__15447;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args15426) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15426)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__15448 = i + 1;
        var G__15449 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__15448;
        out = G__15449;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var args__5572__auto__ = [];
  var len__5565__auto___15451 = arguments.length;
  var i__5566__auto___15452 = 0;
  while (true) {
    if (i__5566__auto___15452 < len__5565__auto___15451) {
      args__5572__auto__.push(arguments[i__5566__auto___15452]);
      var G__15453 = i__5566__auto___15452 + 1;
      i__5566__auto___15452 = G__15453;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq15450) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15450));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__15454 = self__.vec;
      var G__15455 = self__.node;
      var G__15456 = self__.i;
      var G__15457 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15454, G__15455, G__15456, G__15457) : cljs.core.chunked_seq.call(null, G__15454, G__15455, G__15456, G__15457);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__15458 = self__.vec;
    var G__15459 = self__.i + self__.off;
    var G__15460 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15458, G__15459, G__15460) : cljs.core.subvec.call(null, G__15458, G__15459, G__15460);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__15461 = self__.vec;
    var G__15462 = self__.i + self__.off;
    var G__15463 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15461, G__15462, G__15463) : cljs.core.subvec.call(null, G__15461, G__15462, G__15463);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__15464 = self__.vec;
      var G__15465 = self__.node;
      var G__15466 = self__.i;
      var G__15467 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15464, G__15465, G__15466, G__15467) : cljs.core.chunked_seq.call(null, G__15464, G__15465, G__15466, G__15467);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__15468 = self__.vec;
    var G__15469 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__15470 = end;
    var G__15471 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15468, G__15469, G__15470, G__15471) : cljs.core.chunked_seq.call(null, G__15468, G__15469, G__15470, G__15471);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__15472 = self__.vec;
    var G__15473 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__15474 = end;
    var G__15475 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15472, G__15473, G__15474, G__15475) : cljs.core.chunked_seq.call(null, G__15472, G__15473, G__15474, G__15475);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var args15476 = [];
  var len__5565__auto___15479 = arguments.length;
  var i__5566__auto___15480 = 0;
  while (true) {
    if (i__5566__auto___15480 < len__5565__auto___15479) {
      args15476.push(arguments[i__5566__auto___15480]);
      var G__15481 = i__5566__auto___15480 + 1;
      i__5566__auto___15480 = G__15481;
      continue;
    } else {
    }
    break;
  }
  var G__15478 = args15476.length;
  switch(G__15478) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15476.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__15484 = init__$1;
        var G__15485 = j;
        var G__15486 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15484, G__15485, G__15486) : f.call(null, G__15484, G__15485, G__15486);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__15503 = i + 1;
        var G__15504 = j + 1;
        var G__15505 = init__$2;
        i = G__15503;
        j = G__15504;
        init__$1 = G__15505;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__15487 = self__.meta;
  var G__15488 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__15489 = self__.start;
  var G__15490 = function() {
    var x__4838__auto__ = self__.end;
    var y__4839__auto__ = v_pos + 1;
    return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
  }();
  var G__15491 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15487, G__15488, G__15489, G__15490, G__15491) : cljs.core.build_subvec.call(null, G__15487, G__15488, G__15489, G__15490, G__15491);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__15492 = self__.meta;
    var G__15493 = self__.v;
    var G__15494 = self__.start;
    var G__15495 = self__.end - 1;
    var G__15496 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15492, G__15493, G__15494, G__15495, G__15496) : cljs.core.build_subvec.call(null, G__15492, G__15493, G__15494, G__15495, G__15496);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__15498 = self__.meta;
  var G__15499 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__15500 = self__.start;
  var G__15501 = self__.end + 1;
  var G__15502 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15498, G__15499, G__15500, G__15501, G__15502) : cljs.core.build_subvec.call(null, G__15498, G__15499, G__15500, G__15501, G__15502);
};
cljs.core.Subvec.prototype.call = function() {
  var G__15506 = null;
  var G__15506__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15506__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15506 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15506__2.call(this, self__, k);
      case 3:
        return G__15506__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15506.cljs$core$IFn$_invoke$arity$2 = G__15506__2;
  G__15506.cljs$core$IFn$_invoke$arity$3 = G__15506__3;
  return G__15506;
}();
cljs.core.Subvec.prototype.apply = function(self__, args15483) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15483)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__15507 = meta;
      var G__15508 = v.v;
      var G__15509 = v.start + start;
      var G__15510 = v.start + end;
      var G__15511 = __hash;
      meta = G__15507;
      v = G__15508;
      start = G__15509;
      end = G__15510;
      __hash = G__15511;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var args15512 = [];
  var len__5565__auto___15515 = arguments.length;
  var i__5566__auto___15516 = 0;
  while (true) {
    if (i__5566__auto___15516 < len__5565__auto___15515) {
      args15512.push(arguments[i__5566__auto___15516]);
      var G__15517 = i__5566__auto___15516 + 1;
      i__5566__auto___15516 = G__15517;
      continue;
    } else {
    }
    break;
  }
  var G__15514 = args15512.length;
  switch(G__15514) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15512.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__15530 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__15531 = level - 5;
        node = G__15530;
        level = G__15531;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__15535 = null;
  var G__15535__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15535__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15535 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15535__2.call(this, self__, k);
      case 3:
        return G__15535__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15535.cljs$core$IFn$_invoke$arity$2 = G__15535__2;
  G__15535.cljs$core$IFn$_invoke$arity$3 = G__15535__3;
  return G__15535;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args15532) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15532)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4526__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    var and__4514__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__4514__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4514__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4526__auto__ = self__.front;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4526__auto__ = self__.rear;
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__15536 = i + incr;
        i = G__15536;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__15537 = i + 1;
      var G__15538 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__15537;
      out = G__15538;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_15543 = 0;
  while (true) {
    if (i_15543 < l) {
      var k_15544 = ks[i_15543];
      new_obj[k_15544] = obj[k_15544];
      var G__15545 = i_15543 + 1;
      i_15543 = G__15545;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__15548 = init__$1;
        var G__15549 = k;
        var G__15550 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15548, G__15549, G__15550) : f.call(null, G__15548, G__15549, G__15550);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__15551 = cljs.core.rest(keys__$1);
        var G__15552 = init__$2;
        keys__$1 = G__15551;
        init__$1 = G__15552;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__15546_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15546_SHARP_, self__.strobj[p1__15546_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__15553 = null;
  var G__15553__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15553__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15553 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15553__2.call(this, self__, k);
      case 3:
        return G__15553__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15553.cljs$core$IFn$_invoke$arity$2 = G__15553__2;
  G__15553.cljs$core$IFn$_invoke$arity$3 = G__15553__3;
  return G__15553;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args15547) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15547)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4526__auto__ = self__.i < self__.base_count;
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__15556 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15556, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15556, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__15557 = i + 2;
        i = G__15557;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__15558 = i + 2;
        i = G__15558;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__15559 = i + 2;
        i = G__15559;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__15560 = i + 2;
        i = G__15560;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__15561 = i + 2;
        i = G__15561;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_15562 = 0;
  while (true) {
    if (i_15562 < l) {
      narr[i_15562] = arr[i_15562];
      var G__15563 = i_15562 + 1;
      i_15562 = G__15563;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15565 = cljs.core.seq(coll);
  var chunk__15566 = null;
  var count__15567 = 0;
  var i__15568 = 0;
  while (true) {
    if (i__15568 < count__15567) {
      var vec__15569 = chunk__15566.cljs$core$IIndexed$_nth$arity$2(null, i__15568);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15569, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15569, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__15578 = seq__15565;
      var G__15579 = chunk__15566;
      var G__15580 = count__15567;
      var G__15581 = i__15568 + 1;
      seq__15565 = G__15578;
      chunk__15566 = G__15579;
      count__15567 = G__15580;
      i__15568 = G__15581;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__15565);
      if (temp__4425__auto__) {
        var seq__15565__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15565__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__15565__$1);
          var G__15582 = cljs.core.chunk_rest(seq__15565__$1);
          var G__15583 = c__5310__auto__;
          var G__15584 = cljs.core.count(c__5310__auto__);
          var G__15585 = 0;
          seq__15565 = G__15582;
          chunk__15566 = G__15583;
          count__15567 = G__15584;
          i__15568 = G__15585;
          continue;
        } else {
          var vec__15570 = cljs.core.first(seq__15565__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15570, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15570, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__15586 = cljs.core.next(seq__15565__$1);
          var G__15587 = null;
          var G__15588 = 0;
          var G__15589 = 0;
          seq__15565 = G__15586;
          chunk__15566 = G__15587;
          count__15567 = G__15588;
          i__15568 = G__15589;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__15571 = init__$1;
        var G__15572 = self__.arr[i];
        var G__15573 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15571, G__15572, G__15573) : f.call(null, G__15571, G__15572, G__15573);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__15590 = i + 2;
        var G__15591 = init__$2;
        i = G__15590;
        init__$1 = G__15591;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__15592 = i + 2;
              i = G__15592;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__15593 = s + 2;
            var G__15594 = d;
            s = G__15593;
            d = G__15594;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__15595 = s + 2;
            var G__15596 = d + 2;
            s = G__15595;
            d = G__15596;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__15577 = cljs.core.aclone(self__.arr);
        G__15577[idx + 1] = v;
        return G__15577;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15597 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15598 = cljs.core.next(es);
          ret = G__15597;
          es = G__15598;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__15599 = null;
  var G__15599__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15599__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15599 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15599__2.call(this, self__, k);
      case 3:
        return G__15599__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15599.cljs$core$IFn$_invoke$arity$2 = G__15599__2;
  G__15599.cljs$core$IFn$_invoke$arity$3 = G__15599__3;
  return G__15599;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args15564) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15564)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_15600 = 0;
    while (true) {
      if (i_15600 < arr__$1.length) {
        var k_15601 = arr__$1[i_15600];
        var v_15602 = arr__$1[i_15600 + 1];
        var idx_15603 = cljs.core.array_index_of(ret, k_15601);
        if (idx_15603 === -1) {
          ret.push(k_15601);
          ret.push(v_15602);
        } else {
        }
        var G__15604 = i_15600 + 2;
        i_15600 = G__15604;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__15607 = cljs.core.next(es);
          var G__15608 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__15607;
          tcoll__$2 = G__15608;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__15606_15609 = self__.arr;
      G__15606_15609.pop();
      G__15606_15609.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__15610 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__15611 = i + 2;
      out = G__15610;
      i = G__15611;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var args15612 = [];
  var len__5565__auto___15617 = arguments.length;
  var i__5566__auto___15618 = 0;
  while (true) {
    if (i__5566__auto___15618 < len__5565__auto___15617) {
      args15612.push(arguments[i__5566__auto___15618]);
      var G__15619 = i__5566__auto___15618 + 1;
      i__5566__auto___15618 = G__15619;
      continue;
    } else {
    }
    break;
  }
  var G__15614 = args15612.length;
  switch(G__15614) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15612.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__15615 = cljs.core.aclone(arr);
  G__15615[i] = a;
  return G__15615;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__15616 = cljs.core.aclone(arr);
  G__15616[i] = a;
  G__15616[j] = b;
  return G__15616;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var args15621 = [];
  var len__5565__auto___15624 = arguments.length;
  var i__5566__auto___15625 = 0;
  while (true) {
    if (i__5566__auto___15625 < len__5565__auto___15624) {
      args15621.push(arguments[i__5566__auto___15625]);
      var G__15626 = i__5566__auto___15625 + 1;
      i__5566__auto___15625 = G__15626;
      continue;
    } else {
    }
    break;
  }
  var G__15623 = args15621.length;
  switch(G__15623) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15621.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__15631 = init__$1;
          var G__15632 = k;
          var G__15633 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15631, G__15632, G__15633) : f.call(null, G__15631, G__15632, G__15633);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__15634 = i + 2;
        var G__15635 = init__$2;
        i = G__15634;
        init__$1 = G__15635;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4526__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    var or__4526__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__4526__auto____$1) {
      return or__4526__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_15649 = 0;
        var j_15650 = 0;
        while (true) {
          if (i_15649 < 32) {
            if ((self__.bitmap >>> i_15649 & 1) === 0) {
              var G__15651 = i_15649 + 1;
              var G__15652 = j_15650;
              i_15649 = G__15651;
              j_15650 = G__15652;
              continue;
            } else {
              nodes[i_15649] = !(self__.arr[j_15650] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_15650]), self__.arr[j_15650], self__.arr[j_15650 + 1], added_leaf_QMARK_) : self__.arr[j_15650 + 1];
              var G__15653 = i_15649 + 1;
              var G__15654 = j_15650 + 2;
              i_15649 = G__15653;
              j_15650 = G__15654;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__15636 = edit__$1;
          var G__15637 = shift + 5;
          var G__15638 = key_or_nil;
          var G__15639 = val_or_node;
          var G__15640 = hash;
          var G__15641 = key;
          var G__15642 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15636, G__15637, G__15638, G__15639, G__15640, G__15641, G__15642) : cljs.core.create_node.call(null, G__15636, G__15637, G__15638, G__15639, G__15640, G__15641, G__15642);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_15655 = 0;
      var j_15656 = 0;
      while (true) {
        if (i_15655 < 32) {
          if ((self__.bitmap >>> i_15655 & 1) === 0) {
            var G__15657 = i_15655 + 1;
            var G__15658 = j_15656;
            i_15655 = G__15657;
            j_15656 = G__15658;
            continue;
          } else {
            nodes[i_15655] = !(self__.arr[j_15656] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_15656]), self__.arr[j_15656], self__.arr[j_15656 + 1], added_leaf_QMARK_) : self__.arr[j_15656 + 1];
            var G__15659 = i_15655 + 1;
            var G__15660 = j_15656 + 2;
            i_15655 = G__15659;
            j_15656 = G__15660;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__15643 = shift + 5;
          var G__15644 = key_or_nil;
          var G__15645 = val_or_node;
          var G__15646 = hash;
          var G__15647 = key;
          var G__15648 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15643, G__15644, G__15645, G__15646, G__15647, G__15648) : cljs.core.create_node.call(null, G__15643, G__15644, G__15645, G__15646, G__15647, G__15648);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__15661 = i + 1;
        var G__15662 = j + 2;
        var G__15663 = bitmap | 1 << i;
        i = G__15661;
        j = G__15662;
        bitmap = G__15663;
        continue;
      } else {
        var G__15664 = i + 1;
        var G__15665 = j;
        var G__15666 = bitmap;
        i = G__15664;
        j = G__15665;
        bitmap = G__15666;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__15667 = i + 1;
          var G__15668 = init__$2;
          i = G__15667;
          init__$1 = G__15668;
          continue;
        }
      } else {
        var G__15669 = i + 1;
        var G__15670 = init__$1;
        i = G__15669;
        init__$1 = G__15670;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__15671 = i + 2;
        i = G__15671;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var args15672 = [];
  var len__5565__auto___15675 = arguments.length;
  var i__5566__auto___15676 = 0;
  while (true) {
    if (i__5566__auto___15676 < len__5565__auto___15675) {
      args15672.push(arguments[i__5566__auto___15676]);
      var G__15677 = i__5566__auto___15676 + 1;
      i__5566__auto___15676 = G__15677;
      continue;
    } else {
    }
    break;
  }
  var G__15674 = args15672.length;
  switch(G__15674) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15672.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__15679 = self__.nodes;
    var G__15680 = self__.i + 2;
    var G__15681 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15679, G__15680, G__15681) : cljs.core.create_inode_seq.call(null, G__15679, G__15680, G__15681);
  } else {
    var G__15682 = self__.nodes;
    var G__15683 = self__.i;
    var G__15684 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15682, G__15683, G__15684) : cljs.core.create_inode_seq.call(null, G__15682, G__15683, G__15684);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var args15685 = [];
  var len__5565__auto___15688 = arguments.length;
  var i__5566__auto___15689 = 0;
  while (true) {
    if (i__5566__auto___15689 < len__5565__auto___15688) {
      args15685.push(arguments[i__5566__auto___15689]);
      var G__15690 = i__5566__auto___15689 + 1;
      i__5566__auto___15689 = G__15690;
      continue;
    } else {
    }
    break;
  }
  var G__15687 = args15685.length;
  switch(G__15687) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15685.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__15692 = j + 2;
              j = G__15692;
              continue;
            }
          } else {
            var G__15693 = j + 2;
            j = G__15693;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__15694 = null;
  var G__15695 = self__.nodes;
  var G__15696 = self__.i;
  var G__15697 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15694, G__15695, G__15696, G__15697) : cljs.core.create_array_node_seq.call(null, G__15694, G__15695, G__15696, G__15697);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var args15698 = [];
  var len__5565__auto___15701 = arguments.length;
  var i__5566__auto___15702 = 0;
  while (true) {
    if (i__5566__auto___15702 < len__5565__auto___15701) {
      args15698.push(arguments[i__5566__auto___15702]);
      var G__15703 = i__5566__auto___15702 + 1;
      i__5566__auto___15702 = G__15703;
      continue;
    } else {
    }
    break;
  }
  var G__15700 = args15698.length;
  switch(G__15700) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15698.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__15705 = j + 1;
            j = G__15705;
            continue;
          }
        } else {
          var G__15706 = j + 1;
          j = G__15706;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15708 = cljs.core.seq(coll);
  var chunk__15709 = null;
  var count__15710 = 0;
  var i__15711 = 0;
  while (true) {
    if (i__15711 < count__15710) {
      var vec__15712 = chunk__15709.cljs$core$IIndexed$_nth$arity$2(null, i__15711);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15712, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15712, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__15716 = seq__15708;
      var G__15717 = chunk__15709;
      var G__15718 = count__15710;
      var G__15719 = i__15711 + 1;
      seq__15708 = G__15716;
      chunk__15709 = G__15717;
      count__15710 = G__15718;
      i__15711 = G__15719;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__15708);
      if (temp__4425__auto__) {
        var seq__15708__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15708__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__15708__$1);
          var G__15720 = cljs.core.chunk_rest(seq__15708__$1);
          var G__15721 = c__5310__auto__;
          var G__15722 = cljs.core.count(c__5310__auto__);
          var G__15723 = 0;
          seq__15708 = G__15720;
          chunk__15709 = G__15721;
          count__15710 = G__15722;
          i__15711 = G__15723;
          continue;
        } else {
          var vec__15713 = cljs.core.first(seq__15708__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15713, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15713, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__15724 = cljs.core.next(seq__15708__$1);
          var G__15725 = null;
          var G__15726 = 0;
          var G__15727 = 0;
          seq__15708 = G__15724;
          chunk__15709 = G__15725;
          count__15710 = G__15726;
          i__15711 = G__15727;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15728 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15729 = cljs.core.next(es);
          ret = G__15728;
          es = G__15729;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__15730 = null;
  var G__15730__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15730__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15730 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15730__2.call(this, self__, k);
      case 3:
        return G__15730__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15730.cljs$core$IFn$_invoke$arity$2 = G__15730__2;
  G__15730.cljs$core$IFn$_invoke$arity$3 = G__15730__3;
  return G__15730;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args15707) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15707)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15731 = i + 2;
      var G__15732 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__15731;
      ret = G__15732;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15733 = i + 1;
      var G__15734 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__15733;
      out = G__15734;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__15736 = cljs.core.next(es);
          var G__15737 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__15736;
          tcoll__$1 = G__15737;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__15738 = ascending_QMARK_ ? t.left : t.right;
      var G__15739 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__15738;
      stack__$1 = G__15739;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__15749 = init__$1;
      var G__15750 = node.key;
      var G__15751 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15749, G__15750, G__15751) : f.call(null, G__15749, G__15750, G__15751);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__15753 = null;
  var G__15753__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15753__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15753 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15753__2.call(this, self__, k);
      case 3:
        return G__15753__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15753.cljs$core$IFn$_invoke$arity$2 = G__15753__2;
  G__15753.cljs$core$IFn$_invoke$arity$3 = G__15753__3;
  return G__15753;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args15752) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15752)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__15755 = null;
  var G__15755__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15755__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15755 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15755__2.call(this, self__, k);
      case 3:
        return G__15755__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15755.cljs$core$IFn$_invoke$arity$2 = G__15755__2;
  G__15755.cljs$core$IFn$_invoke$arity$3 = G__15755__3;
  return G__15755;
}();
cljs.core.RedNode.prototype.apply = function(self__, args15754) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15754)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__15768 = k;
      var G__15769 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15768, G__15769) : comp.call(null, G__15768, G__15769);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__15788 = k;
      var G__15789 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15788, G__15789) : comp.call(null, G__15788, G__15789);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15799 = cljs.core.seq(coll);
  var chunk__15800 = null;
  var count__15801 = 0;
  var i__15802 = 0;
  while (true) {
    if (i__15802 < count__15801) {
      var vec__15803 = chunk__15800.cljs$core$IIndexed$_nth$arity$2(null, i__15802);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15803, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15803, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__15809 = seq__15799;
      var G__15810 = chunk__15800;
      var G__15811 = count__15801;
      var G__15812 = i__15802 + 1;
      seq__15799 = G__15809;
      chunk__15800 = G__15810;
      count__15801 = G__15811;
      i__15802 = G__15812;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__15799);
      if (temp__4425__auto__) {
        var seq__15799__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15799__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__15799__$1);
          var G__15813 = cljs.core.chunk_rest(seq__15799__$1);
          var G__15814 = c__5310__auto__;
          var G__15815 = cljs.core.count(c__5310__auto__);
          var G__15816 = 0;
          seq__15799 = G__15813;
          chunk__15800 = G__15814;
          count__15801 = G__15815;
          i__15802 = G__15816;
          continue;
        } else {
          var vec__15804 = cljs.core.first(seq__15799__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15804, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15804, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__15817 = cljs.core.next(seq__15799__$1);
          var G__15818 = null;
          var G__15819 = 0;
          var G__15820 = 0;
          seq__15799 = G__15817;
          chunk__15800 = G__15818;
          count__15801 = G__15819;
          i__15802 = G__15820;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__15805 = k;
        var G__15806 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15805, G__15806) : self__.comp.call(null, G__15805, G__15806);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__15821 = t.left;
          t = G__15821;
          continue;
        } else {
          var G__15822 = t.right;
          t = G__15822;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15823 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15824 = cljs.core.next(es);
          ret = G__15823;
          es = G__15824;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__15825 = null;
  var G__15825__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15825__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15825 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15825__2.call(this, self__, k);
      case 3:
        return G__15825__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15825.cljs$core$IFn$_invoke$arity$2 = G__15825__2;
  G__15825.cljs$core$IFn$_invoke$arity$3 = G__15825__3;
  return G__15825;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args15798) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15798)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__15807 = k;
          var G__15808 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15807, G__15808) : self__.comp.call(null, G__15807, G__15808);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__15826 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15827 = t.left;
              stack = G__15826;
              t = G__15827;
              continue;
            } else {
              var G__15828 = stack;
              var G__15829 = t.right;
              stack = G__15828;
              t = G__15829;
              continue;
            }
          } else {
            if (c > 0) {
              var G__15830 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15831 = t.right;
              stack = G__15830;
              t = G__15831;
              continue;
            } else {
              var G__15832 = stack;
              var G__15833 = t.left;
              stack = G__15832;
              t = G__15833;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var args__5572__auto__ = [];
  var len__5565__auto___15835 = arguments.length;
  var i__5566__auto___15836 = 0;
  while (true) {
    if (i__5566__auto___15836 < len__5565__auto___15835) {
      args__5572__auto__.push(arguments[i__5566__auto___15836]);
      var G__15837 = i__5566__auto___15836 + 1;
      i__5566__auto___15836 = G__15837;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__15838 = cljs.core.nnext(in$);
      var G__15839 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__15838;
      out = G__15839;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq15834) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15834));
};
cljs.core.array_map = function cljs$core$array_map() {
  var args__5572__auto__ = [];
  var len__5565__auto___15841 = arguments.length;
  var i__5566__auto___15842 = 0;
  while (true) {
    if (i__5566__auto___15842 < len__5565__auto___15841) {
      args__5572__auto__.push(arguments[i__5566__auto___15842]);
      var G__15843 = i__5566__auto___15842 + 1;
      i__5566__auto___15842 = G__15843;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq15840) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15840));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var args__5572__auto__ = [];
  var len__5565__auto___15847 = arguments.length;
  var i__5566__auto___15848 = 0;
  while (true) {
    if (i__5566__auto___15848 < len__5565__auto___15847) {
      args__5572__auto__.push(arguments[i__5566__auto___15848]);
      var G__15849 = i__5566__auto___15848 + 1;
      i__5566__auto___15848 = G__15849;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__15850 = cljs.core.nnext(kvs);
      kvs = G__15850;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq15844) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15844));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var args__5572__auto__ = [];
  var len__5565__auto___15852 = arguments.length;
  var i__5566__auto___15853 = 0;
  while (true) {
    if (i__5566__auto___15853 < len__5565__auto___15852) {
      args__5572__auto__.push(arguments[i__5566__auto___15853]);
      var G__15854 = i__5566__auto___15853 + 1;
      i__5566__auto___15853 = G__15854;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__15855 = cljs.core.nnext(in$);
      var G__15856 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__15855;
      out = G__15856;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq15851) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15851));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var args__5572__auto__ = [];
  var len__5565__auto___15859 = arguments.length;
  var i__5566__auto___15860 = 0;
  while (true) {
    if (i__5566__auto___15860 < len__5565__auto___15859) {
      args__5572__auto__.push(arguments[i__5566__auto___15860]);
      var G__15861 = i__5566__auto___15860 + 1;
      i__5566__auto___15860 = G__15861;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__15862 = cljs.core.nnext(in$);
      var G__15863 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__15862;
      out = G__15863;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq15857) {
  var G__15858 = cljs.core.first(seq15857);
  var seq15857__$1 = cljs.core.next(seq15857);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__15858, seq15857__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var args__5572__auto__ = [];
  var len__5565__auto___15871 = arguments.length;
  var i__5566__auto___15872 = 0;
  while (true) {
    if (i__5566__auto___15872 < len__5565__auto___15871) {
      args__5572__auto__.push(arguments[i__5566__auto___15872]);
      var G__15873 = i__5566__auto___15872 + 1;
      i__5566__auto___15872 = G__15873;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__15868_SHARP_, p2__15869_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4526__auto__ = p1__15868_SHARP_;
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__15869_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq15870) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15870));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var args__5572__auto__ = [];
  var len__5565__auto___15878 = arguments.length;
  var i__5566__auto___15879 = 0;
  while (true) {
    if (i__5566__auto___15879 < len__5565__auto___15878) {
      args__5572__auto__.push(arguments[i__5566__auto___15879]);
      var G__15880 = i__5566__auto___15879 + 1;
      i__5566__auto___15879 = G__15880;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__15876 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__15877 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15876, G__15877) : f.call(null, G__15876, G__15877);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4526__auto__ = m1;
          if (cljs.core.truth_(or__4526__auto__)) {
            return or__4526__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq15874) {
  var G__15875 = cljs.core.first(seq15874);
  var seq15874__$1 = cljs.core.next(seq15874);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__15875, seq15874__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__15881 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__15882 = cljs.core.next(keys);
      ret = G__15881;
      keys = G__15882;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15885 = cljs.core.seq(coll);
  var chunk__15886 = null;
  var count__15887 = 0;
  var i__15888 = 0;
  while (true) {
    if (i__15888 < count__15887) {
      var vec__15889 = chunk__15886.cljs$core$IIndexed$_nth$arity$2(null, i__15888);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15889, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15889, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__15891 = seq__15885;
      var G__15892 = chunk__15886;
      var G__15893 = count__15887;
      var G__15894 = i__15888 + 1;
      seq__15885 = G__15891;
      chunk__15886 = G__15892;
      count__15887 = G__15893;
      i__15888 = G__15894;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__15885);
      if (temp__4425__auto__) {
        var seq__15885__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15885__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__15885__$1);
          var G__15895 = cljs.core.chunk_rest(seq__15885__$1);
          var G__15896 = c__5310__auto__;
          var G__15897 = cljs.core.count(c__5310__auto__);
          var G__15898 = 0;
          seq__15885 = G__15895;
          chunk__15886 = G__15896;
          count__15887 = G__15897;
          i__15888 = G__15898;
          continue;
        } else {
          var vec__15890 = cljs.core.first(seq__15885__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15890, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15890, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__15899 = cljs.core.next(seq__15885__$1);
          var G__15900 = null;
          var G__15901 = 0;
          var G__15902 = 0;
          seq__15885 = G__15899;
          chunk__15886 = G__15900;
          count__15887 = G__15901;
          i__15888 = G__15902;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15883_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15883_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__15903 = null;
  var G__15903__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15903__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15903 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15903__2.call(this, self__, k);
      case 3:
        return G__15903__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15903.cljs$core$IFn$_invoke$arity$2 = G__15903__2;
  G__15903.cljs$core$IFn$_invoke$arity$3 = G__15903__3;
  return G__15903;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args15884) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15884)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15904 = i + 1;
        var G__15905 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__15904;
        out = G__15905;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__15906 = i + 1;
        var G__15907 = cljs.core._conj_BANG_(out, items[i]);
        i = G__15906;
        out = G__15907;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__15909 = null;
  var G__15909__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__15909__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__15909 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15909__2.call(this, self__, k);
      case 3:
        return G__15909__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15909.cljs$core$IFn$_invoke$arity$2 = G__15909__2;
  G__15909.cljs$core$IFn$_invoke$arity$3 = G__15909__3;
  return G__15909;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args15908) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15908)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15912 = cljs.core.seq(coll);
  var chunk__15913 = null;
  var count__15914 = 0;
  var i__15915 = 0;
  while (true) {
    if (i__15915 < count__15914) {
      var vec__15916 = chunk__15913.cljs$core$IIndexed$_nth$arity$2(null, i__15915);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15916, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15916, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__15918 = seq__15912;
      var G__15919 = chunk__15913;
      var G__15920 = count__15914;
      var G__15921 = i__15915 + 1;
      seq__15912 = G__15918;
      chunk__15913 = G__15919;
      count__15914 = G__15920;
      i__15915 = G__15921;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__15912);
      if (temp__4425__auto__) {
        var seq__15912__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15912__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__15912__$1);
          var G__15922 = cljs.core.chunk_rest(seq__15912__$1);
          var G__15923 = c__5310__auto__;
          var G__15924 = cljs.core.count(c__5310__auto__);
          var G__15925 = 0;
          seq__15912 = G__15922;
          chunk__15913 = G__15923;
          count__15914 = G__15924;
          i__15915 = G__15925;
          continue;
        } else {
          var vec__15917 = cljs.core.first(seq__15912__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15917, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15917, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__15926 = cljs.core.next(seq__15912__$1);
          var G__15927 = null;
          var G__15928 = 0;
          var G__15929 = 0;
          seq__15912 = G__15926;
          chunk__15913 = G__15927;
          count__15914 = G__15928;
          i__15915 = G__15929;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15910_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15910_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__15930 = null;
  var G__15930__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15930__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15930 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15930__2.call(this, self__, k);
      case 3:
        return G__15930__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15930.cljs$core$IFn$_invoke$arity$2 = G__15930__2;
  G__15930.cljs$core$IFn$_invoke$arity$3 = G__15930__3;
  return G__15930;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args15911) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15911)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5404__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5404__auto__.length) {
        var G__15931 = i + 1;
        var G__15932 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__15931;
        res = G__15932;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__15933 = cljs.core.next(in$__$1);
          var G__15934 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__15933;
          out = G__15934;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var args15935 = [];
  var len__5565__auto___15939 = arguments.length;
  var i__5566__auto___15940 = 0;
  while (true) {
    if (i__5566__auto___15940 < len__5565__auto___15939) {
      args15935.push(arguments[i__5566__auto___15940]);
      var G__15941 = i__5566__auto___15940 + 1;
      i__5566__auto___15940 = G__15941;
      continue;
    } else {
    }
    break;
  }
  var G__15938 = args15935.length;
  switch(G__15938) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15935.slice(0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5584__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq15936) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15936));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var args__5572__auto__ = [];
  var len__5565__auto___15944 = arguments.length;
  var i__5566__auto___15945 = 0;
  while (true) {
    if (i__5566__auto___15945 < len__5565__auto___15944) {
      args__5572__auto__.push(arguments[i__5566__auto___15945]);
      var G__15946 = i__5566__auto___15945 + 1;
      i__5566__auto___15945 = G__15946;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq15943) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15943));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var args__5572__auto__ = [];
  var len__5565__auto___15949 = arguments.length;
  var i__5566__auto___15950 = 0;
  while (true) {
    if (i__5566__auto___15950 < len__5565__auto___15949) {
      args__5572__auto__.push(arguments[i__5566__auto___15950]);
      var G__15951 = i__5566__auto___15950 + 1;
      i__5566__auto___15950 = G__15951;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq15947) {
  var G__15948 = cljs.core.first(seq15947);
  var seq15947__$1 = cljs.core.next(seq15947);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__15948, seq15947__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var args15954 = [];
  var len__5565__auto___15957 = arguments.length;
  var i__5566__auto___15958 = 0;
  while (true) {
    if (i__5566__auto___15958 < len__5565__auto___15957) {
      args15954.push(arguments[i__5566__auto___15958]);
      var G__15959 = i__5566__auto___15958 + 1;
      i__5566__auto___15958 = G__15959;
      continue;
    } else {
    }
    break;
  }
  var G__15956 = args15954.length;
  switch(G__15956) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15954.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__15952_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__15952_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__15952_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__15953_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__15953_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__15953_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var args15961 = [];
  var len__5565__auto___15970 = arguments.length;
  var i__5566__auto___15971 = 0;
  while (true) {
    if (i__5566__auto___15971 < len__5565__auto___15970) {
      args15961.push(arguments[i__5566__auto___15971]);
      var G__15972 = i__5566__auto___15971 + 1;
      i__5566__auto___15971 = G__15972;
      continue;
    } else {
    }
    break;
  }
  var G__15963 = args15961.length;
  switch(G__15963) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15961.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__15974 = null;
        var G__15974__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15974__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__15974__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__15974 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15974__0.call(this);
            case 1:
              return G__15974__1.call(this, result);
            case 2:
              return G__15974__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15974.cljs$core$IFn$_invoke$arity$0 = G__15974__0;
        G__15974.cljs$core$IFn$_invoke$arity$1 = G__15974__1;
        G__15974.cljs$core$IFn$_invoke$arity$2 = G__15974__2;
        return G__15974;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__15968, seen__$1) {
        while (true) {
          var vec__15969 = p__15968;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15969, 0, null);
          var xs__$1 = vec__15969;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__15975 = cljs.core.rest(s);
              var G__15976 = seen__$1;
              p__15968 = G__15975;
              seen__$1 = G__15976;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__15977 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__15978 = cljs.core.next(s__$1);
      ret = G__15977;
      s__$1 = G__15978;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__15981 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__15982 = cljs.core.next(ks);
      var G__15983 = cljs.core.next(vs);
      map = G__15981;
      ks = G__15982;
      vs = G__15983;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var args15986 = [];
  var len__5565__auto___15993 = arguments.length;
  var i__5566__auto___15994 = 0;
  while (true) {
    if (i__5566__auto___15994 < len__5565__auto___15993) {
      args15986.push(arguments[i__5566__auto___15994]);
      var G__15995 = i__5566__auto___15994 + 1;
      i__5566__auto___15994 = G__15995;
      continue;
    } else {
    }
    break;
  }
  var G__15992 = args15986.length;
  switch(G__15992) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15986.slice(3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15984_SHARP_, p2__15985_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__15984_SHARP_, p2__15985_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq15987) {
  var G__15988 = cljs.core.first(seq15987);
  var seq15987__$1 = cljs.core.next(seq15987);
  var G__15989 = cljs.core.first(seq15987__$1);
  var seq15987__$2 = cljs.core.next(seq15987__$1);
  var G__15990 = cljs.core.first(seq15987__$2);
  var seq15987__$3 = cljs.core.next(seq15987__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__15988, G__15989, G__15990, seq15987__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var args15999 = [];
  var len__5565__auto___16006 = arguments.length;
  var i__5566__auto___16007 = 0;
  while (true) {
    if (i__5566__auto___16007 < len__5565__auto___16006) {
      args15999.push(arguments[i__5566__auto___16007]);
      var G__16008 = i__5566__auto___16007 + 1;
      i__5566__auto___16007 = G__16008;
      continue;
    } else {
    }
    break;
  }
  var G__16005 = args15999.length;
  switch(G__16005) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args15999.slice(3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15997_SHARP_, p2__15998_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__15997_SHARP_, p2__15998_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq16000) {
  var G__16001 = cljs.core.first(seq16000);
  var seq16000__$1 = cljs.core.next(seq16000);
  var G__16002 = cljs.core.first(seq16000__$1);
  var seq16000__$2 = cljs.core.next(seq16000__$1);
  var G__16003 = cljs.core.first(seq16000__$2);
  var seq16000__$3 = cljs.core.next(seq16000__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__16001, G__16002, G__16003, seq16000__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var args16010 = [];
  var len__5565__auto___16013 = arguments.length;
  var i__5566__auto___16014 = 0;
  while (true) {
    if (i__5566__auto___16014 < len__5565__auto___16013) {
      args16010.push(arguments[i__5566__auto___16014]);
      var G__16015 = i__5566__auto___16014 + 1;
      i__5566__auto___16014 = G__16015;
      continue;
    } else {
    }
    break;
  }
  var G__16012 = args16010.length;
  switch(G__16012) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16010.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__16017 = null;
        var G__16017__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16017__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__16017__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__16017 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16017__0.call(this);
            case 1:
              return G__16017__1.call(this, result);
            case 2:
              return G__16017__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16017.cljs$core$IFn$_invoke$arity$0 = G__16017__0;
        G__16017.cljs$core$IFn$_invoke$arity$1 = G__16017__1;
        G__16017.cljs$core$IFn$_invoke$arity$2 = G__16017__2;
        return G__16017;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var args16018 = [];
  var len__5565__auto___16022 = arguments.length;
  var i__5566__auto___16023 = 0;
  while (true) {
    if (i__5566__auto___16023 < len__5565__auto___16022) {
      args16018.push(arguments[i__5566__auto___16023]);
      var G__16024 = i__5566__auto___16023 + 1;
      i__5566__auto___16023 = G__16024;
      continue;
    } else {
    }
    break;
  }
  var G__16020 = args16018.length;
  switch(G__16020) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16018.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__16026 = null;
      var G__16026__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__16026__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__16026__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__16026 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__16026__0.call(this);
          case 1:
            return G__16026__1.call(this, result);
          case 2:
            return G__16026__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16026.cljs$core$IFn$_invoke$arity$0 = G__16026__0;
      G__16026.cljs$core$IFn$_invoke$arity$1 = G__16026__1;
      G__16026.cljs$core$IFn$_invoke$arity$2 = G__16026__2;
      return G__16026;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__16021 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16021) : pred.call(null, G__16021);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__16035 = function() {
      var G__16037 = cljs.core._entry_key(sc, e);
      var G__16038 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16037, G__16038) : comp.call(null, G__16037, G__16038);
    }();
    var G__16036 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__16035, G__16036) : test.call(null, G__16035, G__16036);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var args16039 = [];
  var len__5565__auto___16044 = arguments.length;
  var i__5566__auto___16045 = 0;
  while (true) {
    if (i__5566__auto___16045 < len__5565__auto___16044) {
      args16039.push(arguments[i__5566__auto___16045]);
      var G__16046 = i__5566__auto___16045 + 1;
      i__5566__auto___16045 = G__16046;
      continue;
    } else {
    }
    break;
  }
  var G__16041 = args16039.length;
  switch(G__16041) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16039.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__16042 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16042, 0, null);
      var s = vec__16042;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__16043 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16043, 0, null);
    var s = vec__16043;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var args16048 = [];
  var len__5565__auto___16053 = arguments.length;
  var i__5566__auto___16054 = 0;
  while (true) {
    if (i__5566__auto___16054 < len__5565__auto___16053) {
      args16048.push(arguments[i__5566__auto___16054]);
      var G__16055 = i__5566__auto___16054 + 1;
      i__5566__auto___16054 = G__16055;
      continue;
    } else {
    }
    break;
  }
  var G__16050 = args16048.length;
  switch(G__16050) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16048.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__16051 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16051, 0, null);
      var s = vec__16051;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__16052 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16052, 0, null);
    var s = vec__16052;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__16057 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__16057);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__16058 = i + self__.step;
        var G__16059 = ret__$1;
        i = G__16058;
        ret = G__16059;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.range = function cljs$core$range() {
  var args16060 = [];
  var len__5565__auto___16063 = arguments.length;
  var i__5566__auto___16064 = 0;
  while (true) {
    if (i__5566__auto___16064 < len__5565__auto___16063) {
      args16060.push(arguments[i__5566__auto___16064]);
      var G__16065 = i__5566__auto___16064 + 1;
      i__5566__auto___16064 = G__16065;
      continue;
    } else {
    }
    break;
  }
  var G__16062 = args16060.length;
  switch(G__16062) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16060.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var args16067 = [];
  var len__5565__auto___16072 = arguments.length;
  var i__5566__auto___16073 = 0;
  while (true) {
    if (i__5566__auto___16073 < len__5565__auto___16072) {
      args16067.push(arguments[i__5566__auto___16073]);
      var G__16074 = i__5566__auto___16073 + 1;
      i__5566__auto___16073 = G__16074;
      continue;
    } else {
    }
    break;
  }
  var G__16069 = args16067.length;
  switch(G__16069) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16067.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__16070 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__16070) : cljs.core.pr_str.call(null, G__16070);
    }())].join(""));
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__16076 = null;
        var G__16076__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16076__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__16076__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__16076 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16076__0.call(this);
            case 1:
              return G__16076__1.call(this, result);
            case 2:
              return G__16076__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16076.cljs$core$IFn$_invoke$arity$0 = G__16076__0;
        G__16076.cljs$core$IFn$_invoke$arity$1 = G__16076__1;
        G__16076.cljs$core$IFn$_invoke$arity$2 = G__16076__2;
        return G__16076;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__16071 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__16071) : cljs.core.pr_str.call(null, G__16071);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var args16078 = [];
  var len__5565__auto___16081 = arguments.length;
  var i__5566__auto___16082 = 0;
  while (true) {
    if (i__5566__auto___16082 < len__5565__auto___16081) {
      args16078.push(arguments[i__5566__auto___16082]);
      var G__16083 = i__5566__auto___16082 + 1;
      i__5566__auto___16082 = G__16083;
      continue;
    } else {
    }
    break;
  }
  var G__16080 = args16078.length;
  switch(G__16080) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16078.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__16085 = null;
        var G__16085__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16085__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__16085__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__16085 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16085__0.call(this);
            case 1:
              return G__16085__1.call(this, result);
            case 2:
              return G__16085__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16085.cljs$core$IFn$_invoke$arity$0 = G__16085__0;
        G__16085.cljs$core$IFn$_invoke$arity$1 = G__16085__1;
        G__16085.cljs$core$IFn$_invoke$arity$2 = G__16085__2;
        return G__16085;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__16077_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__16077_SHARP_) : f.call(null, p1__16077_SHARP_));
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var args16086 = [];
  var len__5565__auto___16091 = arguments.length;
  var i__5566__auto___16092 = 0;
  while (true) {
    if (i__5566__auto___16092 < len__5565__auto___16091) {
      args16086.push(arguments[i__5566__auto___16092]);
      var G__16093 = i__5566__auto___16092 + 1;
      i__5566__auto___16092 = G__16093;
      continue;
    } else {
    }
    break;
  }
  var G__16088 = args16086.length;
  switch(G__16088) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16086.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__16089 = init;
        var G__16090 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16089, G__16090) : f.call(null, G__16089, G__16090);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var args16105 = [];
  var len__5565__auto___16112 = arguments.length;
  var i__5566__auto___16113 = 0;
  while (true) {
    if (i__5566__auto___16113 < len__5565__auto___16112) {
      args16105.push(arguments[i__5566__auto___16113]);
      var G__16114 = i__5566__auto___16113 + 1;
      i__5566__auto___16113 = G__16114;
      continue;
    } else {
    }
    break;
  }
  var G__16111 = args16105.length;
  switch(G__16111) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args16105.slice(3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__16116 = null;
    var G__16116__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__16116__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__16116__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__16116__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__16116__4 = function() {
      var G__16117__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__16117 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__16118__i = 0, G__16118__a = new Array(arguments.length - 3);
          while (G__16118__i < G__16118__a.length) {
            G__16118__a[G__16118__i] = arguments[G__16118__i + 3];
            ++G__16118__i;
          }
          args = new cljs.core.IndexedSeq(G__16118__a, 0);
        }
        return G__16117__delegate.call(this, x, y, z, args);
      };
      G__16117.cljs$lang$maxFixedArity = 3;
      G__16117.cljs$lang$applyTo = function(arglist__16119) {
        var x = cljs.core.first(arglist__16119);
        arglist__16119 = cljs.core.next(arglist__16119);
        var y = cljs.core.first(arglist__16119);
        arglist__16119 = cljs.core.next(arglist__16119);
        var z = cljs.core.first(arglist__16119);
        var args = cljs.core.rest(arglist__16119);
        return G__16117__delegate(x, y, z, args);
      };
      G__16117.cljs$core$IFn$_invoke$arity$variadic = G__16117__delegate;
      return G__16117;
    }();
    G__16116 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__16116__0.call(this);
        case 1:
          return G__16116__1.call(this, x);
        case 2:
          return G__16116__2.call(this, x, y);
        case 3:
          return G__16116__3.call(this, x, y, z);
        default:
          var G__16120 = null;
          if (arguments.length > 3) {
            var G__16121__i = 0, G__16121__a = new Array(arguments.length - 3);
            while (G__16121__i < G__16121__a.length) {
              G__16121__a[G__16121__i] = arguments[G__16121__i + 3];
              ++G__16121__i;
            }
            G__16120 = new cljs.core.IndexedSeq(G__16121__a, 0);
          }
          return G__16116__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16120);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__16116.cljs$lang$maxFixedArity = 3;
    G__16116.cljs$lang$applyTo = G__16116__4.cljs$lang$applyTo;
    G__16116.cljs$core$IFn$_invoke$arity$0 = G__16116__0;
    G__16116.cljs$core$IFn$_invoke$arity$1 = G__16116__1;
    G__16116.cljs$core$IFn$_invoke$arity$2 = G__16116__2;
    G__16116.cljs$core$IFn$_invoke$arity$3 = G__16116__3;
    G__16116.cljs$core$IFn$_invoke$arity$variadic = G__16116__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__16116;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__16122 = null;
    var G__16122__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__16122__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__16122__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__16122__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__16122__4 = function() {
      var G__16123__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__16123 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__16124__i = 0, G__16124__a = new Array(arguments.length - 3);
          while (G__16124__i < G__16124__a.length) {
            G__16124__a[G__16124__i] = arguments[G__16124__i + 3];
            ++G__16124__i;
          }
          args = new cljs.core.IndexedSeq(G__16124__a, 0);
        }
        return G__16123__delegate.call(this, x, y, z, args);
      };
      G__16123.cljs$lang$maxFixedArity = 3;
      G__16123.cljs$lang$applyTo = function(arglist__16125) {
        var x = cljs.core.first(arglist__16125);
        arglist__16125 = cljs.core.next(arglist__16125);
        var y = cljs.core.first(arglist__16125);
        arglist__16125 = cljs.core.next(arglist__16125);
        var z = cljs.core.first(arglist__16125);
        var args = cljs.core.rest(arglist__16125);
        return G__16123__delegate(x, y, z, args);
      };
      G__16123.cljs$core$IFn$_invoke$arity$variadic = G__16123__delegate;
      return G__16123;
    }();
    G__16122 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__16122__0.call(this);
        case 1:
          return G__16122__1.call(this, x);
        case 2:
          return G__16122__2.call(this, x, y);
        case 3:
          return G__16122__3.call(this, x, y, z);
        default:
          var G__16126 = null;
          if (arguments.length > 3) {
            var G__16127__i = 0, G__16127__a = new Array(arguments.length - 3);
            while (G__16127__i < G__16127__a.length) {
              G__16127__a[G__16127__i] = arguments[G__16127__i + 3];
              ++G__16127__i;
            }
            G__16126 = new cljs.core.IndexedSeq(G__16127__a, 0);
          }
          return G__16122__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16126);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__16122.cljs$lang$maxFixedArity = 3;
    G__16122.cljs$lang$applyTo = G__16122__4.cljs$lang$applyTo;
    G__16122.cljs$core$IFn$_invoke$arity$0 = G__16122__0;
    G__16122.cljs$core$IFn$_invoke$arity$1 = G__16122__1;
    G__16122.cljs$core$IFn$_invoke$arity$2 = G__16122__2;
    G__16122.cljs$core$IFn$_invoke$arity$3 = G__16122__3;
    G__16122.cljs$core$IFn$_invoke$arity$variadic = G__16122__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__16122;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__16128 = null;
    var G__16128__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__16128__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__16128__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__16128__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__16128__4 = function() {
      var G__16129__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__16129 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__16130__i = 0, G__16130__a = new Array(arguments.length - 3);
          while (G__16130__i < G__16130__a.length) {
            G__16130__a[G__16130__i] = arguments[G__16130__i + 3];
            ++G__16130__i;
          }
          args = new cljs.core.IndexedSeq(G__16130__a, 0);
        }
        return G__16129__delegate.call(this, x, y, z, args);
      };
      G__16129.cljs$lang$maxFixedArity = 3;
      G__16129.cljs$lang$applyTo = function(arglist__16131) {
        var x = cljs.core.first(arglist__16131);
        arglist__16131 = cljs.core.next(arglist__16131);
        var y = cljs.core.first(arglist__16131);
        arglist__16131 = cljs.core.next(arglist__16131);
        var z = cljs.core.first(arglist__16131);
        var args = cljs.core.rest(arglist__16131);
        return G__16129__delegate(x, y, z, args);
      };
      G__16129.cljs$core$IFn$_invoke$arity$variadic = G__16129__delegate;
      return G__16129;
    }();
    G__16128 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__16128__0.call(this);
        case 1:
          return G__16128__1.call(this, x);
        case 2:
          return G__16128__2.call(this, x, y);
        case 3:
          return G__16128__3.call(this, x, y, z);
        default:
          var G__16132 = null;
          if (arguments.length > 3) {
            var G__16133__i = 0, G__16133__a = new Array(arguments.length - 3);
            while (G__16133__i < G__16133__a.length) {
              G__16133__a[G__16133__i] = arguments[G__16133__i + 3];
              ++G__16133__i;
            }
            G__16132 = new cljs.core.IndexedSeq(G__16133__a, 0);
          }
          return G__16128__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16132);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__16128.cljs$lang$maxFixedArity = 3;
    G__16128.cljs$lang$applyTo = G__16128__4.cljs$lang$applyTo;
    G__16128.cljs$core$IFn$_invoke$arity$0 = G__16128__0;
    G__16128.cljs$core$IFn$_invoke$arity$1 = G__16128__1;
    G__16128.cljs$core$IFn$_invoke$arity$2 = G__16128__2;
    G__16128.cljs$core$IFn$_invoke$arity$3 = G__16128__3;
    G__16128.cljs$core$IFn$_invoke$arity$variadic = G__16128__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__16128;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__16134 = null;
      var G__16134__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__16095_SHARP_, p2__16096_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16095_SHARP_, p2__16096_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__16096_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__16096_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__16134__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__16097_SHARP_, p2__16098_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16097_SHARP_, p2__16098_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__16098_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__16098_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__16134__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__16099_SHARP_, p2__16100_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16099_SHARP_, p2__16100_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__16100_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__16100_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__16134__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__16101_SHARP_, p2__16102_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16101_SHARP_, p2__16102_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__16102_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__16102_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__16134__4 = function() {
        var G__16135__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__16103_SHARP_, p2__16104_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16103_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__16104_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__16135 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__16136__i = 0, G__16136__a = new Array(arguments.length - 3);
            while (G__16136__i < G__16136__a.length) {
              G__16136__a[G__16136__i] = arguments[G__16136__i + 3];
              ++G__16136__i;
            }
            args = new cljs.core.IndexedSeq(G__16136__a, 0);
          }
          return G__16135__delegate.call(this, x, y, z, args);
        };
        G__16135.cljs$lang$maxFixedArity = 3;
        G__16135.cljs$lang$applyTo = function(arglist__16137) {
          var x = cljs.core.first(arglist__16137);
          arglist__16137 = cljs.core.next(arglist__16137);
          var y = cljs.core.first(arglist__16137);
          arglist__16137 = cljs.core.next(arglist__16137);
          var z = cljs.core.first(arglist__16137);
          var args = cljs.core.rest(arglist__16137);
          return G__16135__delegate(x, y, z, args);
        };
        G__16135.cljs$core$IFn$_invoke$arity$variadic = G__16135__delegate;
        return G__16135;
      }();
      G__16134 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16134__0.call(this);
          case 1:
            return G__16134__1.call(this, x);
          case 2:
            return G__16134__2.call(this, x, y);
          case 3:
            return G__16134__3.call(this, x, y, z);
          default:
            var G__16138 = null;
            if (arguments.length > 3) {
              var G__16139__i = 0, G__16139__a = new Array(arguments.length - 3);
              while (G__16139__i < G__16139__a.length) {
                G__16139__a[G__16139__i] = arguments[G__16139__i + 3];
                ++G__16139__i;
              }
              G__16138 = new cljs.core.IndexedSeq(G__16139__a, 0);
            }
            return G__16134__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16138);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16134.cljs$lang$maxFixedArity = 3;
      G__16134.cljs$lang$applyTo = G__16134__4.cljs$lang$applyTo;
      G__16134.cljs$core$IFn$_invoke$arity$0 = G__16134__0;
      G__16134.cljs$core$IFn$_invoke$arity$1 = G__16134__1;
      G__16134.cljs$core$IFn$_invoke$arity$2 = G__16134__2;
      G__16134.cljs$core$IFn$_invoke$arity$3 = G__16134__3;
      G__16134.cljs$core$IFn$_invoke$arity$variadic = G__16134__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__16134;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq16106) {
  var G__16107 = cljs.core.first(seq16106);
  var seq16106__$1 = cljs.core.next(seq16106);
  var G__16108 = cljs.core.first(seq16106__$1);
  var seq16106__$2 = cljs.core.next(seq16106__$1);
  var G__16109 = cljs.core.first(seq16106__$2);
  var seq16106__$3 = cljs.core.next(seq16106__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__16107, G__16108, G__16109, seq16106__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var args16140 = [];
  var len__5565__auto___16143 = arguments.length;
  var i__5566__auto___16144 = 0;
  while (true) {
    if (i__5566__auto___16144 < len__5565__auto___16143) {
      args16140.push(arguments[i__5566__auto___16144]);
      var G__16145 = i__5566__auto___16144 + 1;
      i__5566__auto___16144 = G__16145;
      continue;
    } else {
    }
    break;
  }
  var G__16142 = args16140.length;
  switch(G__16142) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16140.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__16147 = cljs.core.next(coll);
      coll = G__16147;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__16148 = n - 1;
      var G__16149 = cljs.core.next(coll);
      n = G__16148;
      coll = G__16149;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var args16150 = [];
  var len__5565__auto___16153 = arguments.length;
  var i__5566__auto___16154 = 0;
  while (true) {
    if (i__5566__auto___16154 < len__5565__auto___16153) {
      args16150.push(arguments[i__5566__auto___16154]);
      var G__16155 = i__5566__auto___16154 + 1;
      i__5566__auto___16154 = G__16155;
      continue;
    } else {
    }
    break;
  }
  var G__16152 = args16150.length;
  switch(G__16152) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16150.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__16158 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16158, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16158, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4526__auto__ = flags;
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_16166 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4526__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__16167_16173 = cljs.core.first(coll);
          var G__16168_16174 = writer;
          var G__16169_16175 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16167_16173, G__16168_16174, G__16169_16175) : print_one.call(null, G__16167_16173, G__16168_16174, G__16169_16175);
        } else {
        }
        var coll_16176__$1 = cljs.core.next(coll);
        var n_16177 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_16176__$1 && (n_16177 == null || !(n_16177 === 0))) {
            cljs.core._write(writer, sep);
            var G__16170_16178 = cljs.core.first(coll_16176__$1);
            var G__16171_16179 = writer;
            var G__16172_16180 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16170_16178, G__16171_16179, G__16172_16180) : print_one.call(null, G__16170_16178, G__16171_16179, G__16172_16180);
            var G__16181 = cljs.core.next(coll_16176__$1);
            var G__16182 = n_16177 - 1;
            coll_16176__$1 = G__16181;
            n_16177 = G__16182;
            continue;
          } else {
            if (cljs.core.seq(coll_16176__$1) && n_16177 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4526__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4526__auto__)) {
                  return or__4526__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_16166;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var args__5572__auto__ = [];
  var len__5565__auto___16189 = arguments.length;
  var i__5566__auto___16190 = 0;
  while (true) {
    if (i__5566__auto___16190 < len__5565__auto___16189) {
      args__5572__auto__.push(arguments[i__5566__auto___16190]);
      var G__16191 = i__5566__auto___16190 + 1;
      i__5566__auto___16190 = G__16191;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__16185 = cljs.core.seq(ss);
  var chunk__16186 = null;
  var count__16187 = 0;
  var i__16188 = 0;
  while (true) {
    if (i__16188 < count__16187) {
      var s = chunk__16186.cljs$core$IIndexed$_nth$arity$2(null, i__16188);
      cljs.core._write(writer, s);
      var G__16192 = seq__16185;
      var G__16193 = chunk__16186;
      var G__16194 = count__16187;
      var G__16195 = i__16188 + 1;
      seq__16185 = G__16192;
      chunk__16186 = G__16193;
      count__16187 = G__16194;
      i__16188 = G__16195;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__16185);
      if (temp__4425__auto__) {
        var seq__16185__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16185__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__16185__$1);
          var G__16196 = cljs.core.chunk_rest(seq__16185__$1);
          var G__16197 = c__5310__auto__;
          var G__16198 = cljs.core.count(c__5310__auto__);
          var G__16199 = 0;
          seq__16185 = G__16196;
          chunk__16186 = G__16197;
          count__16187 = G__16198;
          i__16188 = G__16199;
          continue;
        } else {
          var s = cljs.core.first(seq__16185__$1);
          cljs.core._write(writer, s);
          var G__16200 = cljs.core.next(seq__16185__$1);
          var G__16201 = null;
          var G__16202 = 0;
          var G__16203 = 0;
          seq__16185 = G__16200;
          chunk__16186 = G__16201;
          count__16187 = G__16202;
          i__16188 = G__16203;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq16183) {
  var G__16184 = cljs.core.first(seq16183);
  var seq16183__$1 = cljs.core.next(seq16183);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__16184, seq16183__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj16205 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj16205;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4514__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4514__auto__) {
    var and__4514__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4514__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4514__auto____$1;
    }
  } else {
    return and__4514__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__16221_16230 = cljs.core.meta(obj);
      var G__16222_16231 = writer;
      var G__16223_16232 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__16221_16230, G__16222_16231, G__16223_16232) : cljs.core.pr_writer.call(null, G__16221_16230, G__16222_16231, G__16223_16232);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__16225 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__16226 = cljs.core.pr_writer;
            var G__16227 = writer;
            var G__16228 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__16225, G__16226, G__16227, G__16228) : cljs.core.print_map.call(null, G__16225, G__16226, G__16227, G__16228);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__4526__auto__ = name == null;
                    if (or__4526__auto__) {
                      return or__4526__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__16233 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__16233;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
                        return cljs.core._pr_writer(obj, writer, opts);
                      } else {
                        if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = obj.constructor.name;
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4526__auto__ = name == null;
                            if (or__4526__auto__) {
                              return or__4526__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__16237 = obj;
    var G__16238 = writer;
    var G__16239 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__16237, G__16238, G__16239) : alt_impl.call(null, G__16237, G__16238, G__16239);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__16244 = cljs.core.seq(cljs.core.next(objs));
  var chunk__16245 = null;
  var count__16246 = 0;
  var i__16247 = 0;
  while (true) {
    if (i__16247 < count__16246) {
      var obj = chunk__16245.cljs$core$IIndexed$_nth$arity$2(null, i__16247);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__16248 = seq__16244;
      var G__16249 = chunk__16245;
      var G__16250 = count__16246;
      var G__16251 = i__16247 + 1;
      seq__16244 = G__16248;
      chunk__16245 = G__16249;
      count__16246 = G__16250;
      i__16247 = G__16251;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__16244);
      if (temp__4425__auto__) {
        var seq__16244__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16244__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__16244__$1);
          var G__16252 = cljs.core.chunk_rest(seq__16244__$1);
          var G__16253 = c__5310__auto__;
          var G__16254 = cljs.core.count(c__5310__auto__);
          var G__16255 = 0;
          seq__16244 = G__16252;
          chunk__16245 = G__16253;
          count__16246 = G__16254;
          i__16247 = G__16255;
          continue;
        } else {
          var obj = cljs.core.first(seq__16244__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__16256 = cljs.core.next(seq__16244__$1);
          var G__16257 = null;
          var G__16258 = 0;
          var G__16259 = 0;
          seq__16244 = G__16256;
          chunk__16245 = G__16257;
          count__16246 = G__16258;
          i__16247 = G__16259;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline() {
  var args16260 = [];
  var len__5565__auto___16263 = arguments.length;
  var i__5566__auto___16264 = 0;
  while (true) {
    if (i__5566__auto___16264 < len__5565__auto___16263) {
      args16260.push(arguments[i__5566__auto___16264]);
      var G__16265 = i__5566__auto___16264 + 1;
      i__5566__auto___16264 = G__16265;
      continue;
    } else {
    }
    break;
  }
  var G__16262 = args16260.length;
  switch(G__16262) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16260.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str() {
  var args__5572__auto__ = [];
  var len__5565__auto___16268 = arguments.length;
  var i__5566__auto___16269 = 0;
  while (true) {
    if (i__5566__auto___16269 < len__5565__auto___16268) {
      args__5572__auto__.push(arguments[i__5566__auto___16269]);
      var G__16270 = i__5566__auto___16269 + 1;
      i__5566__auto___16269 = G__16270;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq16267) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16267));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var args__5572__auto__ = [];
  var len__5565__auto___16272 = arguments.length;
  var i__5566__auto___16273 = 0;
  while (true) {
    if (i__5566__auto___16273 < len__5565__auto___16272) {
      args__5572__auto__.push(arguments[i__5566__auto___16273]);
      var G__16274 = i__5566__auto___16273 + 1;
      i__5566__auto___16273 = G__16274;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq16271) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16271));
};
cljs.core.pr = function cljs$core$pr() {
  var args__5572__auto__ = [];
  var len__5565__auto___16276 = arguments.length;
  var i__5566__auto___16277 = 0;
  while (true) {
    if (i__5566__auto___16277 < len__5565__auto___16276) {
      args__5572__auto__.push(arguments[i__5566__auto___16277]);
      var G__16278 = i__5566__auto___16277 + 1;
      i__5566__auto___16277 = G__16278;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq16275) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16275));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16279__i = 0, G__16279__a = new Array(arguments.length - 0);
      while (G__16279__i < G__16279__a.length) {
        G__16279__a[G__16279__i] = arguments[G__16279__i + 0];
        ++G__16279__i;
      }
      objs = new cljs.core.IndexedSeq(G__16279__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__16280) {
    var objs = cljs.core.seq(arglist__16280);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var args__5572__auto__ = [];
  var len__5565__auto___16282 = arguments.length;
  var i__5566__auto___16283 = 0;
  while (true) {
    if (i__5566__auto___16283 < len__5565__auto___16282) {
      args__5572__auto__.push(arguments[i__5566__auto___16283]);
      var G__16284 = i__5566__auto___16283 + 1;
      i__5566__auto___16283 = G__16284;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq16281) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16281));
};
cljs.core.println = function cljs$core$println() {
  var args__5572__auto__ = [];
  var len__5565__auto___16286 = arguments.length;
  var i__5566__auto___16287 = 0;
  while (true) {
    if (i__5566__auto___16287 < len__5565__auto___16286) {
      args__5572__auto__.push(arguments[i__5566__auto___16287]);
      var G__16288 = i__5566__auto___16287 + 1;
      i__5566__auto___16287 = G__16288;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq16285) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16285));
};
cljs.core.println_str = function cljs$core$println_str() {
  var args__5572__auto__ = [];
  var len__5565__auto___16290 = arguments.length;
  var i__5566__auto___16291 = 0;
  while (true) {
    if (i__5566__auto___16291 < len__5565__auto___16290) {
      args__5572__auto__.push(arguments[i__5566__auto___16291]);
      var G__16292 = i__5566__auto___16291 + 1;
      i__5566__auto___16291 = G__16292;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq16289) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16289));
};
cljs.core.prn = function cljs$core$prn() {
  var args__5572__auto__ = [];
  var len__5565__auto___16294 = arguments.length;
  var i__5566__auto___16295 = 0;
  while (true) {
    if (i__5566__auto___16295 < len__5565__auto___16294) {
      args__5572__auto__.push(arguments[i__5566__auto___16295]);
      var G__16296 = i__5566__auto___16295 + 1;
      i__5566__auto___16295 = G__16296;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq16293) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16293));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__16303_16309 = cljs.core.key(e);
    var G__16304_16310 = w;
    var G__16305_16311 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16303_16309, G__16304_16310, G__16305_16311) : print_one.call(null, G__16303_16309, G__16304_16310, G__16305_16311);
    cljs.core._write(w, " ");
    var G__16306 = cljs.core.val(e);
    var G__16307 = w;
    var G__16308 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16306, G__16307, G__16308) : print_one.call(null, G__16306, G__16307, G__16308);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var args__5572__auto__ = [];
  var len__5565__auto___16315 = arguments.length;
  var i__5566__auto___16316 = 0;
  while (true) {
    if (i__5566__auto___16316 < len__5565__auto___16315) {
      args__5572__auto__.push(arguments[i__5566__auto___16316]);
      var G__16317 = i__5566__auto___16316 + 1;
      i__5566__auto___16316 = G__16317;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 2 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5573__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq16312) {
  var G__16313 = cljs.core.first(seq16312);
  var seq16312__$1 = cljs.core.next(seq16312);
  var G__16314 = cljs.core.first(seq16312__$1);
  var seq16312__$2 = cljs.core.next(seq16312__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__16313, G__16314, seq16312__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var args16318 = [];
  var len__5565__auto___16321 = arguments.length;
  var i__5566__auto___16322 = 0;
  while (true) {
    if (i__5566__auto___16322 < len__5565__auto___16321) {
      args16318.push(arguments[i__5566__auto___16322]);
      var G__16323 = i__5566__auto___16322 + 1;
      i__5566__auto___16322 = G__16323;
      continue;
    } else {
    }
    break;
  }
  var G__16320 = args16318.length;
  switch(G__16320) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16318.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__16325_SHARP_, p2__16326_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__16325_SHARP_, p2__16326_SHARP_) : rf.call(null, p1__16325_SHARP_, p2__16326_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__16327 = null;
      var G__16327__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__16327__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__16327__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__16327 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__16327__0.call(this);
          case 1:
            return G__16327__1.call(this, result);
          case 2:
            return G__16327__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16327.cljs$core$IFn$_invoke$arity$0 = G__16327__0;
      G__16327.cljs$core$IFn$_invoke$arity$1 = G__16327__1;
      G__16327.cljs$core$IFn$_invoke$arity$2 = G__16327__2;
      return G__16327;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var args16328 = [];
  var len__5565__auto___16331 = arguments.length;
  var i__5566__auto___16332 = 0;
  while (true) {
    if (i__5566__auto___16332 < len__5565__auto___16331) {
      args16328.push(arguments[i__5566__auto___16332]);
      var G__16333 = i__5566__auto___16332 + 1;
      i__5566__auto___16332 = G__16333;
      continue;
    } else {
    }
    break;
  }
  var G__16330 = args16328.length;
  switch(G__16330) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16328.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__16335 = null;
        var G__16335__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16335__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__16335__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__16335 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16335__0.call(this);
            case 1:
              return G__16335__1.call(this, result);
            case 2:
              return G__16335__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16335.cljs$core$IFn$_invoke$arity$0 = G__16335__0;
        G__16335.cljs$core$IFn$_invoke$arity$1 = G__16335__1;
        G__16335.cljs$core$IFn$_invoke$arity$2 = G__16335__2;
        return G__16335;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var args16336 = [];
  var len__5565__auto___16339 = arguments.length;
  var i__5566__auto___16340 = 0;
  while (true) {
    if (i__5566__auto___16340 < len__5565__auto___16339) {
      args16336.push(arguments[i__5566__auto___16340]);
      var G__16341 = i__5566__auto___16340 + 1;
      i__5566__auto___16340 = G__16341;
      continue;
    } else {
    }
    break;
  }
  var G__16338 = args16336.length;
  switch(G__16338) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16336.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.eduction = function cljs$core$eduction() {
  var args__5572__auto__ = [];
  var len__5565__auto___16344 = arguments.length;
  var i__5566__auto___16345 = 0;
  while (true) {
    if (i__5566__auto___16345 < len__5565__auto___16344) {
      args__5572__auto__.push(arguments[i__5566__auto___16345]);
      var G__16346 = i__5566__auto___16345 + 1;
      i__5566__auto___16345 = G__16346;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq16343) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16343));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__16348_SHARP_, p2__16347_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__16347_SHARP_) : proc.call(null, p2__16347_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._key__GT_js[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__16369_16379 = cljs.core.seq(x);
            var chunk__16370_16380 = null;
            var count__16371_16381 = 0;
            var i__16372_16382 = 0;
            while (true) {
              if (i__16372_16382 < count__16371_16381) {
                var vec__16373_16383 = chunk__16370_16380.cljs$core$IIndexed$_nth$arity$2(null, i__16372_16382);
                var k_16384 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16373_16383, 0, null);
                var v_16385 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16373_16383, 1, null);
                m[cljs.core.key__GT_js(k_16384)] = cljs$core$clj__GT_js(v_16385);
                var G__16386 = seq__16369_16379;
                var G__16387 = chunk__16370_16380;
                var G__16388 = count__16371_16381;
                var G__16389 = i__16372_16382 + 1;
                seq__16369_16379 = G__16386;
                chunk__16370_16380 = G__16387;
                count__16371_16381 = G__16388;
                i__16372_16382 = G__16389;
                continue;
              } else {
                var temp__4425__auto___16390 = cljs.core.seq(seq__16369_16379);
                if (temp__4425__auto___16390) {
                  var seq__16369_16391__$1 = temp__4425__auto___16390;
                  if (cljs.core.chunked_seq_QMARK_(seq__16369_16391__$1)) {
                    var c__5310__auto___16392 = cljs.core.chunk_first(seq__16369_16391__$1);
                    var G__16393 = cljs.core.chunk_rest(seq__16369_16391__$1);
                    var G__16394 = c__5310__auto___16392;
                    var G__16395 = cljs.core.count(c__5310__auto___16392);
                    var G__16396 = 0;
                    seq__16369_16379 = G__16393;
                    chunk__16370_16380 = G__16394;
                    count__16371_16381 = G__16395;
                    i__16372_16382 = G__16396;
                    continue;
                  } else {
                    var vec__16374_16397 = cljs.core.first(seq__16369_16391__$1);
                    var k_16398 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16374_16397, 0, null);
                    var v_16399 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16374_16397, 1, null);
                    m[cljs.core.key__GT_js(k_16398)] = cljs$core$clj__GT_js(v_16399);
                    var G__16400 = cljs.core.next(seq__16369_16391__$1);
                    var G__16401 = null;
                    var G__16402 = 0;
                    var G__16403 = 0;
                    seq__16369_16379 = G__16400;
                    chunk__16370_16380 = G__16401;
                    count__16371_16381 = G__16402;
                    i__16372_16382 = G__16403;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__16375_16404 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__16376_16405 = null;
              var count__16377_16406 = 0;
              var i__16378_16407 = 0;
              while (true) {
                if (i__16378_16407 < count__16377_16406) {
                  var x_16408__$1 = chunk__16376_16405.cljs$core$IIndexed$_nth$arity$2(null, i__16378_16407);
                  arr.push(x_16408__$1);
                  var G__16409 = seq__16375_16404;
                  var G__16410 = chunk__16376_16405;
                  var G__16411 = count__16377_16406;
                  var G__16412 = i__16378_16407 + 1;
                  seq__16375_16404 = G__16409;
                  chunk__16376_16405 = G__16410;
                  count__16377_16406 = G__16411;
                  i__16378_16407 = G__16412;
                  continue;
                } else {
                  var temp__4425__auto___16413 = cljs.core.seq(seq__16375_16404);
                  if (temp__4425__auto___16413) {
                    var seq__16375_16414__$1 = temp__4425__auto___16413;
                    if (cljs.core.chunked_seq_QMARK_(seq__16375_16414__$1)) {
                      var c__5310__auto___16415 = cljs.core.chunk_first(seq__16375_16414__$1);
                      var G__16416 = cljs.core.chunk_rest(seq__16375_16414__$1);
                      var G__16417 = c__5310__auto___16415;
                      var G__16418 = cljs.core.count(c__5310__auto___16415);
                      var G__16419 = 0;
                      seq__16375_16404 = G__16416;
                      chunk__16376_16405 = G__16417;
                      count__16377_16406 = G__16418;
                      i__16378_16407 = G__16419;
                      continue;
                    } else {
                      var x_16420__$1 = cljs.core.first(seq__16375_16414__$1);
                      arr.push(x_16420__$1);
                      var G__16421 = cljs.core.next(seq__16375_16414__$1);
                      var G__16422 = null;
                      var G__16423 = 0;
                      var G__16424 = 0;
                      seq__16375_16404 = G__16421;
                      chunk__16376_16405 = G__16422;
                      count__16377_16406 = G__16423;
                      i__16378_16407 = G__16424;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__5163__auto__.call(null, x, options);
    } else {
      var m__5163__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__5163__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var args16427 = [];
  var len__5565__auto___16452 = arguments.length;
  var i__5566__auto___16453 = 0;
  while (true) {
    if (i__5566__auto___16453 < len__5565__auto___16452) {
      args16427.push(arguments[i__5566__auto___16453]);
      var G__16454 = i__5566__auto___16453 + 1;
      i__5566__auto___16453 = G__16454;
      continue;
    } else {
    }
    break;
  }
  var G__16431 = args16427.length;
  switch(G__16431) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args16427.slice(1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__16432 = opts;
  var map__16432__$1 = (!(map__16432 == null) ? map__16432.cljs$lang$protocol_mask$partition0$ & 64 || map__16432.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__16432) : map__16432;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__16432__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__16432, map__16432__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5279__auto__ = function(map__16432, map__16432__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__16446(s__16447) {
                      return new cljs.core.LazySeq(null, function(map__16432, map__16432__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__16447__$1 = s__16447;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__16447__$1);
                            if (temp__4425__auto__) {
                              var s__16447__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__16447__$2)) {
                                var c__5277__auto__ = cljs.core.chunk_first(s__16447__$2);
                                var size__5278__auto__ = cljs.core.count(c__5277__auto__);
                                var b__16449 = cljs.core.chunk_buffer(size__5278__auto__);
                                if (function() {
                                  var i__16448 = 0;
                                  while (true) {
                                    if (i__16448 < size__5278__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5277__auto__, i__16448);
                                      cljs.core.chunk_append(b__16449, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__16456 = i__16448 + 1;
                                      i__16448 = G__16456;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__16449), cljs$core$thisfn_$_iter__16446(cljs.core.chunk_rest(s__16447__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__16449), null);
                                }
                              } else {
                                var k = cljs.core.first(s__16447__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__16446(cljs.core.rest(s__16447__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__16432, map__16432__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__16432, map__16432__$1, keywordize_keys, keyfn);
                  return iter__5279__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__16432, map__16432__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq16428) {
  var G__16429 = cljs.core.first(seq16428);
  var seq16428__$1 = cljs.core.next(seq16428);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__16429, seq16428__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__16458 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16458) : cljs.core.atom.call(null, G__16458);
  }();
  return function(mem) {
    return function() {
      var G__16459__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__16459 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__16460__i = 0, G__16460__a = new Array(arguments.length - 0);
          while (G__16460__i < G__16460__a.length) {
            G__16460__a[G__16460__i] = arguments[G__16460__i + 0];
            ++G__16460__i;
          }
          args = new cljs.core.IndexedSeq(G__16460__a, 0);
        }
        return G__16459__delegate.call(this, args);
      };
      G__16459.cljs$lang$maxFixedArity = 0;
      G__16459.cljs$lang$applyTo = function(arglist__16461) {
        var args = cljs.core.seq(arglist__16461);
        return G__16459__delegate(args);
      };
      G__16459.cljs$core$IFn$_invoke$arity$variadic = G__16459__delegate;
      return G__16459;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var args16462 = [];
  var len__5565__auto___16467 = arguments.length;
  var i__5566__auto___16468 = 0;
  while (true) {
    if (i__5566__auto___16468 < len__5565__auto___16467) {
      args16462.push(arguments[i__5566__auto___16468]);
      var G__16469 = i__5566__auto___16468 + 1;
      i__5566__auto___16468 = G__16469;
      continue;
    } else {
    }
    break;
  }
  var G__16466 = args16462.length;
  switch(G__16466) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args16462.slice(1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__16471 = ret;
      f = G__16471;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq16463) {
  var G__16464 = cljs.core.first(seq16463);
  var seq16463__$1 = cljs.core.next(seq16463);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__16464, seq16463__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var args16472 = [];
  var len__5565__auto___16475 = arguments.length;
  var i__5566__auto___16476 = 0;
  while (true) {
    if (i__5566__auto___16476 < len__5565__auto___16475) {
      args16472.push(arguments[i__5566__auto___16476]);
      var G__16477 = i__5566__auto___16476 + 1;
      i__5566__auto___16476 = G__16477;
      continue;
    } else {
    }
    break;
  }
  var G__16474 = args16472.length;
  switch(G__16474) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16472.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__16480 = Math.random() * n;
  return Math.floor(G__16480);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__16482 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16482) : cljs.core.atom.call(null, G__16482);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var args__5572__auto__ = [];
  var len__5565__auto___16485 = arguments.length;
  var i__5566__auto___16486 = 0;
  while (true) {
    if (i__5566__auto___16486 < len__5565__auto___16485) {
      args__5572__auto__.push(arguments[i__5566__auto___16486]);
      var G__16487 = i__5566__auto___16486 + 1;
      i__5566__auto___16486 = G__16487;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq16483) {
  var G__16484 = cljs.core.first(seq16483);
  var seq16483__$1 = cljs.core.next(seq16483);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__16484, seq16483__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var args16488 = [];
  var len__5565__auto___16492 = arguments.length;
  var i__5566__auto___16493 = 0;
  while (true) {
    if (i__5566__auto___16493 < len__5565__auto___16492) {
      args16488.push(arguments[i__5566__auto___16493]);
      var G__16494 = i__5566__auto___16493 + 1;
      i__5566__auto___16493 = G__16494;
      continue;
    } else {
    }
    break;
  }
  var G__16490 = args16488.length;
  switch(G__16490) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16488.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__16491 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16491) : cljs.core.deref.call(null, G__16491);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4526__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    var or__4526__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4526__auto____$1) {
      return or__4526__auto____$1;
    } else {
      var and__4514__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4514__auto__) {
        var and__4514__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4514__auto____$1) {
          var and__4514__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4514__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__16496 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__16497 = i + 1;
                ret = G__16496;
                i = G__16497;
                continue;
              }
              break;
            }
          } else {
            return and__4514__auto____$2;
          }
        } else {
          return and__4514__auto____$1;
        }
      } else {
        return and__4514__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var args16498 = [];
  var len__5565__auto___16502 = arguments.length;
  var i__5566__auto___16503 = 0;
  while (true) {
    if (i__5566__auto___16503 < len__5565__auto___16502) {
      args16498.push(arguments[i__5566__auto___16503]);
      var G__16504 = i__5566__auto___16503 + 1;
      i__5566__auto___16503 = G__16504;
      continue;
    } else {
    }
    break;
  }
  var G__16500 = args16498.length;
  switch(G__16500) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16498.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__16501 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16501) : cljs.core.deref.call(null, G__16501);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var args16506 = [];
  var len__5565__auto___16510 = arguments.length;
  var i__5566__auto___16511 = 0;
  while (true) {
    if (i__5566__auto___16511 < len__5565__auto___16510) {
      args16506.push(arguments[i__5566__auto___16511]);
      var G__16512 = i__5566__auto___16511 + 1;
      i__5566__auto___16511 = G__16512;
      continue;
    } else {
    }
    break;
  }
  var G__16508 = args16506.length;
  switch(G__16508) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16506.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__16509 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16509) : cljs.core.deref.call(null, G__16509);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var args16514 = [];
  var len__5565__auto___16518 = arguments.length;
  var i__5566__auto___16519 = 0;
  while (true) {
    if (i__5566__auto___16519 < len__5565__auto___16518) {
      args16514.push(arguments[i__5566__auto___16519]);
      var G__16520 = i__5566__auto___16519 + 1;
      i__5566__auto___16519 = G__16520;
      continue;
    } else {
    }
    break;
  }
  var G__16516 = args16514.length;
  switch(G__16516) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16514.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__16517 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16517) : cljs.core.deref.call(null, G__16517);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var args16522 = [];
  var len__5565__auto___16525 = arguments.length;
  var i__5566__auto___16526 = 0;
  while (true) {
    if (i__5566__auto___16526 < len__5565__auto___16525) {
      args16522.push(arguments[i__5566__auto___16526]);
      var G__16527 = i__5566__auto___16526 + 1;
      i__5566__auto___16526 = G__16527;
      continue;
    } else {
    }
    break;
  }
  var G__16524 = args16522.length;
  switch(G__16524) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16522.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4526__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var args16532 = [];
  var len__5565__auto___16535 = arguments.length;
  var i__5566__auto___16536 = 0;
  while (true) {
    if (i__5566__auto___16536 < len__5565__auto___16535) {
      args16532.push(arguments[i__5566__auto___16536]);
      var G__16537 = i__5566__auto___16536 + 1;
      i__5566__auto___16536 = G__16537;
      continue;
    } else {
    }
    break;
  }
  var G__16534 = args16532.length;
  switch(G__16534) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16532.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__16529_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__16529_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__16529_SHARP_), cljs.core.second(p1__16529_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__16530_SHARP_, p2__16531_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__16530_SHARP_, p2__16531_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__4526__auto__ = cljs.core.truth_(function() {
    var and__4514__auto__ = xprefs;
    if (cljs.core.truth_(and__4514__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4514__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    var or__4526__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__16551 = cljs.core.rest(ps);
          ps = G__16551;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4526__auto____$1)) {
      return or__4526__auto____$1;
    } else {
      var or__4526__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__16552 = cljs.core.rest(ps);
            ps = G__16552;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4526__auto____$2)) {
        return or__4526__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4526__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__16555) {
    var vec__16556 = p__16555;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16556, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16556, 1, null);
    var e = vec__16556;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4526__auto__ = be == null;
        if (or__4526__auto__) {
          return or__4526__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._reset[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._reset["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._add_method[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__5163__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__5163__auto____$1 = cljs.core._add_method["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__5163__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._remove_method[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5163__auto__.call(null, mf, dispatch_val);
    } else {
      var m__5163__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5163__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._prefer_method[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__5163__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__5163__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__5163__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._get_method[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5163__auto__.call(null, mf, dispatch_val);
    } else {
      var m__5163__auto____$1 = cljs.core._get_method["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5163__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._methods[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._methods["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._prefers[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._prefers["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__16560 = null;
  var G__16560__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__16560__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__16560__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__16560__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__16560__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__16560__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__16560__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__16560__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__16560__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__16560__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__16560__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__16560__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__16560__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__16560__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__16560__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__16560__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__16560__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__16560__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__16560__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__16560__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__16560__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__16560__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__16560 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__16560__1.call(this, self__);
      case 2:
        return G__16560__2.call(this, self__, a);
      case 3:
        return G__16560__3.call(this, self__, a, b);
      case 4:
        return G__16560__4.call(this, self__, a, b, c);
      case 5:
        return G__16560__5.call(this, self__, a, b, c, d);
      case 6:
        return G__16560__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__16560__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__16560__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__16560__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__16560__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__16560__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__16560__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__16560__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__16560__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__16560__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__16560__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__16560__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__16560__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__16560__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__16560__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__16560__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__16560__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16560.cljs$core$IFn$_invoke$arity$1 = G__16560__1;
  G__16560.cljs$core$IFn$_invoke$arity$2 = G__16560__2;
  G__16560.cljs$core$IFn$_invoke$arity$3 = G__16560__3;
  G__16560.cljs$core$IFn$_invoke$arity$4 = G__16560__4;
  G__16560.cljs$core$IFn$_invoke$arity$5 = G__16560__5;
  G__16560.cljs$core$IFn$_invoke$arity$6 = G__16560__6;
  G__16560.cljs$core$IFn$_invoke$arity$7 = G__16560__7;
  G__16560.cljs$core$IFn$_invoke$arity$8 = G__16560__8;
  G__16560.cljs$core$IFn$_invoke$arity$9 = G__16560__9;
  G__16560.cljs$core$IFn$_invoke$arity$10 = G__16560__10;
  G__16560.cljs$core$IFn$_invoke$arity$11 = G__16560__11;
  G__16560.cljs$core$IFn$_invoke$arity$12 = G__16560__12;
  G__16560.cljs$core$IFn$_invoke$arity$13 = G__16560__13;
  G__16560.cljs$core$IFn$_invoke$arity$14 = G__16560__14;
  G__16560.cljs$core$IFn$_invoke$arity$15 = G__16560__15;
  G__16560.cljs$core$IFn$_invoke$arity$16 = G__16560__16;
  G__16560.cljs$core$IFn$_invoke$arity$17 = G__16560__17;
  G__16560.cljs$core$IFn$_invoke$arity$18 = G__16560__18;
  G__16560.cljs$core$IFn$_invoke$arity$19 = G__16560__19;
  G__16560.cljs$core$IFn$_invoke$arity$20 = G__16560__20;
  G__16560.cljs$core$IFn$_invoke$arity$21 = G__16560__21;
  G__16560.cljs$core$IFn$_invoke$arity$22 = G__16560__22;
  return G__16560;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args16559) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16559)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = goog.string.hashCode(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__16561 = self__.uuid;
  var G__16562 = other.uuid;
  return goog.array.defaultCompare(G__16561, G__16562);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(15).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(14)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var args16563 = [];
  var len__5565__auto___16566 = arguments.length;
  var i__5566__auto___16567 = 0;
  while (true) {
    if (i__5566__auto___16567 < len__5565__auto___16566) {
      args16563.push(arguments[i__5566__auto___16567]);
      var G__16568 = i__5566__auto___16567 + 1;
      i__5566__auto___16567 = G__16568;
      continue;
    } else {
    }
    break;
  }
  var G__16565 = args16563.length;
  switch(G__16565) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16563.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__16570 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__16570) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__16572_SHARP_, p2__16573_SHARP_) {
      goog.object.set(p1__16572_SHARP_, p2__16573_SHARP_, true);
      return p1__16572_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return goog.object.containsKey(cljs.core.js_reserved, x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__16576 = cljs.core.next(ks__$1);
          var G__16577 = [cljs.core.str(function() {
            var G__16575 = ret;
            var G__16575__$1 = !(ret === "") ? [cljs.core.str(G__16575), cljs.core.str("|")].join("") : G__16575;
            return G__16575__$1;
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__16576;
          ret = G__16577;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_16578 = 0;
  while (true) {
    if (i_16578 < name.length) {
      var c_16579 = name.charAt(i_16578);
      var sub_16580 = goog.object.get(cljs.core.CHAR_MAP, c_16579);
      if (!(sub_16580 == null)) {
        sb.append(sub_16580);
      } else {
        sb.append(c_16579);
      }
      var G__16581 = i_16578 + 1;
      i_16578 = G__16581;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4423__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var match = temp__4423__auto__;
      var vec__16583 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16583, 0, null);
      var G__16584 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__16585 = r.lastIndex;
      ret = G__16584;
      last_match_end = G__16585;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__16590 = function() {
          var G__16588 = ctxt;
          var G__16589 = cljs.core.first(xs);
          return goog.object.get(G__16588, G__16589);
        }();
        var G__16591 = cljs.core.next(xs);
        ctxt = G__16590;
        xs = G__16591;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__16593 = cljs.core._STAR_target_STAR_;
  switch(G__16593) {
    case "nodejs":
      if (COMPILED) {
        return eval(munged_ns);
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(window, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns() {
  var args16595 = [];
  var len__5565__auto___16598 = arguments.length;
  var i__5566__auto___16599 = 0;
  while (true) {
    if (i__5566__auto___16599 < len__5565__auto___16598) {
      args16595.push(arguments[i__5566__auto___16599]);
      var G__16600 = i__5566__auto___16599 + 1;
      i__5566__auto___16599 = G__16600;
      continue;
    } else {
    }
    break;
  }
  var G__16597 = args16595.length;
  switch(G__16597) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16595.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__16603 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16603) : cljs.core.atom.call(null, G__16603);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__16605 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16605) : cljs.core.atom.call(null, G__16605);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = {};
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 == null)) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__5162__auto__ = port == null ? null : port;
    var m__5163__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, port, fn1_handler);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, port, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.WritePort = {};
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 == null)) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__5162__auto__ = port == null ? null : port;
    var m__5163__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, port, val, fn1_handler);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, port, val, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.Channel = {};
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__5162__auto__ = chan == null ? null : chan;
    var m__5163__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, chan);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__5162__auto__ = chan == null ? null : chan;
    var m__5163__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, chan);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.Handler = {};
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__5162__auto__ = h == null ? null : h;
    var m__5163__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, h);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$commit$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__5162__auto__ = h == null ? null : h;
    var m__5163__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, h);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.Buffer = {};
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__5162__auto__ = b == null ? null : b;
    var m__5163__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, b);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__5162__auto__ = b == null ? null : b;
    var m__5163__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, b);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__5162__auto__ = b == null ? null : b;
    var m__5163__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, b, itm);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, b, itm);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function cljs$core$async$impl$protocols$add_BANG_() {
  var args10743 = [];
  var len__5565__auto___10746 = arguments.length;
  var i__5566__auto___10747 = 0;
  while (true) {
    if (i__5566__auto___10747 < len__5565__auto___10746) {
      args10743.push(arguments[i__5566__auto___10747]);
      var G__10748 = i__5566__auto___10747 + 1;
      i__5566__auto___10747 = G__10748;
      continue;
    } else {
    }
    break;
  }
  var G__10745 = args10743.length;
  switch(G__10745) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10743.length)].join(""));;
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(b) {
  return b;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, itm) {
  if (!(itm == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = {};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__13550 = cnt + 1;
      cnt = G__13550;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__5410__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__5410__auto__) {
      var v_13551 = this$.pop();
      if (keep_QMARK_.call(null, v_13551)) {
        this$.unshift(v_13551);
      } else {
      }
      var G__13552 = x + 1;
      x = G__13552;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEMPLATE:"TEMPLATE", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera", "OPR"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0;i < tuples.length;i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || !goog.global.Window || !goog.global.Window.prototype || goog.global.Window.prototype.setImmediate != goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = document.createElement(goog.dom.TagName.IFRAME);
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement(goog.dom.TagName.SCRIPT)) {
    return function(cb) {
      var script = document.createElement(goog.dom.TagName.SCRIPT);
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("goog.async.nextTick");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_13555 = 0;
  while (true) {
    var m_13556 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_13556 == null) {
    } else {
      m_13556.call(null);
      if (count_13555 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__13557 = count_13555 + 1;
        count_13555 = G__13557;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__4514__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__4514__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs.core.async.impl.channels.t13563 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t13563 = function(box, val, meta13564) {
      this.box = box;
      this.val = val;
      this.meta13564 = meta13564;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.channels.t13563.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13565, meta13564__$1) {
      var self__ = this;
      var _13565__$1 = this;
      return new cljs.core.async.impl.channels.t13563(self__.box, self__.val, meta13564__$1);
    };
    cljs.core.async.impl.channels.t13563.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13565) {
      var self__ = this;
      var _13565__$1 = this;
      return self__.meta13564;
    };
    cljs.core.async.impl.channels.t13563.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t13563.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "box", "box", -1123515375, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 
      1769233139, null)], null)))], null)), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta13564", "meta13564", 254744677, null)], null);
    };
    cljs.core.async.impl.channels.t13563.cljs$lang$type = true;
    cljs.core.async.impl.channels.t13563.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t13563";
    cljs.core.async.impl.channels.t13563.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.channels/t13563");
    };
    cljs.core.async.impl.channels.__GT_t13563 = function cljs$core$async$impl$channels$box_$___GT_t13563(box__$1, val__$1, meta13564) {
      return new cljs.core.async.impl.channels.t13563(box__$1, val__$1, meta13564);
    };
  }
  return new cljs.core.async.impl.channels.t13563(cljs$core$async$impl$channels$box, val, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = {};
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (!(this$ == null) && !(this$.cljs$core$async$impl$channels$MMC$abort$arity$1 == null)) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = cljs.core.async.impl.channels.abort["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_13568 = self__.puts.pop();
    if (putter_13568 == null) {
    } else {
      var put_handler_13569 = putter_13568.handler;
      var val_13570 = putter_13568.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_13569)) {
        var put_cb_13571 = cljs.core.async.impl.protocols.commit.call(null, put_handler_13569);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_13571, put_handler_13569, val_13570, putter_13568, this$__$1) {
          return function() {
            return put_cb_13571.call(null, true);
          };
        }(put_cb_13571, put_handler_13569, val_13570, putter_13568, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = self__.buf;
      if (cljs.core.truth_(and__4514__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__4514__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_13572 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_13572)) {
            var take_cb_13573 = cljs.core.async.impl.protocols.commit.call(null, taker_13572);
            var val_13574__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_13573, val_13574__$1, taker_13572, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_13573.call(null, val_13574__$1);
              };
            }(take_cb_13573, val_13574__$1, taker_13572, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_13575 = self__.puts.pop();
          if (putter_13575 == null) {
          } else {
            var put_handler_13576 = putter_13575.handler;
            var val_13577 = putter_13575.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_13576)) {
              var put_cb_13578 = cljs.core.async.impl.protocols.commit.call(null, put_handler_13576);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_13578, put_handler_13576, val_13577, putter_13575, _, retval, this$__$1) {
                return function() {
                  return put_cb_13578.call(null, true);
                };
              }(put_cb_13578, put_handler_13576, val_13577, putter_13575, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_13577))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__4514__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__4514__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__4514__auto__;
            }
          }())) {
            var has_val = function() {
              var and__4514__auto__ = self__.buf;
              if (cljs.core.truth_(and__4514__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__4514__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = self__.buf;
      if (cljs.core.truth_(and__4514__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__4514__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_13579 = self__.takes.pop();
      if (taker_13579 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_13579)) {
          var take_cb_13580 = cljs.core.async.impl.protocols.commit.call(null, taker_13579);
          var val_13581 = cljs.core.truth_(function() {
            var and__4514__auto__ = self__.buf;
            if (cljs.core.truth_(and__4514__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__4514__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_13580, val_13581, taker_13579, this$__$1) {
            return function() {
              return take_cb_13580.call(null, val_13581);
            };
          }(take_cb_13580, val_13581, taker_13579, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__4526__auto__ = exh;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function cljs$core$async$impl$channels$chan() {
  var args13582 = [];
  var len__5565__auto___13587 = arguments.length;
  var i__5566__auto___13588 = 0;
  while (true) {
    if (i__5566__auto___13588 < len__5565__auto___13587) {
      args13582.push(arguments[i__5566__auto___13588]);
      var G__13589 = i__5566__auto___13588 + 1;
      i__5566__auto___13588 = G__13589;
      continue;
    } else {
    }
    break;
  }
  var G__13584 = args13582.length;
  switch(G__13584) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13582.length)].join(""));;
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(buf) {
  return cljs.core.async.impl.channels.chan.call(null, buf, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(buf, xform) {
  return cljs.core.async.impl.channels.chan.call(null, buf, xform, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(buf, xform, exh) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
    var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
    return function(add_BANG_) {
      return function() {
        var G__13591 = null;
        var G__13591__1 = function(buf__$1) {
          try {
            return add_BANG_.call(null, buf__$1);
          } catch (e13585) {
            var t = e13585;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        var G__13591__2 = function(buf__$1, val) {
          try {
            return add_BANG_.call(null, buf__$1, val);
          } catch (e13586) {
            var t = e13586;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        G__13591 = function(buf__$1, val) {
          switch(arguments.length) {
            case 1:
              return G__13591__1.call(this, buf__$1);
            case 2:
              return G__13591__2.call(this, buf__$1, val);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13591.cljs$core$IFn$_invoke$arity$1 = G__13591__1;
        G__13591.cljs$core$IFn$_invoke$arity$2 = G__13591__2;
        return G__13591;
      }();
    }(add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t13509 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t13509 = function(fn_handler, f, meta13510) {
      this.fn_handler = fn_handler;
      this.f = f;
      this.meta13510 = meta13510;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.ioc_helpers.t13509.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13511, meta13510__$1) {
      var self__ = this;
      var _13511__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t13509(self__.fn_handler, self__.f, meta13510__$1);
    };
    cljs.core.async.impl.ioc_helpers.t13509.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13511) {
      var self__ = this;
      var _13511__$1 = this;
      return self__.meta13510;
    };
    cljs.core.async.impl.ioc_helpers.t13509.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t13509.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t13509.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t13509.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta13510", "meta13510", 2048642986, null)], null);
    };
    cljs.core.async.impl.ioc_helpers.t13509.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t13509.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t13509";
    cljs.core.async.impl.ioc_helpers.t13509.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.ioc-helpers/t13509");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t13509 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t13509(fn_handler__$1, f__$1, meta13510) {
      return new cljs.core.async.impl.ioc_helpers.t13509(fn_handler__$1, f__$1, meta13510);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t13509(cljs$core$async$impl$ioc_helpers$fn_handler, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e13513) {
    if (e13513 instanceof Object) {
      var ex = e13513;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e13513;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_13516_13518 = state;
    statearr_13516_13518[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_13516_13518[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var cb = temp__4423__auto__;
    var statearr_13517_13519 = state;
    statearr_13517_13519[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13517_13519[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_13522_13524 = state;
    statearr_13522_13524[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_13522_13524[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var cb = temp__4423__auto__;
    var statearr_13523_13525 = state;
    statearr_13523_13525[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13523_13525[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k13527, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__13529 = k13527 instanceof cljs.core.Keyword ? k13527.fqn : null;
  switch(G__13529) {
    case "catch-block":
      return self__.catch_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "prev":
      return self__.prev;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k13527, else__5124__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$ = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__13526) {
  var self__ = this;
  var G__13526__$1 = this;
  return new cljs.core.RecordIter(0, G__13526__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), 
  cljs.core._iterator.call(null, self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__13526) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__13530 = cljs.core.keyword_identical_QMARK_;
  var expr__13531 = k__5129__auto__;
  if (cljs.core.truth_(pred__13530.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__13531))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__13526, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13530.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__13531))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__13526, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13530.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__13531))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__13526, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13530.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__13531))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__13526, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__13530.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__13531))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__13526, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__13526), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__13526) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__13526, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__13528) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__13528), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__13528), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__13528), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__13528), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__13528), null, cljs.core.dissoc.call(null, G__13528, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_13535 = state;
  statearr_13535[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_13535;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = exception;
      if (cljs.core.truth_(and__4514__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__4514__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = exception;
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = catch_block;
          if (cljs.core.truth_(and__4514__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }())) {
        var statearr_13541 = state;
        statearr_13541[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_13541[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_13541[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_13541[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_13541;
      } else {
        if (cljs.core.truth_(function() {
          var and__4514__auto__ = exception;
          if (cljs.core.truth_(and__4514__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__4514__auto__;
          }
        }())) {
          var statearr_13542_13546 = state;
          statearr_13542_13546[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__13547 = state;
          state = G__13547;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__4514__auto__ = exception;
            if (cljs.core.truth_(and__4514__auto__)) {
              var and__4514__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__4514__auto____$1) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4514__auto____$1;
              }
            } else {
              return and__4514__auto__;
            }
          }())) {
            var statearr_13543 = state;
            statearr_13543[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_13543[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_13543;
          } else {
            if (cljs.core.truth_(function() {
              var and__4514__auto__ = cljs.core.not.call(null, exception);
              if (and__4514__auto__) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4514__auto__;
              }
            }())) {
              var statearr_13544 = state;
              statearr_13544[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_13544[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_13544;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_13545 = state;
                statearr_13545[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_13545[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_13545;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function cljs$core$async$impl$timers$random_level() {
  var args13459 = [];
  var len__5565__auto___13462 = arguments.length;
  var i__5566__auto___13463 = 0;
  while (true) {
    if (i__5566__auto___13463 < len__5565__auto___13462) {
      args13459.push(arguments[i__5566__auto___13463]);
      var G__13464 = i__5566__auto___13463 + 1;
      i__5566__auto___13463 = G__13464;
      continue;
    } else {
    }
    break;
  }
  var G__13461 = args13459.length;
  switch(G__13461) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13459.length)].join(""));;
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(level) {
  while (true) {
    if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
      var G__13466 = level + 1;
      level = G__13466;
      continue;
    } else {
      return level;
    }
    break;
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function cljs$core$async$impl$timers$skip_list_node() {
  var args13467 = [];
  var len__5565__auto___13470 = arguments.length;
  var i__5566__auto___13471 = 0;
  while (true) {
    if (i__5566__auto___13471 < len__5565__auto___13470) {
      args13467.push(arguments[i__5566__auto___13471]);
      var G__13472 = i__5566__auto___13471 + 1;
      i__5566__auto___13471 = G__13472;
      continue;
    } else {
    }
    break;
  }
  var G__13469 = args13467.length;
  switch(G__13469) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13467.length)].join(""));;
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, level);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(k, v, level) {
  var arr = new Array(level + 1);
  var i_13474 = 0;
  while (true) {
    if (i_13474 < arr.length) {
      arr[i_13474] = null;
      var G__13475 = i_13474 + 1;
      i_13474 = G__13475;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function cljs$core$async$impl$timers$least_greater_node() {
  var args13476 = [];
  var len__5565__auto___13479 = arguments.length;
  var i__5566__auto___13480 = 0;
  while (true) {
    if (i__5566__auto___13480 < len__5565__auto___13479) {
      args13476.push(arguments[i__5566__auto___13480]);
      var G__13481 = i__5566__auto___13480 + 1;
      i__5566__auto___13480 = G__13481;
      continue;
    } else {
    }
    break;
  }
  var G__13478 = args13476.length;
  switch(G__13478) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13476.length)].join(""));;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(x, k, level) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, x, k, level, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(x, k, level, update) {
  while (true) {
    if (!(level < 0)) {
      var x__$1 = function() {
        var x__$1 = x;
        while (true) {
          var temp__4423__auto__ = x__$1.forward[level];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var x_SINGLEQUOTE_ = temp__4423__auto__;
            if (x_SINGLEQUOTE_.key < k) {
              var G__13483 = x_SINGLEQUOTE_;
              x__$1 = G__13483;
              continue;
            } else {
              return x__$1;
            }
          } else {
            return x__$1;
          }
          break;
        }
      }();
      if (update == null) {
      } else {
        update[level] = x__$1;
      }
      var G__13484 = x__$1;
      var G__13485 = k;
      var G__13486 = level - 1;
      var G__13487 = update;
      x = G__13484;
      k = G__13485;
      level = G__13486;
      update = G__13487;
      continue;
    } else {
      return x;
    }
    break;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_13488 = self__.level + 1;
      while (true) {
        if (i_13488 <= new_level + 1) {
          update[i_13488] = self__.header;
          var G__13489 = i_13488 + 1;
          i_13488 = G__13489;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_13490 = 0;
    while (true) {
      if (i_13490 <= self__.level) {
        var links_13491 = update[i_13490].forward;
        if (links_13491[i_13490] === x__$1) {
          links_13491[i_13490] = x__$1.forward[i_13490];
          var G__13492 = i_13490 + 1;
          i_13490 = G__13492;
          continue;
        } else {
          var G__13493 = i_13490 + 1;
          i_13490 = G__13493;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__13494 = x_SINGLEQUOTE_;
              x__$1 = G__13494;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__13495 = nx;
        var G__13496 = level__$1 - 1;
        x = G__13495;
        level__$1 = G__13496;
        continue;
      } else {
        var G__13497 = x;
        var G__13498 = level__$1 - 1;
        x = G__13497;
        level__$1 = G__13498;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__13499 = x_SINGLEQUOTE_;
              x__$1 = G__13499;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__13500 = nx;
        var G__13501 = level__$1 - 1;
        x = G__13500;
        level__$1 = G__13501;
        continue;
      } else {
        var G__13502 = x;
        var G__13503 = level__$1 - 1;
        x = G__13502;
        level__$1 = G__13503;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__4526__auto__ = cljs.core.truth_(function() {
    var and__4514__auto__ = me;
    if (cljs.core.truth_(and__4514__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__4514__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__4526__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__4526__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(f) {
  if (typeof cljs.core.async.t10762 !== "undefined") {
  } else {
    cljs.core.async.t10762 = function(fn_handler, f, meta10763) {
      this.fn_handler = fn_handler;
      this.f = f;
      this.meta10763 = meta10763;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t10762.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10764, meta10763__$1) {
      var self__ = this;
      var _10764__$1 = this;
      return new cljs.core.async.t10762(self__.fn_handler, self__.f, meta10763__$1);
    };
    cljs.core.async.t10762.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10764) {
      var self__ = this;
      var _10764__$1 = this;
      return self__.meta10763;
    };
    cljs.core.async.t10762.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10762.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t10762.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t10762.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta10763", "meta10763", 934700504, null)], null);
    };
    cljs.core.async.t10762.cljs$lang$type = true;
    cljs.core.async.t10762.cljs$lang$ctorStr = "cljs.core.async/t10762";
    cljs.core.async.t10762.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t10762");
    };
    cljs.core.async.__GT_t10762 = function cljs$core$async$fn_handler_$___GT_t10762(fn_handler__$1, f__$1, meta10763) {
      return new cljs.core.async.t10762(fn_handler__$1, f__$1, meta10763);
    };
  }
  return new cljs.core.async.t10762(cljs$core$async$fn_handler, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  if (!(buff == null)) {
    if (false || buff.cljs$core$async$impl$protocols$UnblockingBuffer$) {
      return true;
    } else {
      if (!buff.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
  }
};
cljs.core.async.chan = function cljs$core$async$chan() {
  var args10767 = [];
  var len__5565__auto___10770 = arguments.length;
  var i__5566__auto___10771 = 0;
  while (true) {
    if (i__5566__auto___10771 < len__5565__auto___10770) {
      args10767.push(arguments[i__5566__auto___10771]);
      var G__10772 = i__5566__auto___10771 + 1;
      i__5566__auto___10771 = G__10772;
      continue;
    } else {
    }
    break;
  }
  var G__10769 = args10767.length;
  switch(G__10769) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10767.length)].join(""));;
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(buf_or_n) {
  return cljs.core.async.chan.call(null, buf_or_n, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(buf_or_n, xform) {
  return cljs.core.async.chan.call(null, buf_or_n, xform, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(buf_or_n, xform, ex_handler) {
  var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
  if (cljs.core.truth_(xform)) {
    if (cljs.core.truth_(buf_or_n__$1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
    }
  } else {
  }
  return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function cljs$core$async$take_BANG_() {
  var args10774 = [];
  var len__5565__auto___10777 = arguments.length;
  var i__5566__auto___10778 = 0;
  while (true) {
    if (i__5566__auto___10778 < len__5565__auto___10777) {
      args10774.push(arguments[i__5566__auto___10778]);
      var G__10779 = i__5566__auto___10778 + 1;
      i__5566__auto___10778 = G__10779;
      continue;
    } else {
    }
    break;
  }
  var G__10776 = args10774.length;
  switch(G__10776) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10774.length)].join(""));;
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, fn1) {
  return cljs.core.async.take_BANG_.call(null, port, fn1, true);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, fn1, on_caller_QMARK_) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(ret)) {
    var val_10781 = cljs.core.deref.call(null, ret);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, val_10781);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(val_10781, ret) {
        return function() {
          return fn1.call(null, val_10781);
        };
      }(val_10781, ret));
    }
  } else {
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function cljs$core$async$put_BANG_() {
  var args10782 = [];
  var len__5565__auto___10785 = arguments.length;
  var i__5566__auto___10786 = 0;
  while (true) {
    if (i__5566__auto___10786 < len__5565__auto___10785) {
      args10782.push(arguments[i__5566__auto___10786]);
      var G__10787 = i__5566__auto___10786 + 1;
      i__5566__auto___10786 = G__10787;
      continue;
    } else {
    }
    break;
  }
  var G__10784 = args10782.length;
  switch(G__10784) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10782.length)].join(""));;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, val) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var ret = temp__4423__auto__;
    return cljs.core.deref.call(null, ret);
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, val, fn1) {
  return cljs.core.async.put_BANG_.call(null, port, val, fn1, true);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(port, val, fn1, on_caller_QMARK_) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var retb = temp__4423__auto__;
    var ret = cljs.core.deref.call(null, retb);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, ret);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4423__auto__) {
        return function() {
          return fn1.call(null, ret);
        };
      }(ret, retb, temp__4423__auto__));
    }
    return ret;
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__5410__auto___10789 = n;
  var x_10790 = 0;
  while (true) {
    if (x_10790 < n__5410__auto___10789) {
      a[x_10790] = 0;
      var G__10791 = x_10790 + 1;
      x_10790 = G__10791;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__10792 = i + 1;
      i = G__10792;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t10796 !== "undefined") {
  } else {
    cljs.core.async.t10796 = function(alt_flag, flag, meta10797) {
      this.alt_flag = alt_flag;
      this.flag = flag;
      this.meta10797 = meta10797;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t10796.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_10798, meta10797__$1) {
        var self__ = this;
        var _10798__$1 = this;
        return new cljs.core.async.t10796(self__.alt_flag, self__.flag, meta10797__$1);
      };
    }(flag);
    cljs.core.async.t10796.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_10798) {
        var self__ = this;
        var _10798__$1 = this;
        return self__.meta10797;
      };
    }(flag);
    cljs.core.async.t10796.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10796.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t10796.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t10796.getBasis = function(flag) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-flag", "alt-flag", -1794972754, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), 
        new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta10797", "meta10797", -999291810, null)], null);
      };
    }(flag);
    cljs.core.async.t10796.cljs$lang$type = true;
    cljs.core.async.t10796.cljs$lang$ctorStr = "cljs.core.async/t10796";
    cljs.core.async.t10796.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
        return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t10796");
      };
    }(flag);
    cljs.core.async.__GT_t10796 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t10796(alt_flag__$1, flag__$1, meta10797) {
        return new cljs.core.async.t10796(alt_flag__$1, flag__$1, meta10797);
      };
    }(flag);
  }
  return new cljs.core.async.t10796(cljs$core$async$alt_flag, flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs.core.async.t10802 !== "undefined") {
  } else {
    cljs.core.async.t10802 = function(alt_handler, flag, cb, meta10803) {
      this.alt_handler = alt_handler;
      this.flag = flag;
      this.cb = cb;
      this.meta10803 = meta10803;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t10802.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10804, meta10803__$1) {
      var self__ = this;
      var _10804__$1 = this;
      return new cljs.core.async.t10802(self__.alt_handler, self__.flag, self__.cb, meta10803__$1);
    };
    cljs.core.async.t10802.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10804) {
      var self__ = this;
      var _10804__$1 = this;
      return self__.meta10803;
    };
    cljs.core.async.t10802.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10802.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t10802.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t10802.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-handler", "alt-handler", 963786170, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 
      5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null)], null)))], null)), new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta10803", "meta10803", 78250054, null)], null);
    };
    cljs.core.async.t10802.cljs$lang$type = true;
    cljs.core.async.t10802.cljs$lang$ctorStr = "cljs.core.async/t10802";
    cljs.core.async.t10802.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t10802");
    };
    cljs.core.async.__GT_t10802 = function cljs$core$async$alt_handler_$___GT_t10802(alt_handler__$1, flag__$1, cb__$1, meta10803) {
      return new cljs.core.async.t10802(alt_handler__$1, flag__$1, cb__$1, meta10803);
    };
  }
  return new cljs.core.async.t10802(cljs$core$async$alt_handler, flag, cb, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__10805_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10805_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__10806_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10806_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__4526__auto__ = wport;
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__10807 = i + 1;
          i = G__10807;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__4526__auto__ = ret;
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4425__auto__ = function() {
        var and__4514__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__4514__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__4514__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4425__auto__)) {
        var got = temp__4425__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function cljs$core$async$alts_BANG_() {
  var args__5572__auto__ = [];
  var len__5565__auto___10813 = arguments.length;
  var i__5566__auto___10814 = 0;
  while (true) {
    if (i__5566__auto___10814 < len__5565__auto___10813) {
      args__5572__auto__.push(arguments[i__5566__auto___10814]);
      var G__10815 = i__5566__auto___10814 + 1;
      i__5566__auto___10814 = G__10815;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ports, p__10810) {
  var map__10811 = p__10810;
  var map__10811__$1 = (!(map__10811 == null) ? map__10811.cljs$lang$protocol_mask$partition0$ & 64 || map__10811.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10811) : map__10811;
  var opts = map__10811__$1;
  throw new Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(seq10808) {
  var G__10809 = cljs.core.first.call(null, seq10808);
  var seq10808__$1 = cljs.core.next.call(null, seq10808);
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10809, seq10808__$1);
};
cljs.core.async.pipe = function cljs$core$async$pipe() {
  var args10816 = [];
  var len__5565__auto___10866 = arguments.length;
  var i__5566__auto___10867 = 0;
  while (true) {
    if (i__5566__auto___10867 < len__5565__auto___10866) {
      args10816.push(arguments[i__5566__auto___10867]);
      var G__10868 = i__5566__auto___10867 + 1;
      i__5566__auto___10867 = G__10868;
      continue;
    } else {
    }
    break;
  }
  var G__10818 = args10816.length;
  switch(G__10818) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10816.length)].join(""));;
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(from, to) {
  return cljs.core.async.pipe.call(null, from, to, true);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(from, to, close_QMARK_) {
  var c__8014__auto___10870 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___10870) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___10870) {
          return function(state_10842) {
            var state_val_10843 = state_10842[1];
            if (state_val_10843 === 7) {
              var inst_10838 = state_10842[2];
              var state_10842__$1 = state_10842;
              var statearr_10844_10871 = state_10842__$1;
              statearr_10844_10871[2] = inst_10838;
              statearr_10844_10871[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10843 === 1) {
                var state_10842__$1 = state_10842;
                var statearr_10845_10872 = state_10842__$1;
                statearr_10845_10872[2] = null;
                statearr_10845_10872[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10843 === 4) {
                  var inst_10821 = state_10842[7];
                  var inst_10821__$1 = state_10842[2];
                  var inst_10822 = inst_10821__$1 == null;
                  var state_10842__$1 = function() {
                    var statearr_10846 = state_10842;
                    statearr_10846[7] = inst_10821__$1;
                    return statearr_10846;
                  }();
                  if (cljs.core.truth_(inst_10822)) {
                    var statearr_10847_10873 = state_10842__$1;
                    statearr_10847_10873[1] = 5;
                  } else {
                    var statearr_10848_10874 = state_10842__$1;
                    statearr_10848_10874[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10843 === 13) {
                    var state_10842__$1 = state_10842;
                    var statearr_10849_10875 = state_10842__$1;
                    statearr_10849_10875[2] = null;
                    statearr_10849_10875[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10843 === 6) {
                      var inst_10821 = state_10842[7];
                      var state_10842__$1 = state_10842;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10842__$1, 11, to, inst_10821);
                    } else {
                      if (state_val_10843 === 3) {
                        var inst_10840 = state_10842[2];
                        var state_10842__$1 = state_10842;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10842__$1, inst_10840);
                      } else {
                        if (state_val_10843 === 12) {
                          var state_10842__$1 = state_10842;
                          var statearr_10850_10876 = state_10842__$1;
                          statearr_10850_10876[2] = null;
                          statearr_10850_10876[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10843 === 2) {
                            var state_10842__$1 = state_10842;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10842__$1, 4, from);
                          } else {
                            if (state_val_10843 === 11) {
                              var inst_10831 = state_10842[2];
                              var state_10842__$1 = state_10842;
                              if (cljs.core.truth_(inst_10831)) {
                                var statearr_10851_10877 = state_10842__$1;
                                statearr_10851_10877[1] = 12;
                              } else {
                                var statearr_10852_10878 = state_10842__$1;
                                statearr_10852_10878[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_10843 === 9) {
                                var state_10842__$1 = state_10842;
                                var statearr_10853_10879 = state_10842__$1;
                                statearr_10853_10879[2] = null;
                                statearr_10853_10879[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_10843 === 5) {
                                  var state_10842__$1 = state_10842;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_10854_10880 = state_10842__$1;
                                    statearr_10854_10880[1] = 8;
                                  } else {
                                    var statearr_10855_10881 = state_10842__$1;
                                    statearr_10855_10881[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_10843 === 14) {
                                    var inst_10836 = state_10842[2];
                                    var state_10842__$1 = state_10842;
                                    var statearr_10856_10882 = state_10842__$1;
                                    statearr_10856_10882[2] = inst_10836;
                                    statearr_10856_10882[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_10843 === 10) {
                                      var inst_10828 = state_10842[2];
                                      var state_10842__$1 = state_10842;
                                      var statearr_10857_10883 = state_10842__$1;
                                      statearr_10857_10883[2] = inst_10828;
                                      statearr_10857_10883[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_10843 === 8) {
                                        var inst_10825 = cljs.core.async.close_BANG_.call(null, to);
                                        var state_10842__$1 = state_10842;
                                        var statearr_10858_10884 = state_10842__$1;
                                        statearr_10858_10884[2] = inst_10825;
                                        statearr_10858_10884[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___10870);
        return function(switch__7949__auto__, c__8014__auto___10870) {
          return function() {
            var cljs$core$async$state_machine__7950__auto__ = null;
            var cljs$core$async$state_machine__7950__auto____0 = function() {
              var statearr_10862 = [null, null, null, null, null, null, null, null];
              statearr_10862[0] = cljs$core$async$state_machine__7950__auto__;
              statearr_10862[1] = 1;
              return statearr_10862;
            };
            var cljs$core$async$state_machine__7950__auto____1 = function(state_10842) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_10842);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e10863) {
                    if (e10863 instanceof Object) {
                      var ex__7953__auto__ = e10863;
                      var statearr_10864_10885 = state_10842;
                      statearr_10864_10885[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10842);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10863;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10886 = state_10842;
                  state_10842 = G__10886;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7950__auto__ = function(state_10842) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7950__auto____1.call(this, state_10842);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7950__auto____0;
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7950__auto____1;
            return cljs$core$async$state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___10870);
      }();
      var state__8016__auto__ = function() {
        var statearr_10865 = f__8015__auto__.call(null);
        statearr_10865[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___10870;
        return statearr_10865;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___10870));
  return to;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__11070) {
      var vec__11071 = p__11070;
      var v = cljs.core.nth.call(null, vec__11071, 0, null);
      var p = cljs.core.nth.call(null, vec__11071, 1, null);
      var job = vec__11071;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__8014__auto___11253 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___11253, res, vec__11071, v, p, job, jobs, results) {
          return function() {
            var f__8015__auto__ = function() {
              var switch__7949__auto__ = function(c__8014__auto___11253, res, vec__11071, v, p, job, jobs, results) {
                return function(state_11076) {
                  var state_val_11077 = state_11076[1];
                  if (state_val_11077 === 1) {
                    var state_11076__$1 = state_11076;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11076__$1, 2, res, v);
                  } else {
                    if (state_val_11077 === 2) {
                      var inst_11073 = state_11076[2];
                      var inst_11074 = cljs.core.async.close_BANG_.call(null, res);
                      var state_11076__$1 = function() {
                        var statearr_11078 = state_11076;
                        statearr_11078[7] = inst_11073;
                        return statearr_11078;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11076__$1, inst_11074);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__8014__auto___11253, res, vec__11071, v, p, job, jobs, results);
              return function(switch__7949__auto__, c__8014__auto___11253, res, vec__11071, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0 = function() {
                    var statearr_11082 = [null, null, null, null, null, null, null, null];
                    statearr_11082[0] = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__;
                    statearr_11082[1] = 1;
                    return statearr_11082;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1 = function(state_11076) {
                    while (true) {
                      var ret_value__7951__auto__ = function() {
                        try {
                          while (true) {
                            var result__7952__auto__ = switch__7949__auto__.call(null, state_11076);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__7952__auto__;
                            }
                            break;
                          }
                        } catch (e11083) {
                          if (e11083 instanceof Object) {
                            var ex__7953__auto__ = e11083;
                            var statearr_11084_11254 = state_11076;
                            statearr_11084_11254[5] = ex__7953__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11076);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e11083;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__11255 = state_11076;
                        state_11076 = G__11255;
                        continue;
                      } else {
                        return ret_value__7951__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__ = function(state_11076) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1.call(this, state_11076);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__;
                }();
              }(switch__7949__auto__, c__8014__auto___11253, res, vec__11071, v, p, job, jobs, results);
            }();
            var state__8016__auto__ = function() {
              var statearr_11085 = f__8015__auto__.call(null);
              statearr_11085[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___11253;
              return statearr_11085;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
          };
        }(c__8014__auto___11253, res, vec__11071, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__11086) {
      var vec__11087 = p__11086;
      var v = cljs.core.nth.call(null, vec__11087, 0, null);
      var p = cljs.core.nth.call(null, vec__11087, 1, null);
      var job = vec__11087;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__5410__auto___11256 = n;
  var __11257 = 0;
  while (true) {
    if (__11257 < n__5410__auto___11256) {
      var G__11088_11258 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__11088_11258) {
        case "compute":
          var c__8014__auto___11260 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__11257, c__8014__auto___11260, G__11088_11258, n__5410__auto___11256, jobs, results, process, async) {
            return function() {
              var f__8015__auto__ = function() {
                var switch__7949__auto__ = function(__11257, c__8014__auto___11260, G__11088_11258, n__5410__auto___11256, jobs, results, process, async) {
                  return function(state_11101) {
                    var state_val_11102 = state_11101[1];
                    if (state_val_11102 === 1) {
                      var state_11101__$1 = state_11101;
                      var statearr_11103_11261 = state_11101__$1;
                      statearr_11103_11261[2] = null;
                      statearr_11103_11261[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11102 === 2) {
                        var state_11101__$1 = state_11101;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11101__$1, 4, jobs);
                      } else {
                        if (state_val_11102 === 3) {
                          var inst_11099 = state_11101[2];
                          var state_11101__$1 = state_11101;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11101__$1, inst_11099);
                        } else {
                          if (state_val_11102 === 4) {
                            var inst_11091 = state_11101[2];
                            var inst_11092 = process.call(null, inst_11091);
                            var state_11101__$1 = state_11101;
                            if (cljs.core.truth_(inst_11092)) {
                              var statearr_11104_11262 = state_11101__$1;
                              statearr_11104_11262[1] = 5;
                            } else {
                              var statearr_11105_11263 = state_11101__$1;
                              statearr_11105_11263[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11102 === 5) {
                              var state_11101__$1 = state_11101;
                              var statearr_11106_11264 = state_11101__$1;
                              statearr_11106_11264[2] = null;
                              statearr_11106_11264[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11102 === 6) {
                                var state_11101__$1 = state_11101;
                                var statearr_11107_11265 = state_11101__$1;
                                statearr_11107_11265[2] = null;
                                statearr_11107_11265[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11102 === 7) {
                                  var inst_11097 = state_11101[2];
                                  var state_11101__$1 = state_11101;
                                  var statearr_11108_11266 = state_11101__$1;
                                  statearr_11108_11266[2] = inst_11097;
                                  statearr_11108_11266[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__11257, c__8014__auto___11260, G__11088_11258, n__5410__auto___11256, jobs, results, process, async);
                return function(__11257, switch__7949__auto__, c__8014__auto___11260, G__11088_11258, n__5410__auto___11256, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0 = function() {
                      var statearr_11112 = [null, null, null, null, null, null, null];
                      statearr_11112[0] = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__;
                      statearr_11112[1] = 1;
                      return statearr_11112;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1 = function(state_11101) {
                      while (true) {
                        var ret_value__7951__auto__ = function() {
                          try {
                            while (true) {
                              var result__7952__auto__ = switch__7949__auto__.call(null, state_11101);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__7952__auto__;
                              }
                              break;
                            }
                          } catch (e11113) {
                            if (e11113 instanceof Object) {
                              var ex__7953__auto__ = e11113;
                              var statearr_11114_11267 = state_11101;
                              statearr_11114_11267[5] = ex__7953__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11101);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e11113;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__11268 = state_11101;
                          state_11101 = G__11268;
                          continue;
                        } else {
                          return ret_value__7951__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__ = function(state_11101) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1.call(this, state_11101);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__;
                  }();
                }(__11257, switch__7949__auto__, c__8014__auto___11260, G__11088_11258, n__5410__auto___11256, jobs, results, process, async);
              }();
              var state__8016__auto__ = function() {
                var statearr_11115 = f__8015__auto__.call(null);
                statearr_11115[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___11260;
                return statearr_11115;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
            };
          }(__11257, c__8014__auto___11260, G__11088_11258, n__5410__auto___11256, jobs, results, process, async));
          break;
        case "async":
          var c__8014__auto___11269 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__11257, c__8014__auto___11269, G__11088_11258, n__5410__auto___11256, jobs, results, process, async) {
            return function() {
              var f__8015__auto__ = function() {
                var switch__7949__auto__ = function(__11257, c__8014__auto___11269, G__11088_11258, n__5410__auto___11256, jobs, results, process, async) {
                  return function(state_11128) {
                    var state_val_11129 = state_11128[1];
                    if (state_val_11129 === 1) {
                      var state_11128__$1 = state_11128;
                      var statearr_11130_11270 = state_11128__$1;
                      statearr_11130_11270[2] = null;
                      statearr_11130_11270[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11129 === 2) {
                        var state_11128__$1 = state_11128;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11128__$1, 4, jobs);
                      } else {
                        if (state_val_11129 === 3) {
                          var inst_11126 = state_11128[2];
                          var state_11128__$1 = state_11128;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11128__$1, inst_11126);
                        } else {
                          if (state_val_11129 === 4) {
                            var inst_11118 = state_11128[2];
                            var inst_11119 = async.call(null, inst_11118);
                            var state_11128__$1 = state_11128;
                            if (cljs.core.truth_(inst_11119)) {
                              var statearr_11131_11271 = state_11128__$1;
                              statearr_11131_11271[1] = 5;
                            } else {
                              var statearr_11132_11272 = state_11128__$1;
                              statearr_11132_11272[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11129 === 5) {
                              var state_11128__$1 = state_11128;
                              var statearr_11133_11273 = state_11128__$1;
                              statearr_11133_11273[2] = null;
                              statearr_11133_11273[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11129 === 6) {
                                var state_11128__$1 = state_11128;
                                var statearr_11134_11274 = state_11128__$1;
                                statearr_11134_11274[2] = null;
                                statearr_11134_11274[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11129 === 7) {
                                  var inst_11124 = state_11128[2];
                                  var state_11128__$1 = state_11128;
                                  var statearr_11135_11275 = state_11128__$1;
                                  statearr_11135_11275[2] = inst_11124;
                                  statearr_11135_11275[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__11257, c__8014__auto___11269, G__11088_11258, n__5410__auto___11256, jobs, results, process, async);
                return function(__11257, switch__7949__auto__, c__8014__auto___11269, G__11088_11258, n__5410__auto___11256, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0 = function() {
                      var statearr_11139 = [null, null, null, null, null, null, null];
                      statearr_11139[0] = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__;
                      statearr_11139[1] = 1;
                      return statearr_11139;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1 = function(state_11128) {
                      while (true) {
                        var ret_value__7951__auto__ = function() {
                          try {
                            while (true) {
                              var result__7952__auto__ = switch__7949__auto__.call(null, state_11128);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__7952__auto__;
                              }
                              break;
                            }
                          } catch (e11140) {
                            if (e11140 instanceof Object) {
                              var ex__7953__auto__ = e11140;
                              var statearr_11141_11276 = state_11128;
                              statearr_11141_11276[5] = ex__7953__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11128);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e11140;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__11277 = state_11128;
                          state_11128 = G__11277;
                          continue;
                        } else {
                          return ret_value__7951__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__ = function(state_11128) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1.call(this, state_11128);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__;
                  }();
                }(__11257, switch__7949__auto__, c__8014__auto___11269, G__11088_11258, n__5410__auto___11256, jobs, results, process, async);
              }();
              var state__8016__auto__ = function() {
                var statearr_11142 = f__8015__auto__.call(null);
                statearr_11142[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___11269;
                return statearr_11142;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
            };
          }(__11257, c__8014__auto___11269, G__11088_11258, n__5410__auto___11256, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__11278 = __11257 + 1;
      __11257 = G__11278;
      continue;
    } else {
    }
    break;
  }
  var c__8014__auto___11279 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___11279, jobs, results, process, async) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___11279, jobs, results, process, async) {
          return function(state_11164) {
            var state_val_11165 = state_11164[1];
            if (state_val_11165 === 1) {
              var state_11164__$1 = state_11164;
              var statearr_11166_11280 = state_11164__$1;
              statearr_11166_11280[2] = null;
              statearr_11166_11280[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11165 === 2) {
                var state_11164__$1 = state_11164;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11164__$1, 4, from);
              } else {
                if (state_val_11165 === 3) {
                  var inst_11162 = state_11164[2];
                  var state_11164__$1 = state_11164;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11164__$1, inst_11162);
                } else {
                  if (state_val_11165 === 4) {
                    var inst_11145 = state_11164[7];
                    var inst_11145__$1 = state_11164[2];
                    var inst_11146 = inst_11145__$1 == null;
                    var state_11164__$1 = function() {
                      var statearr_11167 = state_11164;
                      statearr_11167[7] = inst_11145__$1;
                      return statearr_11167;
                    }();
                    if (cljs.core.truth_(inst_11146)) {
                      var statearr_11168_11281 = state_11164__$1;
                      statearr_11168_11281[1] = 5;
                    } else {
                      var statearr_11169_11282 = state_11164__$1;
                      statearr_11169_11282[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11165 === 5) {
                      var inst_11148 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_11164__$1 = state_11164;
                      var statearr_11170_11283 = state_11164__$1;
                      statearr_11170_11283[2] = inst_11148;
                      statearr_11170_11283[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11165 === 6) {
                        var inst_11150 = state_11164[8];
                        var inst_11145 = state_11164[7];
                        var inst_11150__$1 = cljs.core.async.chan.call(null, 1);
                        var inst_11151 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_11152 = [inst_11145, inst_11150__$1];
                        var inst_11153 = new cljs.core.PersistentVector(null, 2, 5, inst_11151, inst_11152, null);
                        var state_11164__$1 = function() {
                          var statearr_11171 = state_11164;
                          statearr_11171[8] = inst_11150__$1;
                          return statearr_11171;
                        }();
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11164__$1, 8, jobs, inst_11153);
                      } else {
                        if (state_val_11165 === 7) {
                          var inst_11160 = state_11164[2];
                          var state_11164__$1 = state_11164;
                          var statearr_11172_11284 = state_11164__$1;
                          statearr_11172_11284[2] = inst_11160;
                          statearr_11172_11284[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11165 === 8) {
                            var inst_11150 = state_11164[8];
                            var inst_11155 = state_11164[2];
                            var state_11164__$1 = function() {
                              var statearr_11173 = state_11164;
                              statearr_11173[9] = inst_11155;
                              return statearr_11173;
                            }();
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11164__$1, 9, results, inst_11150);
                          } else {
                            if (state_val_11165 === 9) {
                              var inst_11157 = state_11164[2];
                              var state_11164__$1 = function() {
                                var statearr_11174 = state_11164;
                                statearr_11174[10] = inst_11157;
                                return statearr_11174;
                              }();
                              var statearr_11175_11285 = state_11164__$1;
                              statearr_11175_11285[2] = null;
                              statearr_11175_11285[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___11279, jobs, results, process, async);
        return function(switch__7949__auto__, c__8014__auto___11279, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0 = function() {
              var statearr_11179 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_11179[0] = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__;
              statearr_11179[1] = 1;
              return statearr_11179;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1 = function(state_11164) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_11164);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e11180) {
                    if (e11180 instanceof Object) {
                      var ex__7953__auto__ = e11180;
                      var statearr_11181_11286 = state_11164;
                      statearr_11181_11286[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11164);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11180;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11287 = state_11164;
                  state_11164 = G__11287;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__ = function(state_11164) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1.call(this, state_11164);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___11279, jobs, results, process, async);
      }();
      var state__8016__auto__ = function() {
        var statearr_11182 = f__8015__auto__.call(null);
        statearr_11182[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___11279;
        return statearr_11182;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___11279, jobs, results, process, async));
  var c__8014__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto__, jobs, results, process, async) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto__, jobs, results, process, async) {
          return function(state_11220) {
            var state_val_11221 = state_11220[1];
            if (state_val_11221 === 7) {
              var inst_11216 = state_11220[2];
              var state_11220__$1 = state_11220;
              var statearr_11222_11288 = state_11220__$1;
              statearr_11222_11288[2] = inst_11216;
              statearr_11222_11288[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11221 === 20) {
                var state_11220__$1 = state_11220;
                var statearr_11223_11289 = state_11220__$1;
                statearr_11223_11289[2] = null;
                statearr_11223_11289[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11221 === 1) {
                  var state_11220__$1 = state_11220;
                  var statearr_11224_11290 = state_11220__$1;
                  statearr_11224_11290[2] = null;
                  statearr_11224_11290[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11221 === 4) {
                    var inst_11185 = state_11220[7];
                    var inst_11185__$1 = state_11220[2];
                    var inst_11186 = inst_11185__$1 == null;
                    var state_11220__$1 = function() {
                      var statearr_11225 = state_11220;
                      statearr_11225[7] = inst_11185__$1;
                      return statearr_11225;
                    }();
                    if (cljs.core.truth_(inst_11186)) {
                      var statearr_11226_11291 = state_11220__$1;
                      statearr_11226_11291[1] = 5;
                    } else {
                      var statearr_11227_11292 = state_11220__$1;
                      statearr_11227_11292[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11221 === 15) {
                      var inst_11198 = state_11220[8];
                      var state_11220__$1 = state_11220;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11220__$1, 18, to, inst_11198);
                    } else {
                      if (state_val_11221 === 21) {
                        var inst_11211 = state_11220[2];
                        var state_11220__$1 = state_11220;
                        var statearr_11228_11293 = state_11220__$1;
                        statearr_11228_11293[2] = inst_11211;
                        statearr_11228_11293[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11221 === 13) {
                          var inst_11213 = state_11220[2];
                          var state_11220__$1 = function() {
                            var statearr_11229 = state_11220;
                            statearr_11229[9] = inst_11213;
                            return statearr_11229;
                          }();
                          var statearr_11230_11294 = state_11220__$1;
                          statearr_11230_11294[2] = null;
                          statearr_11230_11294[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11221 === 6) {
                            var inst_11185 = state_11220[7];
                            var state_11220__$1 = state_11220;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11220__$1, 11, inst_11185);
                          } else {
                            if (state_val_11221 === 17) {
                              var inst_11206 = state_11220[2];
                              var state_11220__$1 = state_11220;
                              if (cljs.core.truth_(inst_11206)) {
                                var statearr_11231_11295 = state_11220__$1;
                                statearr_11231_11295[1] = 19;
                              } else {
                                var statearr_11232_11296 = state_11220__$1;
                                statearr_11232_11296[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11221 === 3) {
                                var inst_11218 = state_11220[2];
                                var state_11220__$1 = state_11220;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11220__$1, inst_11218);
                              } else {
                                if (state_val_11221 === 12) {
                                  var inst_11195 = state_11220[10];
                                  var state_11220__$1 = state_11220;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11220__$1, 14, inst_11195);
                                } else {
                                  if (state_val_11221 === 2) {
                                    var state_11220__$1 = state_11220;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11220__$1, 4, results);
                                  } else {
                                    if (state_val_11221 === 19) {
                                      var state_11220__$1 = state_11220;
                                      var statearr_11233_11297 = state_11220__$1;
                                      statearr_11233_11297[2] = null;
                                      statearr_11233_11297[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_11221 === 11) {
                                        var inst_11195 = state_11220[2];
                                        var state_11220__$1 = function() {
                                          var statearr_11234 = state_11220;
                                          statearr_11234[10] = inst_11195;
                                          return statearr_11234;
                                        }();
                                        var statearr_11235_11298 = state_11220__$1;
                                        statearr_11235_11298[2] = null;
                                        statearr_11235_11298[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_11221 === 9) {
                                          var state_11220__$1 = state_11220;
                                          var statearr_11236_11299 = state_11220__$1;
                                          statearr_11236_11299[2] = null;
                                          statearr_11236_11299[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_11221 === 5) {
                                            var state_11220__$1 = state_11220;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_11237_11300 = state_11220__$1;
                                              statearr_11237_11300[1] = 8;
                                            } else {
                                              var statearr_11238_11301 = state_11220__$1;
                                              statearr_11238_11301[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_11221 === 14) {
                                              var inst_11198 = state_11220[8];
                                              var inst_11200 = state_11220[11];
                                              var inst_11198__$1 = state_11220[2];
                                              var inst_11199 = inst_11198__$1 == null;
                                              var inst_11200__$1 = cljs.core.not.call(null, inst_11199);
                                              var state_11220__$1 = function() {
                                                var statearr_11239 = state_11220;
                                                statearr_11239[8] = inst_11198__$1;
                                                statearr_11239[11] = inst_11200__$1;
                                                return statearr_11239;
                                              }();
                                              if (inst_11200__$1) {
                                                var statearr_11240_11302 = state_11220__$1;
                                                statearr_11240_11302[1] = 15;
                                              } else {
                                                var statearr_11241_11303 = state_11220__$1;
                                                statearr_11241_11303[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_11221 === 16) {
                                                var inst_11200 = state_11220[11];
                                                var state_11220__$1 = state_11220;
                                                var statearr_11242_11304 = state_11220__$1;
                                                statearr_11242_11304[2] = inst_11200;
                                                statearr_11242_11304[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_11221 === 10) {
                                                  var inst_11192 = state_11220[2];
                                                  var state_11220__$1 = state_11220;
                                                  var statearr_11243_11305 = state_11220__$1;
                                                  statearr_11243_11305[2] = inst_11192;
                                                  statearr_11243_11305[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_11221 === 18) {
                                                    var inst_11203 = state_11220[2];
                                                    var state_11220__$1 = state_11220;
                                                    var statearr_11244_11306 = state_11220__$1;
                                                    statearr_11244_11306[2] = inst_11203;
                                                    statearr_11244_11306[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_11221 === 8) {
                                                      var inst_11189 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_11220__$1 = state_11220;
                                                      var statearr_11245_11307 = state_11220__$1;
                                                      statearr_11245_11307[2] = inst_11189;
                                                      statearr_11245_11307[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto__, jobs, results, process, async);
        return function(switch__7949__auto__, c__8014__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0 = function() {
              var statearr_11249 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11249[0] = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__;
              statearr_11249[1] = 1;
              return statearr_11249;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1 = function(state_11220) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_11220);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e11250) {
                    if (e11250 instanceof Object) {
                      var ex__7953__auto__ = e11250;
                      var statearr_11251_11308 = state_11220;
                      statearr_11251_11308[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11220);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11250;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11309 = state_11220;
                  state_11220 = G__11309;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__ = function(state_11220) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1.call(this, state_11220);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__7950__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto__, jobs, results, process, async);
      }();
      var state__8016__auto__ = function() {
        var statearr_11252 = f__8015__auto__.call(null);
        statearr_11252[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto__;
        return statearr_11252;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto__, jobs, results, process, async));
  return c__8014__auto__;
};
cljs.core.async.pipeline_async = function cljs$core$async$pipeline_async() {
  var args11310 = [];
  var len__5565__auto___11313 = arguments.length;
  var i__5566__auto___11314 = 0;
  while (true) {
    if (i__5566__auto___11314 < len__5565__auto___11313) {
      args11310.push(arguments[i__5566__auto___11314]);
      var G__11315 = i__5566__auto___11314 + 1;
      i__5566__auto___11314 = G__11315;
      continue;
    } else {
    }
    break;
  }
  var G__11312 = args11310.length;
  switch(G__11312) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11310.length)].join(""));;
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(n, to, af, from) {
  return cljs.core.async.pipeline_async.call(null, n, to, af, from, true);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(n, to, af, from, close_QMARK_) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function cljs$core$async$pipeline() {
  var args11317 = [];
  var len__5565__auto___11320 = arguments.length;
  var i__5566__auto___11321 = 0;
  while (true) {
    if (i__5566__auto___11321 < len__5565__auto___11320) {
      args11317.push(arguments[i__5566__auto___11321]);
      var G__11322 = i__5566__auto___11321 + 1;
      i__5566__auto___11321 = G__11322;
      continue;
    } else {
    }
    break;
  }
  var G__11319 = args11317.length;
  switch(G__11319) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11317.length)].join(""));;
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(n, to, xf, from) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, true);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(n, to, xf, from, close_QMARK_) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, close_QMARK_, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function cljs$core$async$split() {
  var args11324 = [];
  var len__5565__auto___11377 = arguments.length;
  var i__5566__auto___11378 = 0;
  while (true) {
    if (i__5566__auto___11378 < len__5565__auto___11377) {
      args11324.push(arguments[i__5566__auto___11378]);
      var G__11379 = i__5566__auto___11378 + 1;
      i__5566__auto___11378 = G__11379;
      continue;
    } else {
    }
    break;
  }
  var G__11326 = args11324.length;
  switch(G__11326) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11324.length)].join(""));;
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.split.call(null, p, ch, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
  var tc = cljs.core.async.chan.call(null, t_buf_or_n);
  var fc = cljs.core.async.chan.call(null, f_buf_or_n);
  var c__8014__auto___11381 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___11381, tc, fc) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___11381, tc, fc) {
          return function(state_11352) {
            var state_val_11353 = state_11352[1];
            if (state_val_11353 === 7) {
              var inst_11348 = state_11352[2];
              var state_11352__$1 = state_11352;
              var statearr_11354_11382 = state_11352__$1;
              statearr_11354_11382[2] = inst_11348;
              statearr_11354_11382[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11353 === 1) {
                var state_11352__$1 = state_11352;
                var statearr_11355_11383 = state_11352__$1;
                statearr_11355_11383[2] = null;
                statearr_11355_11383[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11353 === 4) {
                  var inst_11329 = state_11352[7];
                  var inst_11329__$1 = state_11352[2];
                  var inst_11330 = inst_11329__$1 == null;
                  var state_11352__$1 = function() {
                    var statearr_11356 = state_11352;
                    statearr_11356[7] = inst_11329__$1;
                    return statearr_11356;
                  }();
                  if (cljs.core.truth_(inst_11330)) {
                    var statearr_11357_11384 = state_11352__$1;
                    statearr_11357_11384[1] = 5;
                  } else {
                    var statearr_11358_11385 = state_11352__$1;
                    statearr_11358_11385[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11353 === 13) {
                    var state_11352__$1 = state_11352;
                    var statearr_11359_11386 = state_11352__$1;
                    statearr_11359_11386[2] = null;
                    statearr_11359_11386[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11353 === 6) {
                      var inst_11329 = state_11352[7];
                      var inst_11335 = p.call(null, inst_11329);
                      var state_11352__$1 = state_11352;
                      if (cljs.core.truth_(inst_11335)) {
                        var statearr_11360_11387 = state_11352__$1;
                        statearr_11360_11387[1] = 9;
                      } else {
                        var statearr_11361_11388 = state_11352__$1;
                        statearr_11361_11388[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11353 === 3) {
                        var inst_11350 = state_11352[2];
                        var state_11352__$1 = state_11352;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11352__$1, inst_11350);
                      } else {
                        if (state_val_11353 === 12) {
                          var state_11352__$1 = state_11352;
                          var statearr_11362_11389 = state_11352__$1;
                          statearr_11362_11389[2] = null;
                          statearr_11362_11389[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11353 === 2) {
                            var state_11352__$1 = state_11352;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11352__$1, 4, ch);
                          } else {
                            if (state_val_11353 === 11) {
                              var inst_11329 = state_11352[7];
                              var inst_11339 = state_11352[2];
                              var state_11352__$1 = state_11352;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11352__$1, 8, inst_11339, inst_11329);
                            } else {
                              if (state_val_11353 === 9) {
                                var state_11352__$1 = state_11352;
                                var statearr_11363_11390 = state_11352__$1;
                                statearr_11363_11390[2] = tc;
                                statearr_11363_11390[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11353 === 5) {
                                  var inst_11332 = cljs.core.async.close_BANG_.call(null, tc);
                                  var inst_11333 = cljs.core.async.close_BANG_.call(null, fc);
                                  var state_11352__$1 = function() {
                                    var statearr_11364 = state_11352;
                                    statearr_11364[8] = inst_11332;
                                    return statearr_11364;
                                  }();
                                  var statearr_11365_11391 = state_11352__$1;
                                  statearr_11365_11391[2] = inst_11333;
                                  statearr_11365_11391[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11353 === 14) {
                                    var inst_11346 = state_11352[2];
                                    var state_11352__$1 = state_11352;
                                    var statearr_11366_11392 = state_11352__$1;
                                    statearr_11366_11392[2] = inst_11346;
                                    statearr_11366_11392[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11353 === 10) {
                                      var state_11352__$1 = state_11352;
                                      var statearr_11367_11393 = state_11352__$1;
                                      statearr_11367_11393[2] = fc;
                                      statearr_11367_11393[1] = 11;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_11353 === 8) {
                                        var inst_11341 = state_11352[2];
                                        var state_11352__$1 = state_11352;
                                        if (cljs.core.truth_(inst_11341)) {
                                          var statearr_11368_11394 = state_11352__$1;
                                          statearr_11368_11394[1] = 12;
                                        } else {
                                          var statearr_11369_11395 = state_11352__$1;
                                          statearr_11369_11395[1] = 13;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___11381, tc, fc);
        return function(switch__7949__auto__, c__8014__auto___11381, tc, fc) {
          return function() {
            var cljs$core$async$state_machine__7950__auto__ = null;
            var cljs$core$async$state_machine__7950__auto____0 = function() {
              var statearr_11373 = [null, null, null, null, null, null, null, null, null];
              statearr_11373[0] = cljs$core$async$state_machine__7950__auto__;
              statearr_11373[1] = 1;
              return statearr_11373;
            };
            var cljs$core$async$state_machine__7950__auto____1 = function(state_11352) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_11352);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e11374) {
                    if (e11374 instanceof Object) {
                      var ex__7953__auto__ = e11374;
                      var statearr_11375_11396 = state_11352;
                      statearr_11375_11396[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11352);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11374;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11397 = state_11352;
                  state_11352 = G__11397;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7950__auto__ = function(state_11352) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7950__auto____1.call(this, state_11352);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7950__auto____0;
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7950__auto____1;
            return cljs$core$async$state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___11381, tc, fc);
      }();
      var state__8016__auto__ = function() {
        var statearr_11376 = f__8015__auto__.call(null);
        statearr_11376[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___11381;
        return statearr_11376;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___11381, tc, fc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__8014__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto__) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto__) {
          return function(state_11444) {
            var state_val_11445 = state_11444[1];
            if (state_val_11445 === 1) {
              var inst_11430 = init;
              var state_11444__$1 = function() {
                var statearr_11446 = state_11444;
                statearr_11446[7] = inst_11430;
                return statearr_11446;
              }();
              var statearr_11447_11462 = state_11444__$1;
              statearr_11447_11462[2] = null;
              statearr_11447_11462[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11445 === 2) {
                var state_11444__$1 = state_11444;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11444__$1, 4, ch);
              } else {
                if (state_val_11445 === 3) {
                  var inst_11442 = state_11444[2];
                  var state_11444__$1 = state_11444;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11444__$1, inst_11442);
                } else {
                  if (state_val_11445 === 4) {
                    var inst_11433 = state_11444[8];
                    var inst_11433__$1 = state_11444[2];
                    var inst_11434 = inst_11433__$1 == null;
                    var state_11444__$1 = function() {
                      var statearr_11448 = state_11444;
                      statearr_11448[8] = inst_11433__$1;
                      return statearr_11448;
                    }();
                    if (cljs.core.truth_(inst_11434)) {
                      var statearr_11449_11463 = state_11444__$1;
                      statearr_11449_11463[1] = 5;
                    } else {
                      var statearr_11450_11464 = state_11444__$1;
                      statearr_11450_11464[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11445 === 5) {
                      var inst_11430 = state_11444[7];
                      var state_11444__$1 = state_11444;
                      var statearr_11451_11465 = state_11444__$1;
                      statearr_11451_11465[2] = inst_11430;
                      statearr_11451_11465[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11445 === 6) {
                        var inst_11433 = state_11444[8];
                        var inst_11430 = state_11444[7];
                        var inst_11437 = f.call(null, inst_11430, inst_11433);
                        var inst_11430__$1 = inst_11437;
                        var state_11444__$1 = function() {
                          var statearr_11452 = state_11444;
                          statearr_11452[7] = inst_11430__$1;
                          return statearr_11452;
                        }();
                        var statearr_11453_11466 = state_11444__$1;
                        statearr_11453_11466[2] = null;
                        statearr_11453_11466[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11445 === 7) {
                          var inst_11440 = state_11444[2];
                          var state_11444__$1 = state_11444;
                          var statearr_11454_11467 = state_11444__$1;
                          statearr_11454_11467[2] = inst_11440;
                          statearr_11454_11467[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto__);
        return function(switch__7949__auto__, c__8014__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__7950__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__7950__auto____0 = function() {
              var statearr_11458 = [null, null, null, null, null, null, null, null, null];
              statearr_11458[0] = cljs$core$async$reduce_$_state_machine__7950__auto__;
              statearr_11458[1] = 1;
              return statearr_11458;
            };
            var cljs$core$async$reduce_$_state_machine__7950__auto____1 = function(state_11444) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_11444);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e11459) {
                    if (e11459 instanceof Object) {
                      var ex__7953__auto__ = e11459;
                      var statearr_11460_11468 = state_11444;
                      statearr_11460_11468[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11444);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11459;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11469 = state_11444;
                  state_11444 = G__11469;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__7950__auto__ = function(state_11444) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__7950__auto____1.call(this, state_11444);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$reduce_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__7950__auto____0;
            cljs$core$async$reduce_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__7950__auto____1;
            return cljs$core$async$reduce_$_state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto__);
      }();
      var state__8016__auto__ = function() {
        var statearr_11461 = f__8015__auto__.call(null);
        statearr_11461[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto__;
        return statearr_11461;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto__));
  return c__8014__auto__;
};
cljs.core.async.onto_chan = function cljs$core$async$onto_chan() {
  var args11470 = [];
  var len__5565__auto___11522 = arguments.length;
  var i__5566__auto___11523 = 0;
  while (true) {
    if (i__5566__auto___11523 < len__5565__auto___11522) {
      args11470.push(arguments[i__5566__auto___11523]);
      var G__11524 = i__5566__auto___11523 + 1;
      i__5566__auto___11523 = G__11524;
      continue;
    } else {
    }
    break;
  }
  var G__11472 = args11470.length;
  switch(G__11472) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11470.length)].join(""));;
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(ch, coll) {
  return cljs.core.async.onto_chan.call(null, ch, coll, true);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(ch, coll, close_QMARK_) {
  var c__8014__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto__) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto__) {
          return function(state_11497) {
            var state_val_11498 = state_11497[1];
            if (state_val_11498 === 7) {
              var inst_11479 = state_11497[2];
              var state_11497__$1 = state_11497;
              var statearr_11499_11526 = state_11497__$1;
              statearr_11499_11526[2] = inst_11479;
              statearr_11499_11526[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11498 === 1) {
                var inst_11473 = cljs.core.seq.call(null, coll);
                var inst_11474 = inst_11473;
                var state_11497__$1 = function() {
                  var statearr_11500 = state_11497;
                  statearr_11500[7] = inst_11474;
                  return statearr_11500;
                }();
                var statearr_11501_11527 = state_11497__$1;
                statearr_11501_11527[2] = null;
                statearr_11501_11527[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11498 === 4) {
                  var inst_11474 = state_11497[7];
                  var inst_11477 = cljs.core.first.call(null, inst_11474);
                  var state_11497__$1 = state_11497;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11497__$1, 7, ch, inst_11477);
                } else {
                  if (state_val_11498 === 13) {
                    var inst_11491 = state_11497[2];
                    var state_11497__$1 = state_11497;
                    var statearr_11502_11528 = state_11497__$1;
                    statearr_11502_11528[2] = inst_11491;
                    statearr_11502_11528[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11498 === 6) {
                      var inst_11482 = state_11497[2];
                      var state_11497__$1 = state_11497;
                      if (cljs.core.truth_(inst_11482)) {
                        var statearr_11503_11529 = state_11497__$1;
                        statearr_11503_11529[1] = 8;
                      } else {
                        var statearr_11504_11530 = state_11497__$1;
                        statearr_11504_11530[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11498 === 3) {
                        var inst_11495 = state_11497[2];
                        var state_11497__$1 = state_11497;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11497__$1, inst_11495);
                      } else {
                        if (state_val_11498 === 12) {
                          var state_11497__$1 = state_11497;
                          var statearr_11505_11531 = state_11497__$1;
                          statearr_11505_11531[2] = null;
                          statearr_11505_11531[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11498 === 2) {
                            var inst_11474 = state_11497[7];
                            var state_11497__$1 = state_11497;
                            if (cljs.core.truth_(inst_11474)) {
                              var statearr_11506_11532 = state_11497__$1;
                              statearr_11506_11532[1] = 4;
                            } else {
                              var statearr_11507_11533 = state_11497__$1;
                              statearr_11507_11533[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11498 === 11) {
                              var inst_11488 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_11497__$1 = state_11497;
                              var statearr_11508_11534 = state_11497__$1;
                              statearr_11508_11534[2] = inst_11488;
                              statearr_11508_11534[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11498 === 9) {
                                var state_11497__$1 = state_11497;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_11509_11535 = state_11497__$1;
                                  statearr_11509_11535[1] = 11;
                                } else {
                                  var statearr_11510_11536 = state_11497__$1;
                                  statearr_11510_11536[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11498 === 5) {
                                  var inst_11474 = state_11497[7];
                                  var state_11497__$1 = state_11497;
                                  var statearr_11511_11537 = state_11497__$1;
                                  statearr_11511_11537[2] = inst_11474;
                                  statearr_11511_11537[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11498 === 10) {
                                    var inst_11493 = state_11497[2];
                                    var state_11497__$1 = state_11497;
                                    var statearr_11512_11538 = state_11497__$1;
                                    statearr_11512_11538[2] = inst_11493;
                                    statearr_11512_11538[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11498 === 8) {
                                      var inst_11474 = state_11497[7];
                                      var inst_11484 = cljs.core.next.call(null, inst_11474);
                                      var inst_11474__$1 = inst_11484;
                                      var state_11497__$1 = function() {
                                        var statearr_11513 = state_11497;
                                        statearr_11513[7] = inst_11474__$1;
                                        return statearr_11513;
                                      }();
                                      var statearr_11514_11539 = state_11497__$1;
                                      statearr_11514_11539[2] = null;
                                      statearr_11514_11539[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto__);
        return function(switch__7949__auto__, c__8014__auto__) {
          return function() {
            var cljs$core$async$state_machine__7950__auto__ = null;
            var cljs$core$async$state_machine__7950__auto____0 = function() {
              var statearr_11518 = [null, null, null, null, null, null, null, null];
              statearr_11518[0] = cljs$core$async$state_machine__7950__auto__;
              statearr_11518[1] = 1;
              return statearr_11518;
            };
            var cljs$core$async$state_machine__7950__auto____1 = function(state_11497) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_11497);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e11519) {
                    if (e11519 instanceof Object) {
                      var ex__7953__auto__ = e11519;
                      var statearr_11520_11540 = state_11497;
                      statearr_11520_11540[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11497);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11519;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11541 = state_11497;
                  state_11497 = G__11541;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7950__auto__ = function(state_11497) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7950__auto____1.call(this, state_11497);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7950__auto____0;
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7950__auto____1;
            return cljs$core$async$state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto__);
      }();
      var state__8016__auto__ = function() {
        var statearr_11521 = f__8015__auto__.call(null);
        statearr_11521[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto__;
        return statearr_11521;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto__));
  return c__8014__auto__;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = {};
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (!(_ == null) && !(_.cljs$core$async$Mux$muxch_STAR_$arity$1 == null)) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__5162__auto__ = _ == null ? null : _;
    var m__5163__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, _);
    } else {
      var m__5163__auto____$1 = cljs.core.async.muxch_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
      }
    }
  }
};
cljs.core.async.Mult = {};
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (!(m == null) && !(m.cljs$core$async$Mult$tap_STAR_$arity$3 == null)) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m, ch, close_QMARK_);
    } else {
      var m__5163__auto____$1 = cljs.core.async.tap_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
      }
    }
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m, ch);
    } else {
      var m__5163__auto____$1 = cljs.core.async.untap_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
      }
    }
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m);
    } else {
      var m__5163__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
      }
    }
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t11767 !== "undefined") {
    } else {
      cljs.core.async.t11767 = function(mult, ch, cs, meta11768) {
        this.mult = mult;
        this.ch = ch;
        this.cs = cs;
        this.meta11768 = meta11768;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t11767.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_11769, meta11768__$1) {
          var self__ = this;
          var _11769__$1 = this;
          return new cljs.core.async.t11767(self__.mult, self__.ch, self__.cs, meta11768__$1);
        };
      }(cs);
      cljs.core.async.t11767.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_11769) {
          var self__ = this;
          var _11769__$1 = this;
          return self__.meta11768;
        };
      }(cs);
      cljs.core.async.t11767.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t11767.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t11767.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t11767.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t11767.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t11767.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t11767.getBasis = function(cs) {
        return function() {
          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mult", "mult", -1187640995, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", 
          "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mult(iple) of the supplied channel. Channels\n  containing copies of the channel can be created with 'tap', and\n  detached with 'untap'.\n\n  Each item is distributed to all taps in parallel and synchronously,\n  i.e. each tap must accept before the next item is distributed. Use\n  buffering/windowing to prevent slow taps from holding up the mult.\n\n  Items received when there are no taps get dropped.\n\n  If a tap puts to a closed channel, it will be removed from the mult."], 
          null)), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta11768", "meta11768", 1670230043, null)], null);
        };
      }(cs);
      cljs.core.async.t11767.cljs$lang$type = true;
      cljs.core.async.t11767.cljs$lang$ctorStr = "cljs.core.async/t11767";
      cljs.core.async.t11767.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
          return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t11767");
        };
      }(cs);
      cljs.core.async.__GT_t11767 = function(cs) {
        return function cljs$core$async$mult_$___GT_t11767(mult__$1, ch__$1, cs__$1, meta11768) {
          return new cljs.core.async.t11767(mult__$1, ch__$1, cs__$1, meta11768);
        };
      }(cs);
    }
    return new cljs.core.async.t11767(cljs$core$async$mult, ch, cs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__8014__auto___11988 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___11988, cs, m, dchan, dctr, done) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___11988, cs, m, dchan, dctr, done) {
          return function(state_11900) {
            var state_val_11901 = state_11900[1];
            if (state_val_11901 === 7) {
              var inst_11896 = state_11900[2];
              var state_11900__$1 = state_11900;
              var statearr_11902_11989 = state_11900__$1;
              statearr_11902_11989[2] = inst_11896;
              statearr_11902_11989[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11901 === 20) {
                var inst_11801 = state_11900[7];
                var inst_11811 = cljs.core.first.call(null, inst_11801);
                var inst_11812 = cljs.core.nth.call(null, inst_11811, 0, null);
                var inst_11813 = cljs.core.nth.call(null, inst_11811, 1, null);
                var state_11900__$1 = function() {
                  var statearr_11903 = state_11900;
                  statearr_11903[8] = inst_11812;
                  return statearr_11903;
                }();
                if (cljs.core.truth_(inst_11813)) {
                  var statearr_11904_11990 = state_11900__$1;
                  statearr_11904_11990[1] = 22;
                } else {
                  var statearr_11905_11991 = state_11900__$1;
                  statearr_11905_11991[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11901 === 27) {
                  var inst_11772 = state_11900[9];
                  var inst_11843 = state_11900[10];
                  var inst_11841 = state_11900[11];
                  var inst_11848 = state_11900[12];
                  var inst_11848__$1 = cljs.core._nth.call(null, inst_11841, inst_11843);
                  var inst_11849 = cljs.core.async.put_BANG_.call(null, inst_11848__$1, inst_11772, done);
                  var state_11900__$1 = function() {
                    var statearr_11906 = state_11900;
                    statearr_11906[12] = inst_11848__$1;
                    return statearr_11906;
                  }();
                  if (cljs.core.truth_(inst_11849)) {
                    var statearr_11907_11992 = state_11900__$1;
                    statearr_11907_11992[1] = 30;
                  } else {
                    var statearr_11908_11993 = state_11900__$1;
                    statearr_11908_11993[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11901 === 1) {
                    var state_11900__$1 = state_11900;
                    var statearr_11909_11994 = state_11900__$1;
                    statearr_11909_11994[2] = null;
                    statearr_11909_11994[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11901 === 24) {
                      var inst_11801 = state_11900[7];
                      var inst_11818 = state_11900[2];
                      var inst_11819 = cljs.core.next.call(null, inst_11801);
                      var inst_11781 = inst_11819;
                      var inst_11782 = null;
                      var inst_11783 = 0;
                      var inst_11784 = 0;
                      var state_11900__$1 = function() {
                        var statearr_11910 = state_11900;
                        statearr_11910[13] = inst_11784;
                        statearr_11910[14] = inst_11818;
                        statearr_11910[15] = inst_11782;
                        statearr_11910[16] = inst_11783;
                        statearr_11910[17] = inst_11781;
                        return statearr_11910;
                      }();
                      var statearr_11911_11995 = state_11900__$1;
                      statearr_11911_11995[2] = null;
                      statearr_11911_11995[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11901 === 39) {
                        var state_11900__$1 = state_11900;
                        var statearr_11915_11996 = state_11900__$1;
                        statearr_11915_11996[2] = null;
                        statearr_11915_11996[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11901 === 4) {
                          var inst_11772 = state_11900[9];
                          var inst_11772__$1 = state_11900[2];
                          var inst_11773 = inst_11772__$1 == null;
                          var state_11900__$1 = function() {
                            var statearr_11916 = state_11900;
                            statearr_11916[9] = inst_11772__$1;
                            return statearr_11916;
                          }();
                          if (cljs.core.truth_(inst_11773)) {
                            var statearr_11917_11997 = state_11900__$1;
                            statearr_11917_11997[1] = 5;
                          } else {
                            var statearr_11918_11998 = state_11900__$1;
                            statearr_11918_11998[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11901 === 15) {
                            var inst_11784 = state_11900[13];
                            var inst_11782 = state_11900[15];
                            var inst_11783 = state_11900[16];
                            var inst_11781 = state_11900[17];
                            var inst_11797 = state_11900[2];
                            var inst_11798 = inst_11784 + 1;
                            var tmp11912 = inst_11782;
                            var tmp11913 = inst_11783;
                            var tmp11914 = inst_11781;
                            var inst_11781__$1 = tmp11914;
                            var inst_11782__$1 = tmp11912;
                            var inst_11783__$1 = tmp11913;
                            var inst_11784__$1 = inst_11798;
                            var state_11900__$1 = function() {
                              var statearr_11919 = state_11900;
                              statearr_11919[18] = inst_11797;
                              statearr_11919[13] = inst_11784__$1;
                              statearr_11919[15] = inst_11782__$1;
                              statearr_11919[16] = inst_11783__$1;
                              statearr_11919[17] = inst_11781__$1;
                              return statearr_11919;
                            }();
                            var statearr_11920_11999 = state_11900__$1;
                            statearr_11920_11999[2] = null;
                            statearr_11920_11999[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11901 === 21) {
                              var inst_11822 = state_11900[2];
                              var state_11900__$1 = state_11900;
                              var statearr_11924_12000 = state_11900__$1;
                              statearr_11924_12000[2] = inst_11822;
                              statearr_11924_12000[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11901 === 31) {
                                var inst_11848 = state_11900[12];
                                var inst_11852 = done.call(null, null);
                                var inst_11853 = cljs.core.async.untap_STAR_.call(null, m, inst_11848);
                                var state_11900__$1 = function() {
                                  var statearr_11925 = state_11900;
                                  statearr_11925[19] = inst_11852;
                                  return statearr_11925;
                                }();
                                var statearr_11926_12001 = state_11900__$1;
                                statearr_11926_12001[2] = inst_11853;
                                statearr_11926_12001[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11901 === 32) {
                                  var inst_11842 = state_11900[20];
                                  var inst_11843 = state_11900[10];
                                  var inst_11840 = state_11900[21];
                                  var inst_11841 = state_11900[11];
                                  var inst_11855 = state_11900[2];
                                  var inst_11856 = inst_11843 + 1;
                                  var tmp11921 = inst_11842;
                                  var tmp11922 = inst_11840;
                                  var tmp11923 = inst_11841;
                                  var inst_11840__$1 = tmp11922;
                                  var inst_11841__$1 = tmp11923;
                                  var inst_11842__$1 = tmp11921;
                                  var inst_11843__$1 = inst_11856;
                                  var state_11900__$1 = function() {
                                    var statearr_11927 = state_11900;
                                    statearr_11927[22] = inst_11855;
                                    statearr_11927[20] = inst_11842__$1;
                                    statearr_11927[10] = inst_11843__$1;
                                    statearr_11927[21] = inst_11840__$1;
                                    statearr_11927[11] = inst_11841__$1;
                                    return statearr_11927;
                                  }();
                                  var statearr_11928_12002 = state_11900__$1;
                                  statearr_11928_12002[2] = null;
                                  statearr_11928_12002[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11901 === 40) {
                                    var inst_11868 = state_11900[23];
                                    var inst_11872 = done.call(null, null);
                                    var inst_11873 = cljs.core.async.untap_STAR_.call(null, m, inst_11868);
                                    var state_11900__$1 = function() {
                                      var statearr_11929 = state_11900;
                                      statearr_11929[24] = inst_11872;
                                      return statearr_11929;
                                    }();
                                    var statearr_11930_12003 = state_11900__$1;
                                    statearr_11930_12003[2] = inst_11873;
                                    statearr_11930_12003[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11901 === 33) {
                                      var inst_11859 = state_11900[25];
                                      var inst_11861 = cljs.core.chunked_seq_QMARK_.call(null, inst_11859);
                                      var state_11900__$1 = state_11900;
                                      if (inst_11861) {
                                        var statearr_11931_12004 = state_11900__$1;
                                        statearr_11931_12004[1] = 36;
                                      } else {
                                        var statearr_11932_12005 = state_11900__$1;
                                        statearr_11932_12005[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_11901 === 13) {
                                        var inst_11791 = state_11900[26];
                                        var inst_11794 = cljs.core.async.close_BANG_.call(null, inst_11791);
                                        var state_11900__$1 = state_11900;
                                        var statearr_11933_12006 = state_11900__$1;
                                        statearr_11933_12006[2] = inst_11794;
                                        statearr_11933_12006[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_11901 === 22) {
                                          var inst_11812 = state_11900[8];
                                          var inst_11815 = cljs.core.async.close_BANG_.call(null, inst_11812);
                                          var state_11900__$1 = state_11900;
                                          var statearr_11934_12007 = state_11900__$1;
                                          statearr_11934_12007[2] = inst_11815;
                                          statearr_11934_12007[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_11901 === 36) {
                                            var inst_11859 = state_11900[25];
                                            var inst_11863 = cljs.core.chunk_first.call(null, inst_11859);
                                            var inst_11864 = cljs.core.chunk_rest.call(null, inst_11859);
                                            var inst_11865 = cljs.core.count.call(null, inst_11863);
                                            var inst_11840 = inst_11864;
                                            var inst_11841 = inst_11863;
                                            var inst_11842 = inst_11865;
                                            var inst_11843 = 0;
                                            var state_11900__$1 = function() {
                                              var statearr_11935 = state_11900;
                                              statearr_11935[20] = inst_11842;
                                              statearr_11935[10] = inst_11843;
                                              statearr_11935[21] = inst_11840;
                                              statearr_11935[11] = inst_11841;
                                              return statearr_11935;
                                            }();
                                            var statearr_11936_12008 = state_11900__$1;
                                            statearr_11936_12008[2] = null;
                                            statearr_11936_12008[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_11901 === 41) {
                                              var inst_11859 = state_11900[25];
                                              var inst_11875 = state_11900[2];
                                              var inst_11876 = cljs.core.next.call(null, inst_11859);
                                              var inst_11840 = inst_11876;
                                              var inst_11841 = null;
                                              var inst_11842 = 0;
                                              var inst_11843 = 0;
                                              var state_11900__$1 = function() {
                                                var statearr_11937 = state_11900;
                                                statearr_11937[20] = inst_11842;
                                                statearr_11937[10] = inst_11843;
                                                statearr_11937[27] = inst_11875;
                                                statearr_11937[21] = inst_11840;
                                                statearr_11937[11] = inst_11841;
                                                return statearr_11937;
                                              }();
                                              var statearr_11938_12009 = state_11900__$1;
                                              statearr_11938_12009[2] = null;
                                              statearr_11938_12009[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_11901 === 43) {
                                                var state_11900__$1 = state_11900;
                                                var statearr_11939_12010 = state_11900__$1;
                                                statearr_11939_12010[2] = null;
                                                statearr_11939_12010[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_11901 === 29) {
                                                  var inst_11884 = state_11900[2];
                                                  var state_11900__$1 = state_11900;
                                                  var statearr_11940_12011 = state_11900__$1;
                                                  statearr_11940_12011[2] = inst_11884;
                                                  statearr_11940_12011[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_11901 === 44) {
                                                    var inst_11893 = state_11900[2];
                                                    var state_11900__$1 = function() {
                                                      var statearr_11941 = state_11900;
                                                      statearr_11941[28] = inst_11893;
                                                      return statearr_11941;
                                                    }();
                                                    var statearr_11942_12012 = state_11900__$1;
                                                    statearr_11942_12012[2] = null;
                                                    statearr_11942_12012[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_11901 === 6) {
                                                      var inst_11832 = state_11900[29];
                                                      var inst_11831 = cljs.core.deref.call(null, cs);
                                                      var inst_11832__$1 = cljs.core.keys.call(null, inst_11831);
                                                      var inst_11833 = cljs.core.count.call(null, inst_11832__$1);
                                                      var inst_11834 = cljs.core.reset_BANG_.call(null, dctr, inst_11833);
                                                      var inst_11839 = cljs.core.seq.call(null, inst_11832__$1);
                                                      var inst_11840 = inst_11839;
                                                      var inst_11841 = null;
                                                      var inst_11842 = 0;
                                                      var inst_11843 = 0;
                                                      var state_11900__$1 = function() {
                                                        var statearr_11943 = state_11900;
                                                        statearr_11943[30] = inst_11834;
                                                        statearr_11943[29] = inst_11832__$1;
                                                        statearr_11943[20] = inst_11842;
                                                        statearr_11943[10] = inst_11843;
                                                        statearr_11943[21] = inst_11840;
                                                        statearr_11943[11] = inst_11841;
                                                        return statearr_11943;
                                                      }();
                                                      var statearr_11944_12013 = state_11900__$1;
                                                      statearr_11944_12013[2] = null;
                                                      statearr_11944_12013[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_11901 === 28) {
                                                        var inst_11859 = state_11900[25];
                                                        var inst_11840 = state_11900[21];
                                                        var inst_11859__$1 = cljs.core.seq.call(null, inst_11840);
                                                        var state_11900__$1 = function() {
                                                          var statearr_11945 = state_11900;
                                                          statearr_11945[25] = inst_11859__$1;
                                                          return statearr_11945;
                                                        }();
                                                        if (inst_11859__$1) {
                                                          var statearr_11946_12014 = state_11900__$1;
                                                          statearr_11946_12014[1] = 33;
                                                        } else {
                                                          var statearr_11947_12015 = state_11900__$1;
                                                          statearr_11947_12015[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_11901 === 25) {
                                                          var inst_11842 = state_11900[20];
                                                          var inst_11843 = state_11900[10];
                                                          var inst_11845 = inst_11843 < inst_11842;
                                                          var inst_11846 = inst_11845;
                                                          var state_11900__$1 = state_11900;
                                                          if (cljs.core.truth_(inst_11846)) {
                                                            var statearr_11948_12016 = state_11900__$1;
                                                            statearr_11948_12016[1] = 27;
                                                          } else {
                                                            var statearr_11949_12017 = state_11900__$1;
                                                            statearr_11949_12017[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_11901 === 34) {
                                                            var state_11900__$1 = state_11900;
                                                            var statearr_11950_12018 = state_11900__$1;
                                                            statearr_11950_12018[2] = null;
                                                            statearr_11950_12018[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_11901 === 17) {
                                                              var state_11900__$1 = state_11900;
                                                              var statearr_11951_12019 = state_11900__$1;
                                                              statearr_11951_12019[2] = null;
                                                              statearr_11951_12019[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_11901 === 3) {
                                                                var inst_11898 = state_11900[2];
                                                                var state_11900__$1 = state_11900;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11900__$1, inst_11898);
                                                              } else {
                                                                if (state_val_11901 === 12) {
                                                                  var inst_11827 = state_11900[2];
                                                                  var state_11900__$1 = state_11900;
                                                                  var statearr_11952_12020 = state_11900__$1;
                                                                  statearr_11952_12020[2] = inst_11827;
                                                                  statearr_11952_12020[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_11901 === 2) {
                                                                    var state_11900__$1 = state_11900;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11900__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_11901 === 23) {
                                                                      var state_11900__$1 = state_11900;
                                                                      var statearr_11953_12021 = state_11900__$1;
                                                                      statearr_11953_12021[2] = null;
                                                                      statearr_11953_12021[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_11901 === 35) {
                                                                        var inst_11882 = state_11900[2];
                                                                        var state_11900__$1 = state_11900;
                                                                        var statearr_11954_12022 = state_11900__$1;
                                                                        statearr_11954_12022[2] = inst_11882;
                                                                        statearr_11954_12022[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_11901 === 19) {
                                                                          var inst_11801 = state_11900[7];
                                                                          var inst_11805 = cljs.core.chunk_first.call(null, inst_11801);
                                                                          var inst_11806 = cljs.core.chunk_rest.call(null, inst_11801);
                                                                          var inst_11807 = cljs.core.count.call(null, inst_11805);
                                                                          var inst_11781 = inst_11806;
                                                                          var inst_11782 = inst_11805;
                                                                          var inst_11783 = inst_11807;
                                                                          var inst_11784 = 0;
                                                                          var state_11900__$1 = function() {
                                                                            var statearr_11955 = state_11900;
                                                                            statearr_11955[13] = inst_11784;
                                                                            statearr_11955[15] = inst_11782;
                                                                            statearr_11955[16] = inst_11783;
                                                                            statearr_11955[17] = inst_11781;
                                                                            return statearr_11955;
                                                                          }();
                                                                          var statearr_11956_12023 = state_11900__$1;
                                                                          statearr_11956_12023[2] = null;
                                                                          statearr_11956_12023[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_11901 === 11) {
                                                                            var inst_11801 = state_11900[7];
                                                                            var inst_11781 = state_11900[17];
                                                                            var inst_11801__$1 = cljs.core.seq.call(null, inst_11781);
                                                                            var state_11900__$1 = function() {
                                                                              var statearr_11957 = state_11900;
                                                                              statearr_11957[7] = inst_11801__$1;
                                                                              return statearr_11957;
                                                                            }();
                                                                            if (inst_11801__$1) {
                                                                              var statearr_11958_12024 = state_11900__$1;
                                                                              statearr_11958_12024[1] = 16;
                                                                            } else {
                                                                              var statearr_11959_12025 = state_11900__$1;
                                                                              statearr_11959_12025[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_11901 === 9) {
                                                                              var inst_11829 = state_11900[2];
                                                                              var state_11900__$1 = state_11900;
                                                                              var statearr_11960_12026 = state_11900__$1;
                                                                              statearr_11960_12026[2] = inst_11829;
                                                                              statearr_11960_12026[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_11901 === 5) {
                                                                                var inst_11779 = cljs.core.deref.call(null, cs);
                                                                                var inst_11780 = cljs.core.seq.call(null, inst_11779);
                                                                                var inst_11781 = inst_11780;
                                                                                var inst_11782 = null;
                                                                                var inst_11783 = 0;
                                                                                var inst_11784 = 0;
                                                                                var state_11900__$1 = function() {
                                                                                  var statearr_11961 = state_11900;
                                                                                  statearr_11961[13] = inst_11784;
                                                                                  statearr_11961[15] = inst_11782;
                                                                                  statearr_11961[16] = inst_11783;
                                                                                  statearr_11961[17] = inst_11781;
                                                                                  return statearr_11961;
                                                                                }();
                                                                                var statearr_11962_12027 = state_11900__$1;
                                                                                statearr_11962_12027[2] = null;
                                                                                statearr_11962_12027[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_11901 === 14) {
                                                                                  var state_11900__$1 = state_11900;
                                                                                  var statearr_11963_12028 = state_11900__$1;
                                                                                  statearr_11963_12028[2] = null;
                                                                                  statearr_11963_12028[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_11901 === 45) {
                                                                                    var inst_11890 = state_11900[2];
                                                                                    var state_11900__$1 = state_11900;
                                                                                    var statearr_11964_12029 = state_11900__$1;
                                                                                    statearr_11964_12029[2] = inst_11890;
                                                                                    statearr_11964_12029[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_11901 === 26) {
                                                                                      var inst_11832 = state_11900[29];
                                                                                      var inst_11886 = state_11900[2];
                                                                                      var inst_11887 = cljs.core.seq.call(null, inst_11832);
                                                                                      var state_11900__$1 = function() {
                                                                                        var statearr_11965 = state_11900;
                                                                                        statearr_11965[31] = inst_11886;
                                                                                        return statearr_11965;
                                                                                      }();
                                                                                      if (inst_11887) {
                                                                                        var statearr_11966_12030 = state_11900__$1;
                                                                                        statearr_11966_12030[1] = 42;
                                                                                      } else {
                                                                                        var statearr_11967_12031 = state_11900__$1;
                                                                                        statearr_11967_12031[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_11901 === 16) {
                                                                                        var inst_11801 = state_11900[7];
                                                                                        var inst_11803 = cljs.core.chunked_seq_QMARK_.call(null, inst_11801);
                                                                                        var state_11900__$1 = state_11900;
                                                                                        if (inst_11803) {
                                                                                          var statearr_11968_12032 = state_11900__$1;
                                                                                          statearr_11968_12032[1] = 19;
                                                                                        } else {
                                                                                          var statearr_11969_12033 = state_11900__$1;
                                                                                          statearr_11969_12033[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_11901 === 38) {
                                                                                          var inst_11879 = state_11900[2];
                                                                                          var state_11900__$1 = state_11900;
                                                                                          var statearr_11970_12034 = state_11900__$1;
                                                                                          statearr_11970_12034[2] = inst_11879;
                                                                                          statearr_11970_12034[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_11901 === 30) {
                                                                                            var state_11900__$1 = state_11900;
                                                                                            var statearr_11971_12035 = state_11900__$1;
                                                                                            statearr_11971_12035[2] = null;
                                                                                            statearr_11971_12035[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_11901 === 10) {
                                                                                              var inst_11784 = state_11900[13];
                                                                                              var inst_11782 = state_11900[15];
                                                                                              var inst_11790 = cljs.core._nth.call(null, inst_11782, inst_11784);
                                                                                              var inst_11791 = cljs.core.nth.call(null, inst_11790, 0, null);
                                                                                              var inst_11792 = cljs.core.nth.call(null, inst_11790, 1, null);
                                                                                              var state_11900__$1 = function() {
                                                                                                var statearr_11972 = state_11900;
                                                                                                statearr_11972[26] = inst_11791;
                                                                                                return statearr_11972;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_11792)) {
                                                                                                var statearr_11973_12036 = state_11900__$1;
                                                                                                statearr_11973_12036[1] = 13;
                                                                                              } else {
                                                                                                var statearr_11974_12037 = state_11900__$1;
                                                                                                statearr_11974_12037[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_11901 === 18) {
                                                                                                var inst_11825 = state_11900[2];
                                                                                                var state_11900__$1 = state_11900;
                                                                                                var statearr_11975_12038 = state_11900__$1;
                                                                                                statearr_11975_12038[2] = inst_11825;
                                                                                                statearr_11975_12038[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_11901 === 42) {
                                                                                                  var state_11900__$1 = state_11900;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11900__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_11901 === 37) {
                                                                                                    var inst_11868 = state_11900[23];
                                                                                                    var inst_11772 = state_11900[9];
                                                                                                    var inst_11859 = state_11900[25];
                                                                                                    var inst_11868__$1 = cljs.core.first.call(null, inst_11859);
                                                                                                    var inst_11869 = cljs.core.async.put_BANG_.call(null, inst_11868__$1, inst_11772, done);
                                                                                                    var state_11900__$1 = function() {
                                                                                                      var statearr_11976 = state_11900;
                                                                                                      statearr_11976[23] = inst_11868__$1;
                                                                                                      return statearr_11976;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_11869)) {
                                                                                                      var statearr_11977_12039 = state_11900__$1;
                                                                                                      statearr_11977_12039[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_11978_12040 = state_11900__$1;
                                                                                                      statearr_11978_12040[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_11901 === 8) {
                                                                                                      var inst_11784 = state_11900[13];
                                                                                                      var inst_11783 = state_11900[16];
                                                                                                      var inst_11786 = inst_11784 < inst_11783;
                                                                                                      var inst_11787 = inst_11786;
                                                                                                      var state_11900__$1 = state_11900;
                                                                                                      if (cljs.core.truth_(inst_11787)) {
                                                                                                        var statearr_11979_12041 = state_11900__$1;
                                                                                                        statearr_11979_12041[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_11980_12042 = state_11900__$1;
                                                                                                        statearr_11980_12042[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___11988, cs, m, dchan, dctr, done);
        return function(switch__7949__auto__, c__8014__auto___11988, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__7950__auto__ = null;
            var cljs$core$async$mult_$_state_machine__7950__auto____0 = function() {
              var statearr_11984 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11984[0] = cljs$core$async$mult_$_state_machine__7950__auto__;
              statearr_11984[1] = 1;
              return statearr_11984;
            };
            var cljs$core$async$mult_$_state_machine__7950__auto____1 = function(state_11900) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_11900);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e11985) {
                    if (e11985 instanceof Object) {
                      var ex__7953__auto__ = e11985;
                      var statearr_11986_12043 = state_11900;
                      statearr_11986_12043[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11900);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11985;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12044 = state_11900;
                  state_11900 = G__12044;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__7950__auto__ = function(state_11900) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__7950__auto____1.call(this, state_11900);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mult_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__7950__auto____0;
            cljs$core$async$mult_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__7950__auto____1;
            return cljs$core$async$mult_$_state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___11988, cs, m, dchan, dctr, done);
      }();
      var state__8016__auto__ = function() {
        var statearr_11987 = f__8015__auto__.call(null);
        statearr_11987[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___11988;
        return statearr_11987;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___11988, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function cljs$core$async$tap() {
  var args12045 = [];
  var len__5565__auto___12048 = arguments.length;
  var i__5566__auto___12049 = 0;
  while (true) {
    if (i__5566__auto___12049 < len__5565__auto___12048) {
      args12045.push(arguments[i__5566__auto___12049]);
      var G__12050 = i__5566__auto___12049 + 1;
      i__5566__auto___12049 = G__12050;
      continue;
    } else {
    }
    break;
  }
  var G__12047 = args12045.length;
  switch(G__12047) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12045.length)].join(""));;
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(mult, ch) {
  return cljs.core.async.tap.call(null, mult, ch, true);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(mult, ch, close_QMARK_) {
  cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
  return ch;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = {};
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$admix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m, ch);
    } else {
      var m__5163__auto____$1 = cljs.core.async.admix_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
      }
    }
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m, ch);
    } else {
      var m__5163__auto____$1 = cljs.core.async.unmix_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
      }
    }
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m);
    } else {
      var m__5163__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
      }
    }
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (!(m == null) && !(m.cljs$core$async$Mix$toggle_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m, state_map);
    } else {
      var m__5163__auto____$1 = cljs.core.async.toggle_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m, state_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
      }
    }
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (!(m == null) && !(m.cljs$core$async$Mix$solo_mode_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__5162__auto__ = m == null ? null : m;
    var m__5163__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, m, mode);
    } else {
      var m__5163__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, m, mode);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
      }
    }
  }
};
cljs.core.async.ioc_alts_BANG_ = function cljs$core$async$ioc_alts_BANG_() {
  var args__5572__auto__ = [];
  var len__5565__auto___12064 = arguments.length;
  var i__5566__auto___12065 = 0;
  while (true) {
    if (i__5566__auto___12065 < len__5565__auto___12064) {
      args__5572__auto__.push(arguments[i__5566__auto___12065]);
      var G__12066 = i__5566__auto___12065 + 1;
      i__5566__auto___12065 = G__12066;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 3 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(3), 0) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5573__auto__);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(state, cont_block, ports, p__12058) {
  var map__12059 = p__12058;
  var map__12059__$1 = (!(map__12059 == null) ? map__12059.cljs$lang$protocol_mask$partition0$ & 64 || map__12059.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12059) : map__12059;
  var opts = map__12059__$1;
  var statearr_12061_12067 = state;
  statearr_12061_12067[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
  var temp__4425__auto__ = cljs.core.async.do_alts.call(null, function(map__12059, map__12059__$1, opts) {
    return function(val) {
      var statearr_12062_12068 = state;
      statearr_12062_12068[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    };
  }(map__12059, map__12059__$1, opts), ports, opts);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var cb = temp__4425__auto__;
    var statearr_12063_12069 = state;
    statearr_12063_12069[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(seq12054) {
  var G__12055 = cljs.core.first.call(null, seq12054);
  var seq12054__$1 = cljs.core.next.call(null, seq12054);
  var G__12056 = cljs.core.first.call(null, seq12054__$1);
  var seq12054__$2 = cljs.core.next.call(null, seq12054__$1);
  var G__12057 = cljs.core.first.call(null, seq12054__$2);
  var seq12054__$3 = cljs.core.next.call(null, seq12054__$2);
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__12055, G__12056, G__12057, seq12054__$3);
};
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t12233 !== "undefined") {
    } else {
      cljs.core.async.t12233 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta12234) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta12234 = meta12234;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t12233.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_12235, meta12234__$1) {
          var self__ = this;
          var _12235__$1 = this;
          return new cljs.core.async.t12233(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta12234__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12233.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_12235) {
          var self__ = this;
          var _12235__$1 = this;
          return self__.meta12234;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12233.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t12233.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12233.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t12233.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12233.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12233.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12233.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12233.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12233.getBasis = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function() {
          return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "change", "change", 477485025, null), cljs.core.with_meta(new cljs.core.Symbol(null, "mix", "mix", 2121373763, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Symbol(null, "out", "out", 729986010, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mix of one or more input channels which will\n  be put on the supplied out channel. Input sources can be added to\n  the mix with 'admix', and removed with 'unmix'. A mix supports\n  soloing, muting and pausing multiple inputs atomically using\n  'toggle', and can solo using either muting or pausing as determined\n  by 'solo-mode'.\n\n  Each channel can have zero or more boolean modes set via 'toggle':\n\n  :solo - when true, only this (ond other soloed) channel(s) will appear\n          in the mix output channel. :mute and :pause states of soloed\n          channels are ignored. If solo-mode is :mute, non-soloed\n          channels are muted, if :pause, non-soloed channels are\n          paused.\n\n  :mute - muted channels will have their contents consumed but not included in the mix\n  :pause - paused channels will not have their contents consumed (and thus also not included in the mix)\n"], 
          null)), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, 
          "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "meta12234", "meta12234", -1205112224, null)], null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12233.cljs$lang$type = true;
      cljs.core.async.t12233.cljs$lang$ctorStr = "cljs.core.async/t12233";
      cljs.core.async.t12233.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
          return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t12233");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t12233 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t12233(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta12234) {
          return new cljs.core.async.t12233(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta12234);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t12233(change, cljs$core$async$mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__8014__auto___12396 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___12396, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___12396, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_12333) {
            var state_val_12334 = state_12333[1];
            if (state_val_12334 === 7) {
              var inst_12251 = state_12333[2];
              var state_12333__$1 = state_12333;
              var statearr_12335_12397 = state_12333__$1;
              statearr_12335_12397[2] = inst_12251;
              statearr_12335_12397[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12334 === 20) {
                var inst_12263 = state_12333[7];
                var state_12333__$1 = state_12333;
                var statearr_12336_12398 = state_12333__$1;
                statearr_12336_12398[2] = inst_12263;
                statearr_12336_12398[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12334 === 27) {
                  var state_12333__$1 = state_12333;
                  var statearr_12337_12399 = state_12333__$1;
                  statearr_12337_12399[2] = null;
                  statearr_12337_12399[1] = 28;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12334 === 1) {
                    var inst_12239 = state_12333[8];
                    var inst_12239__$1 = calc_state.call(null);
                    var inst_12241 = inst_12239__$1 == null;
                    var inst_12242 = cljs.core.not.call(null, inst_12241);
                    var state_12333__$1 = function() {
                      var statearr_12338 = state_12333;
                      statearr_12338[8] = inst_12239__$1;
                      return statearr_12338;
                    }();
                    if (inst_12242) {
                      var statearr_12339_12400 = state_12333__$1;
                      statearr_12339_12400[1] = 2;
                    } else {
                      var statearr_12340_12401 = state_12333__$1;
                      statearr_12340_12401[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12334 === 24) {
                      var inst_12286 = state_12333[9];
                      var inst_12307 = state_12333[10];
                      var inst_12293 = state_12333[11];
                      var inst_12307__$1 = inst_12286.call(null, inst_12293);
                      var state_12333__$1 = function() {
                        var statearr_12341 = state_12333;
                        statearr_12341[10] = inst_12307__$1;
                        return statearr_12341;
                      }();
                      if (cljs.core.truth_(inst_12307__$1)) {
                        var statearr_12342_12402 = state_12333__$1;
                        statearr_12342_12402[1] = 29;
                      } else {
                        var statearr_12343_12403 = state_12333__$1;
                        statearr_12343_12403[1] = 30;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12334 === 4) {
                        var inst_12254 = state_12333[2];
                        var state_12333__$1 = state_12333;
                        if (cljs.core.truth_(inst_12254)) {
                          var statearr_12344_12404 = state_12333__$1;
                          statearr_12344_12404[1] = 8;
                        } else {
                          var statearr_12345_12405 = state_12333__$1;
                          statearr_12345_12405[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12334 === 15) {
                          var inst_12280 = state_12333[2];
                          var state_12333__$1 = state_12333;
                          if (cljs.core.truth_(inst_12280)) {
                            var statearr_12346_12406 = state_12333__$1;
                            statearr_12346_12406[1] = 19;
                          } else {
                            var statearr_12347_12407 = state_12333__$1;
                            statearr_12347_12407[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12334 === 21) {
                            var inst_12285 = state_12333[12];
                            var inst_12285__$1 = state_12333[2];
                            var inst_12286 = cljs.core.get.call(null, inst_12285__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                            var inst_12287 = cljs.core.get.call(null, inst_12285__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                            var inst_12288 = cljs.core.get.call(null, inst_12285__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                            var state_12333__$1 = function() {
                              var statearr_12348 = state_12333;
                              statearr_12348[9] = inst_12286;
                              statearr_12348[12] = inst_12285__$1;
                              statearr_12348[13] = inst_12287;
                              return statearr_12348;
                            }();
                            return cljs.core.async.ioc_alts_BANG_.call(null, state_12333__$1, 22, inst_12288);
                          } else {
                            if (state_val_12334 === 31) {
                              var inst_12315 = state_12333[2];
                              var state_12333__$1 = state_12333;
                              if (cljs.core.truth_(inst_12315)) {
                                var statearr_12349_12408 = state_12333__$1;
                                statearr_12349_12408[1] = 32;
                              } else {
                                var statearr_12350_12409 = state_12333__$1;
                                statearr_12350_12409[1] = 33;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12334 === 32) {
                                var inst_12292 = state_12333[14];
                                var state_12333__$1 = state_12333;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12333__$1, 35, out, inst_12292);
                              } else {
                                if (state_val_12334 === 33) {
                                  var inst_12285 = state_12333[12];
                                  var inst_12263 = inst_12285;
                                  var state_12333__$1 = function() {
                                    var statearr_12351 = state_12333;
                                    statearr_12351[7] = inst_12263;
                                    return statearr_12351;
                                  }();
                                  var statearr_12352_12410 = state_12333__$1;
                                  statearr_12352_12410[2] = null;
                                  statearr_12352_12410[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12334 === 13) {
                                    var inst_12263 = state_12333[7];
                                    var inst_12270 = inst_12263.cljs$lang$protocol_mask$partition0$;
                                    var inst_12271 = inst_12270 & 64;
                                    var inst_12272 = inst_12263.cljs$core$ISeq$;
                                    var inst_12273 = inst_12271 || inst_12272;
                                    var state_12333__$1 = state_12333;
                                    if (cljs.core.truth_(inst_12273)) {
                                      var statearr_12353_12411 = state_12333__$1;
                                      statearr_12353_12411[1] = 16;
                                    } else {
                                      var statearr_12354_12412 = state_12333__$1;
                                      statearr_12354_12412[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12334 === 22) {
                                      var inst_12292 = state_12333[14];
                                      var inst_12293 = state_12333[11];
                                      var inst_12291 = state_12333[2];
                                      var inst_12292__$1 = cljs.core.nth.call(null, inst_12291, 0, null);
                                      var inst_12293__$1 = cljs.core.nth.call(null, inst_12291, 1, null);
                                      var inst_12294 = inst_12292__$1 == null;
                                      var inst_12295 = cljs.core._EQ_.call(null, inst_12293__$1, change);
                                      var inst_12296 = inst_12294 || inst_12295;
                                      var state_12333__$1 = function() {
                                        var statearr_12355 = state_12333;
                                        statearr_12355[14] = inst_12292__$1;
                                        statearr_12355[11] = inst_12293__$1;
                                        return statearr_12355;
                                      }();
                                      if (cljs.core.truth_(inst_12296)) {
                                        var statearr_12356_12413 = state_12333__$1;
                                        statearr_12356_12413[1] = 23;
                                      } else {
                                        var statearr_12357_12414 = state_12333__$1;
                                        statearr_12357_12414[1] = 24;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12334 === 36) {
                                        var inst_12285 = state_12333[12];
                                        var inst_12263 = inst_12285;
                                        var state_12333__$1 = function() {
                                          var statearr_12358 = state_12333;
                                          statearr_12358[7] = inst_12263;
                                          return statearr_12358;
                                        }();
                                        var statearr_12359_12415 = state_12333__$1;
                                        statearr_12359_12415[2] = null;
                                        statearr_12359_12415[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12334 === 29) {
                                          var inst_12307 = state_12333[10];
                                          var state_12333__$1 = state_12333;
                                          var statearr_12360_12416 = state_12333__$1;
                                          statearr_12360_12416[2] = inst_12307;
                                          statearr_12360_12416[1] = 31;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12334 === 6) {
                                            var state_12333__$1 = state_12333;
                                            var statearr_12361_12417 = state_12333__$1;
                                            statearr_12361_12417[2] = false;
                                            statearr_12361_12417[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_12334 === 28) {
                                              var inst_12303 = state_12333[2];
                                              var inst_12304 = calc_state.call(null);
                                              var inst_12263 = inst_12304;
                                              var state_12333__$1 = function() {
                                                var statearr_12362 = state_12333;
                                                statearr_12362[7] = inst_12263;
                                                statearr_12362[15] = inst_12303;
                                                return statearr_12362;
                                              }();
                                              var statearr_12363_12418 = state_12333__$1;
                                              statearr_12363_12418[2] = null;
                                              statearr_12363_12418[1] = 11;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_12334 === 25) {
                                                var inst_12329 = state_12333[2];
                                                var state_12333__$1 = state_12333;
                                                var statearr_12364_12419 = state_12333__$1;
                                                statearr_12364_12419[2] = inst_12329;
                                                statearr_12364_12419[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_12334 === 34) {
                                                  var inst_12327 = state_12333[2];
                                                  var state_12333__$1 = state_12333;
                                                  var statearr_12365_12420 = state_12333__$1;
                                                  statearr_12365_12420[2] = inst_12327;
                                                  statearr_12365_12420[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_12334 === 17) {
                                                    var state_12333__$1 = state_12333;
                                                    var statearr_12366_12421 = state_12333__$1;
                                                    statearr_12366_12421[2] = false;
                                                    statearr_12366_12421[1] = 18;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_12334 === 3) {
                                                      var state_12333__$1 = state_12333;
                                                      var statearr_12367_12422 = state_12333__$1;
                                                      statearr_12367_12422[2] = false;
                                                      statearr_12367_12422[1] = 4;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_12334 === 12) {
                                                        var inst_12331 = state_12333[2];
                                                        var state_12333__$1 = state_12333;
                                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12333__$1, inst_12331);
                                                      } else {
                                                        if (state_val_12334 === 2) {
                                                          var inst_12239 = state_12333[8];
                                                          var inst_12244 = inst_12239.cljs$lang$protocol_mask$partition0$;
                                                          var inst_12245 = inst_12244 & 64;
                                                          var inst_12246 = inst_12239.cljs$core$ISeq$;
                                                          var inst_12247 = inst_12245 || inst_12246;
                                                          var state_12333__$1 = state_12333;
                                                          if (cljs.core.truth_(inst_12247)) {
                                                            var statearr_12368_12423 = state_12333__$1;
                                                            statearr_12368_12423[1] = 5;
                                                          } else {
                                                            var statearr_12369_12424 = state_12333__$1;
                                                            statearr_12369_12424[1] = 6;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_12334 === 23) {
                                                            var inst_12292 = state_12333[14];
                                                            var inst_12298 = inst_12292 == null;
                                                            var state_12333__$1 = state_12333;
                                                            if (cljs.core.truth_(inst_12298)) {
                                                              var statearr_12370_12425 = state_12333__$1;
                                                              statearr_12370_12425[1] = 26;
                                                            } else {
                                                              var statearr_12371_12426 = state_12333__$1;
                                                              statearr_12371_12426[1] = 27;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_12334 === 35) {
                                                              var inst_12318 = state_12333[2];
                                                              var state_12333__$1 = state_12333;
                                                              if (cljs.core.truth_(inst_12318)) {
                                                                var statearr_12372_12427 = state_12333__$1;
                                                                statearr_12372_12427[1] = 36;
                                                              } else {
                                                                var statearr_12373_12428 = state_12333__$1;
                                                                statearr_12373_12428[1] = 37;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_12334 === 19) {
                                                                var inst_12263 = state_12333[7];
                                                                var inst_12282 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12263);
                                                                var state_12333__$1 = state_12333;
                                                                var statearr_12374_12429 = state_12333__$1;
                                                                statearr_12374_12429[2] = inst_12282;
                                                                statearr_12374_12429[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_12334 === 11) {
                                                                  var inst_12263 = state_12333[7];
                                                                  var inst_12267 = inst_12263 == null;
                                                                  var inst_12268 = cljs.core.not.call(null, inst_12267);
                                                                  var state_12333__$1 = state_12333;
                                                                  if (inst_12268) {
                                                                    var statearr_12375_12430 = state_12333__$1;
                                                                    statearr_12375_12430[1] = 13;
                                                                  } else {
                                                                    var statearr_12376_12431 = state_12333__$1;
                                                                    statearr_12376_12431[1] = 14;
                                                                  }
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_12334 === 9) {
                                                                    var inst_12239 = state_12333[8];
                                                                    var state_12333__$1 = state_12333;
                                                                    var statearr_12377_12432 = state_12333__$1;
                                                                    statearr_12377_12432[2] = inst_12239;
                                                                    statearr_12377_12432[1] = 10;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_12334 === 5) {
                                                                      var state_12333__$1 = state_12333;
                                                                      var statearr_12378_12433 = state_12333__$1;
                                                                      statearr_12378_12433[2] = true;
                                                                      statearr_12378_12433[1] = 7;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_12334 === 14) {
                                                                        var state_12333__$1 = state_12333;
                                                                        var statearr_12379_12434 = state_12333__$1;
                                                                        statearr_12379_12434[2] = false;
                                                                        statearr_12379_12434[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_12334 === 26) {
                                                                          var inst_12293 = state_12333[11];
                                                                          var inst_12300 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_12293);
                                                                          var state_12333__$1 = state_12333;
                                                                          var statearr_12380_12435 = state_12333__$1;
                                                                          statearr_12380_12435[2] = inst_12300;
                                                                          statearr_12380_12435[1] = 28;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_12334 === 16) {
                                                                            var state_12333__$1 = state_12333;
                                                                            var statearr_12381_12436 = state_12333__$1;
                                                                            statearr_12381_12436[2] = true;
                                                                            statearr_12381_12436[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_12334 === 38) {
                                                                              var inst_12323 = state_12333[2];
                                                                              var state_12333__$1 = state_12333;
                                                                              var statearr_12382_12437 = state_12333__$1;
                                                                              statearr_12382_12437[2] = inst_12323;
                                                                              statearr_12382_12437[1] = 34;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_12334 === 30) {
                                                                                var inst_12286 = state_12333[9];
                                                                                var inst_12293 = state_12333[11];
                                                                                var inst_12287 = state_12333[13];
                                                                                var inst_12310 = cljs.core.empty_QMARK_.call(null, inst_12286);
                                                                                var inst_12311 = inst_12287.call(null, inst_12293);
                                                                                var inst_12312 = cljs.core.not.call(null, inst_12311);
                                                                                var inst_12313 = inst_12310 && inst_12312;
                                                                                var state_12333__$1 = state_12333;
                                                                                var statearr_12383_12438 = state_12333__$1;
                                                                                statearr_12383_12438[2] = inst_12313;
                                                                                statearr_12383_12438[1] = 31;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_12334 === 10) {
                                                                                  var inst_12239 = state_12333[8];
                                                                                  var inst_12259 = state_12333[2];
                                                                                  var inst_12260 = cljs.core.get.call(null, inst_12259, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                                                  var inst_12261 = cljs.core.get.call(null, inst_12259, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                                                  var inst_12262 = cljs.core.get.call(null, inst_12259, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                                                  var inst_12263 = inst_12239;
                                                                                  var state_12333__$1 = function() {
                                                                                    var statearr_12384 = state_12333;
                                                                                    statearr_12384[16] = inst_12262;
                                                                                    statearr_12384[17] = inst_12261;
                                                                                    statearr_12384[7] = inst_12263;
                                                                                    statearr_12384[18] = inst_12260;
                                                                                    return statearr_12384;
                                                                                  }();
                                                                                  var statearr_12385_12439 = state_12333__$1;
                                                                                  statearr_12385_12439[2] = null;
                                                                                  statearr_12385_12439[1] = 11;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_12334 === 18) {
                                                                                    var inst_12277 = state_12333[2];
                                                                                    var state_12333__$1 = state_12333;
                                                                                    var statearr_12386_12440 = state_12333__$1;
                                                                                    statearr_12386_12440[2] = inst_12277;
                                                                                    statearr_12386_12440[1] = 15;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_12334 === 37) {
                                                                                      var state_12333__$1 = state_12333;
                                                                                      var statearr_12387_12441 = state_12333__$1;
                                                                                      statearr_12387_12441[2] = null;
                                                                                      statearr_12387_12441[1] = 38;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_12334 === 8) {
                                                                                        var inst_12239 = state_12333[8];
                                                                                        var inst_12256 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12239);
                                                                                        var state_12333__$1 = state_12333;
                                                                                        var statearr_12388_12442 = state_12333__$1;
                                                                                        statearr_12388_12442[2] = inst_12256;
                                                                                        statearr_12388_12442[1] = 10;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___12396, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__7949__auto__, c__8014__auto___12396, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__7950__auto__ = null;
            var cljs$core$async$mix_$_state_machine__7950__auto____0 = function() {
              var statearr_12392 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12392[0] = cljs$core$async$mix_$_state_machine__7950__auto__;
              statearr_12392[1] = 1;
              return statearr_12392;
            };
            var cljs$core$async$mix_$_state_machine__7950__auto____1 = function(state_12333) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_12333);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e12393) {
                    if (e12393 instanceof Object) {
                      var ex__7953__auto__ = e12393;
                      var statearr_12394_12443 = state_12333;
                      statearr_12394_12443[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12333);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12393;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12444 = state_12333;
                  state_12333 = G__12444;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__7950__auto__ = function(state_12333) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__7950__auto____1.call(this, state_12333);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mix_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__7950__auto____0;
            cljs$core$async$mix_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__7950__auto____1;
            return cljs$core$async$mix_$_state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___12396, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__8016__auto__ = function() {
        var statearr_12395 = f__8015__auto__.call(null);
        statearr_12395[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___12396;
        return statearr_12395;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___12396, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = {};
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (!(p == null) && !(p.cljs$core$async$Pub$sub_STAR_$arity$4 == null)) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__5162__auto__ = p == null ? null : p;
    var m__5163__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, p, v, ch, close_QMARK_);
    } else {
      var m__5163__auto____$1 = cljs.core.async.sub_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, p, v, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
      }
    }
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_STAR_$arity$3 == null)) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__5162__auto__ = p == null ? null : p;
    var m__5163__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, p, v, ch);
    } else {
      var m__5163__auto____$1 = cljs.core.async.unsub_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, p, v, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_ = function cljs$core$async$unsub_all_STAR_() {
  var args12447 = [];
  var len__5565__auto___12450 = arguments.length;
  var i__5566__auto___12451 = 0;
  while (true) {
    if (i__5566__auto___12451 < len__5565__auto___12450) {
      args12447.push(arguments[i__5566__auto___12451]);
      var G__12452 = i__5566__auto___12451 + 1;
      i__5566__auto___12451 = G__12452;
      continue;
    } else {
    }
    break;
  }
  var G__12449 = args12447.length;
  switch(G__12449) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12447.length)].join(""));;
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(p) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$1 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
  } else {
    var x__5162__auto__ = p == null ? null : p;
    var m__5163__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, p);
    } else {
      var m__5163__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(p, v) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$2 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
  } else {
    var x__5162__auto__ = p == null ? null : p;
    var m__5163__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, p, v);
    } else {
      var m__5163__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, p, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function cljs$core$async$pub() {
  var args12455 = [];
  var len__5565__auto___12580 = arguments.length;
  var i__5566__auto___12581 = 0;
  while (true) {
    if (i__5566__auto___12581 < len__5565__auto___12580) {
      args12455.push(arguments[i__5566__auto___12581]);
      var G__12582 = i__5566__auto___12581 + 1;
      i__5566__auto___12581 = G__12582;
      continue;
    } else {
    }
    break;
  }
  var G__12457 = args12455.length;
  switch(G__12457) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12455.length)].join(""));;
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(ch, topic_fn) {
  return cljs.core.async.pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(ch, topic_fn, buf_fn) {
  var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ensure_mult = function(mults) {
    return function(topic) {
      var or__4526__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__4526__auto__, mults) {
          return function(p1__12454_SHARP_) {
            if (cljs.core.truth_(p1__12454_SHARP_.call(null, topic))) {
              return p1__12454_SHARP_;
            } else {
              return cljs.core.assoc.call(null, p1__12454_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
            }
          };
        }(or__4526__auto__, mults)), topic);
      }
    };
  }(mults);
  var p = function() {
    if (typeof cljs.core.async.t12458 !== "undefined") {
    } else {
      cljs.core.async.t12458 = function(ch, topic_fn, buf_fn, mults, ensure_mult, meta12459) {
        this.ch = ch;
        this.topic_fn = topic_fn;
        this.buf_fn = buf_fn;
        this.mults = mults;
        this.ensure_mult = ensure_mult;
        this.meta12459 = meta12459;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t12458.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
        return function(_12460, meta12459__$1) {
          var self__ = this;
          var _12460__$1 = this;
          return new cljs.core.async.t12458(self__.ch, self__.topic_fn, self__.buf_fn, self__.mults, self__.ensure_mult, meta12459__$1);
        };
      }(mults, ensure_mult);
      cljs.core.async.t12458.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
        return function(_12460) {
          var self__ = this;
          var _12460__$1 = this;
          return self__.meta12459;
        };
      }(mults, ensure_mult);
      cljs.core.async.t12458.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t12458.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(mults, ensure_mult);
      cljs.core.async.t12458.prototype.cljs$core$async$Pub$ = true;
      cljs.core.async.t12458.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1, close_QMARK_) {
          var self__ = this;
          var p__$1 = this;
          var m = self__.ensure_mult.call(null, topic);
          return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
        };
      }(mults, ensure_mult);
      cljs.core.async.t12458.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1) {
          var self__ = this;
          var p__$1 = this;
          var temp__4425__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
          if (cljs.core.truth_(temp__4425__auto__)) {
            var m = temp__4425__auto__;
            return cljs.core.async.untap.call(null, m, ch__$1);
          } else {
            return null;
          }
        };
      }(mults, ensure_mult);
      cljs.core.async.t12458.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
        };
      }(mults, ensure_mult);
      cljs.core.async.t12458.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
        return function(_, topic) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
        };
      }(mults, ensure_mult);
      cljs.core.async.t12458.getBasis = function(mults, ensure_mult) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta12459", "meta12459", -2141144617, 
          null)], null);
        };
      }(mults, ensure_mult);
      cljs.core.async.t12458.cljs$lang$type = true;
      cljs.core.async.t12458.cljs$lang$ctorStr = "cljs.core.async/t12458";
      cljs.core.async.t12458.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
        return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
          return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t12458");
        };
      }(mults, ensure_mult);
      cljs.core.async.__GT_t12458 = function(mults, ensure_mult) {
        return function cljs$core$async$__GT_t12458(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta12459) {
          return new cljs.core.async.t12458(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta12459);
        };
      }(mults, ensure_mult);
    }
    return new cljs.core.async.t12458(ch, topic_fn, buf_fn, mults, ensure_mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__8014__auto___12584 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___12584, mults, ensure_mult, p) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___12584, mults, ensure_mult, p) {
          return function(state_12532) {
            var state_val_12533 = state_12532[1];
            if (state_val_12533 === 7) {
              var inst_12528 = state_12532[2];
              var state_12532__$1 = state_12532;
              var statearr_12534_12585 = state_12532__$1;
              statearr_12534_12585[2] = inst_12528;
              statearr_12534_12585[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12533 === 20) {
                var state_12532__$1 = state_12532;
                var statearr_12535_12586 = state_12532__$1;
                statearr_12535_12586[2] = null;
                statearr_12535_12586[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12533 === 1) {
                  var state_12532__$1 = state_12532;
                  var statearr_12536_12587 = state_12532__$1;
                  statearr_12536_12587[2] = null;
                  statearr_12536_12587[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12533 === 24) {
                    var inst_12511 = state_12532[7];
                    var inst_12520 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_12511);
                    var state_12532__$1 = state_12532;
                    var statearr_12537_12588 = state_12532__$1;
                    statearr_12537_12588[2] = inst_12520;
                    statearr_12537_12588[1] = 25;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12533 === 4) {
                      var inst_12463 = state_12532[8];
                      var inst_12463__$1 = state_12532[2];
                      var inst_12464 = inst_12463__$1 == null;
                      var state_12532__$1 = function() {
                        var statearr_12538 = state_12532;
                        statearr_12538[8] = inst_12463__$1;
                        return statearr_12538;
                      }();
                      if (cljs.core.truth_(inst_12464)) {
                        var statearr_12539_12589 = state_12532__$1;
                        statearr_12539_12589[1] = 5;
                      } else {
                        var statearr_12540_12590 = state_12532__$1;
                        statearr_12540_12590[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12533 === 15) {
                        var inst_12505 = state_12532[2];
                        var state_12532__$1 = state_12532;
                        var statearr_12541_12591 = state_12532__$1;
                        statearr_12541_12591[2] = inst_12505;
                        statearr_12541_12591[1] = 12;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12533 === 21) {
                          var inst_12525 = state_12532[2];
                          var state_12532__$1 = function() {
                            var statearr_12542 = state_12532;
                            statearr_12542[9] = inst_12525;
                            return statearr_12542;
                          }();
                          var statearr_12543_12592 = state_12532__$1;
                          statearr_12543_12592[2] = null;
                          statearr_12543_12592[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12533 === 13) {
                            var inst_12487 = state_12532[10];
                            var inst_12489 = cljs.core.chunked_seq_QMARK_.call(null, inst_12487);
                            var state_12532__$1 = state_12532;
                            if (inst_12489) {
                              var statearr_12544_12593 = state_12532__$1;
                              statearr_12544_12593[1] = 16;
                            } else {
                              var statearr_12545_12594 = state_12532__$1;
                              statearr_12545_12594[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12533 === 22) {
                              var inst_12517 = state_12532[2];
                              var state_12532__$1 = state_12532;
                              if (cljs.core.truth_(inst_12517)) {
                                var statearr_12546_12595 = state_12532__$1;
                                statearr_12546_12595[1] = 23;
                              } else {
                                var statearr_12547_12596 = state_12532__$1;
                                statearr_12547_12596[1] = 24;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12533 === 6) {
                                var inst_12511 = state_12532[7];
                                var inst_12513 = state_12532[11];
                                var inst_12463 = state_12532[8];
                                var inst_12511__$1 = topic_fn.call(null, inst_12463);
                                var inst_12512 = cljs.core.deref.call(null, mults);
                                var inst_12513__$1 = cljs.core.get.call(null, inst_12512, inst_12511__$1);
                                var state_12532__$1 = function() {
                                  var statearr_12548 = state_12532;
                                  statearr_12548[7] = inst_12511__$1;
                                  statearr_12548[11] = inst_12513__$1;
                                  return statearr_12548;
                                }();
                                if (cljs.core.truth_(inst_12513__$1)) {
                                  var statearr_12549_12597 = state_12532__$1;
                                  statearr_12549_12597[1] = 19;
                                } else {
                                  var statearr_12550_12598 = state_12532__$1;
                                  statearr_12550_12598[1] = 20;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12533 === 25) {
                                  var inst_12522 = state_12532[2];
                                  var state_12532__$1 = state_12532;
                                  var statearr_12551_12599 = state_12532__$1;
                                  statearr_12551_12599[2] = inst_12522;
                                  statearr_12551_12599[1] = 21;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12533 === 17) {
                                    var inst_12487 = state_12532[10];
                                    var inst_12496 = cljs.core.first.call(null, inst_12487);
                                    var inst_12497 = cljs.core.async.muxch_STAR_.call(null, inst_12496);
                                    var inst_12498 = cljs.core.async.close_BANG_.call(null, inst_12497);
                                    var inst_12499 = cljs.core.next.call(null, inst_12487);
                                    var inst_12473 = inst_12499;
                                    var inst_12474 = null;
                                    var inst_12475 = 0;
                                    var inst_12476 = 0;
                                    var state_12532__$1 = function() {
                                      var statearr_12552 = state_12532;
                                      statearr_12552[12] = inst_12475;
                                      statearr_12552[13] = inst_12474;
                                      statearr_12552[14] = inst_12473;
                                      statearr_12552[15] = inst_12476;
                                      statearr_12552[16] = inst_12498;
                                      return statearr_12552;
                                    }();
                                    var statearr_12553_12600 = state_12532__$1;
                                    statearr_12553_12600[2] = null;
                                    statearr_12553_12600[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12533 === 3) {
                                      var inst_12530 = state_12532[2];
                                      var state_12532__$1 = state_12532;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12532__$1, inst_12530);
                                    } else {
                                      if (state_val_12533 === 12) {
                                        var inst_12507 = state_12532[2];
                                        var state_12532__$1 = state_12532;
                                        var statearr_12554_12601 = state_12532__$1;
                                        statearr_12554_12601[2] = inst_12507;
                                        statearr_12554_12601[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12533 === 2) {
                                          var state_12532__$1 = state_12532;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12532__$1, 4, ch);
                                        } else {
                                          if (state_val_12533 === 23) {
                                            var state_12532__$1 = state_12532;
                                            var statearr_12555_12602 = state_12532__$1;
                                            statearr_12555_12602[2] = null;
                                            statearr_12555_12602[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_12533 === 19) {
                                              var inst_12513 = state_12532[11];
                                              var inst_12463 = state_12532[8];
                                              var inst_12515 = cljs.core.async.muxch_STAR_.call(null, inst_12513);
                                              var state_12532__$1 = state_12532;
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12532__$1, 22, inst_12515, inst_12463);
                                            } else {
                                              if (state_val_12533 === 11) {
                                                var inst_12487 = state_12532[10];
                                                var inst_12473 = state_12532[14];
                                                var inst_12487__$1 = cljs.core.seq.call(null, inst_12473);
                                                var state_12532__$1 = function() {
                                                  var statearr_12556 = state_12532;
                                                  statearr_12556[10] = inst_12487__$1;
                                                  return statearr_12556;
                                                }();
                                                if (inst_12487__$1) {
                                                  var statearr_12557_12603 = state_12532__$1;
                                                  statearr_12557_12603[1] = 13;
                                                } else {
                                                  var statearr_12558_12604 = state_12532__$1;
                                                  statearr_12558_12604[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_12533 === 9) {
                                                  var inst_12509 = state_12532[2];
                                                  var state_12532__$1 = state_12532;
                                                  var statearr_12559_12605 = state_12532__$1;
                                                  statearr_12559_12605[2] = inst_12509;
                                                  statearr_12559_12605[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_12533 === 5) {
                                                    var inst_12470 = cljs.core.deref.call(null, mults);
                                                    var inst_12471 = cljs.core.vals.call(null, inst_12470);
                                                    var inst_12472 = cljs.core.seq.call(null, inst_12471);
                                                    var inst_12473 = inst_12472;
                                                    var inst_12474 = null;
                                                    var inst_12475 = 0;
                                                    var inst_12476 = 0;
                                                    var state_12532__$1 = function() {
                                                      var statearr_12560 = state_12532;
                                                      statearr_12560[12] = inst_12475;
                                                      statearr_12560[13] = inst_12474;
                                                      statearr_12560[14] = inst_12473;
                                                      statearr_12560[15] = inst_12476;
                                                      return statearr_12560;
                                                    }();
                                                    var statearr_12561_12606 = state_12532__$1;
                                                    statearr_12561_12606[2] = null;
                                                    statearr_12561_12606[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_12533 === 14) {
                                                      var state_12532__$1 = state_12532;
                                                      var statearr_12565_12607 = state_12532__$1;
                                                      statearr_12565_12607[2] = null;
                                                      statearr_12565_12607[1] = 15;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_12533 === 16) {
                                                        var inst_12487 = state_12532[10];
                                                        var inst_12491 = cljs.core.chunk_first.call(null, inst_12487);
                                                        var inst_12492 = cljs.core.chunk_rest.call(null, inst_12487);
                                                        var inst_12493 = cljs.core.count.call(null, inst_12491);
                                                        var inst_12473 = inst_12492;
                                                        var inst_12474 = inst_12491;
                                                        var inst_12475 = inst_12493;
                                                        var inst_12476 = 0;
                                                        var state_12532__$1 = function() {
                                                          var statearr_12566 = state_12532;
                                                          statearr_12566[12] = inst_12475;
                                                          statearr_12566[13] = inst_12474;
                                                          statearr_12566[14] = inst_12473;
                                                          statearr_12566[15] = inst_12476;
                                                          return statearr_12566;
                                                        }();
                                                        var statearr_12567_12608 = state_12532__$1;
                                                        statearr_12567_12608[2] = null;
                                                        statearr_12567_12608[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_12533 === 10) {
                                                          var inst_12475 = state_12532[12];
                                                          var inst_12474 = state_12532[13];
                                                          var inst_12473 = state_12532[14];
                                                          var inst_12476 = state_12532[15];
                                                          var inst_12481 = cljs.core._nth.call(null, inst_12474, inst_12476);
                                                          var inst_12482 = cljs.core.async.muxch_STAR_.call(null, inst_12481);
                                                          var inst_12483 = cljs.core.async.close_BANG_.call(null, inst_12482);
                                                          var inst_12484 = inst_12476 + 1;
                                                          var tmp12562 = inst_12475;
                                                          var tmp12563 = inst_12474;
                                                          var tmp12564 = inst_12473;
                                                          var inst_12473__$1 = tmp12564;
                                                          var inst_12474__$1 = tmp12563;
                                                          var inst_12475__$1 = tmp12562;
                                                          var inst_12476__$1 = inst_12484;
                                                          var state_12532__$1 = function() {
                                                            var statearr_12568 = state_12532;
                                                            statearr_12568[12] = inst_12475__$1;
                                                            statearr_12568[13] = inst_12474__$1;
                                                            statearr_12568[14] = inst_12473__$1;
                                                            statearr_12568[15] = inst_12476__$1;
                                                            statearr_12568[17] = inst_12483;
                                                            return statearr_12568;
                                                          }();
                                                          var statearr_12569_12609 = state_12532__$1;
                                                          statearr_12569_12609[2] = null;
                                                          statearr_12569_12609[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_12533 === 18) {
                                                            var inst_12502 = state_12532[2];
                                                            var state_12532__$1 = state_12532;
                                                            var statearr_12570_12610 = state_12532__$1;
                                                            statearr_12570_12610[2] = inst_12502;
                                                            statearr_12570_12610[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_12533 === 8) {
                                                              var inst_12475 = state_12532[12];
                                                              var inst_12476 = state_12532[15];
                                                              var inst_12478 = inst_12476 < inst_12475;
                                                              var inst_12479 = inst_12478;
                                                              var state_12532__$1 = state_12532;
                                                              if (cljs.core.truth_(inst_12479)) {
                                                                var statearr_12571_12611 = state_12532__$1;
                                                                statearr_12571_12611[1] = 10;
                                                              } else {
                                                                var statearr_12572_12612 = state_12532__$1;
                                                                statearr_12572_12612[1] = 11;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___12584, mults, ensure_mult, p);
        return function(switch__7949__auto__, c__8014__auto___12584, mults, ensure_mult, p) {
          return function() {
            var cljs$core$async$state_machine__7950__auto__ = null;
            var cljs$core$async$state_machine__7950__auto____0 = function() {
              var statearr_12576 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12576[0] = cljs$core$async$state_machine__7950__auto__;
              statearr_12576[1] = 1;
              return statearr_12576;
            };
            var cljs$core$async$state_machine__7950__auto____1 = function(state_12532) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_12532);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e12577) {
                    if (e12577 instanceof Object) {
                      var ex__7953__auto__ = e12577;
                      var statearr_12578_12613 = state_12532;
                      statearr_12578_12613[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12532);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12577;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12614 = state_12532;
                  state_12532 = G__12614;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7950__auto__ = function(state_12532) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7950__auto____1.call(this, state_12532);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7950__auto____0;
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7950__auto____1;
            return cljs$core$async$state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___12584, mults, ensure_mult, p);
      }();
      var state__8016__auto__ = function() {
        var statearr_12579 = f__8015__auto__.call(null);
        statearr_12579[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___12584;
        return statearr_12579;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___12584, mults, ensure_mult, p));
  return p;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function cljs$core$async$sub() {
  var args12615 = [];
  var len__5565__auto___12618 = arguments.length;
  var i__5566__auto___12619 = 0;
  while (true) {
    if (i__5566__auto___12619 < len__5565__auto___12618) {
      args12615.push(arguments[i__5566__auto___12619]);
      var G__12620 = i__5566__auto___12619 + 1;
      i__5566__auto___12619 = G__12620;
      continue;
    } else {
    }
    break;
  }
  var G__12617 = args12615.length;
  switch(G__12617) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12615.length)].join(""));;
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(p, topic, ch) {
  return cljs.core.async.sub.call(null, p, topic, ch, true);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(p, topic, ch, close_QMARK_) {
  return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function cljs$core$async$unsub_all() {
  var args12622 = [];
  var len__5565__auto___12625 = arguments.length;
  var i__5566__auto___12626 = 0;
  while (true) {
    if (i__5566__auto___12626 < len__5565__auto___12625) {
      args12622.push(arguments[i__5566__auto___12626]);
      var G__12627 = i__5566__auto___12626 + 1;
      i__5566__auto___12626 = G__12627;
      continue;
    } else {
    }
    break;
  }
  var G__12624 = args12622.length;
  switch(G__12624) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12622.length)].join(""));;
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return cljs.core.async.unsub_all_STAR_.call(null, p);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(p, topic) {
  return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function cljs$core$async$map() {
  var args12629 = [];
  var len__5565__auto___12700 = arguments.length;
  var i__5566__auto___12701 = 0;
  while (true) {
    if (i__5566__auto___12701 < len__5565__auto___12700) {
      args12629.push(arguments[i__5566__auto___12701]);
      var G__12702 = i__5566__auto___12701 + 1;
      i__5566__auto___12701 = G__12702;
      continue;
    } else {
    }
    break;
  }
  var G__12631 = args12629.length;
  switch(G__12631) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12629.length)].join(""));;
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(f, chs) {
  return cljs.core.async.map.call(null, f, chs, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(f, chs, buf_or_n) {
  var chs__$1 = cljs.core.vec.call(null, chs);
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var cnt = cljs.core.count.call(null, chs__$1);
  var rets = cljs.core.object_array.call(null, cnt);
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
    return function(i) {
      return function(chs__$1, out, cnt, rets, dchan, dctr) {
        return function(ret) {
          rets[i] = ret;
          if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
            return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
          } else {
            return null;
          }
        };
      }(chs__$1, out, cnt, rets, dchan, dctr);
    };
  }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
  var c__8014__auto___12704 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___12704, chs__$1, out, cnt, rets, dchan, dctr, done) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___12704, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function(state_12670) {
            var state_val_12671 = state_12670[1];
            if (state_val_12671 === 7) {
              var state_12670__$1 = state_12670;
              var statearr_12672_12705 = state_12670__$1;
              statearr_12672_12705[2] = null;
              statearr_12672_12705[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12671 === 1) {
                var state_12670__$1 = state_12670;
                var statearr_12673_12706 = state_12670__$1;
                statearr_12673_12706[2] = null;
                statearr_12673_12706[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12671 === 4) {
                  var inst_12634 = state_12670[7];
                  var inst_12636 = inst_12634 < cnt;
                  var state_12670__$1 = state_12670;
                  if (cljs.core.truth_(inst_12636)) {
                    var statearr_12674_12707 = state_12670__$1;
                    statearr_12674_12707[1] = 6;
                  } else {
                    var statearr_12675_12708 = state_12670__$1;
                    statearr_12675_12708[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12671 === 15) {
                    var inst_12666 = state_12670[2];
                    var state_12670__$1 = state_12670;
                    var statearr_12676_12709 = state_12670__$1;
                    statearr_12676_12709[2] = inst_12666;
                    statearr_12676_12709[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12671 === 13) {
                      var inst_12659 = cljs.core.async.close_BANG_.call(null, out);
                      var state_12670__$1 = state_12670;
                      var statearr_12677_12710 = state_12670__$1;
                      statearr_12677_12710[2] = inst_12659;
                      statearr_12677_12710[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12671 === 6) {
                        var state_12670__$1 = state_12670;
                        var statearr_12678_12711 = state_12670__$1;
                        statearr_12678_12711[2] = null;
                        statearr_12678_12711[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12671 === 3) {
                          var inst_12668 = state_12670[2];
                          var state_12670__$1 = state_12670;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12670__$1, inst_12668);
                        } else {
                          if (state_val_12671 === 12) {
                            var inst_12656 = state_12670[8];
                            var inst_12656__$1 = state_12670[2];
                            var inst_12657 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_12656__$1);
                            var state_12670__$1 = function() {
                              var statearr_12679 = state_12670;
                              statearr_12679[8] = inst_12656__$1;
                              return statearr_12679;
                            }();
                            if (cljs.core.truth_(inst_12657)) {
                              var statearr_12680_12712 = state_12670__$1;
                              statearr_12680_12712[1] = 13;
                            } else {
                              var statearr_12681_12713 = state_12670__$1;
                              statearr_12681_12713[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12671 === 2) {
                              var inst_12633 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                              var inst_12634 = 0;
                              var state_12670__$1 = function() {
                                var statearr_12682 = state_12670;
                                statearr_12682[9] = inst_12633;
                                statearr_12682[7] = inst_12634;
                                return statearr_12682;
                              }();
                              var statearr_12683_12714 = state_12670__$1;
                              statearr_12683_12714[2] = null;
                              statearr_12683_12714[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12671 === 11) {
                                var inst_12634 = state_12670[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12670, 10, Object, null, 9);
                                var inst_12643 = chs__$1.call(null, inst_12634);
                                var inst_12644 = done.call(null, inst_12634);
                                var inst_12645 = cljs.core.async.take_BANG_.call(null, inst_12643, inst_12644);
                                var state_12670__$1 = state_12670;
                                var statearr_12684_12715 = state_12670__$1;
                                statearr_12684_12715[2] = inst_12645;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12670__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12671 === 9) {
                                  var inst_12634 = state_12670[7];
                                  var inst_12647 = state_12670[2];
                                  var inst_12648 = inst_12634 + 1;
                                  var inst_12634__$1 = inst_12648;
                                  var state_12670__$1 = function() {
                                    var statearr_12685 = state_12670;
                                    statearr_12685[7] = inst_12634__$1;
                                    statearr_12685[10] = inst_12647;
                                    return statearr_12685;
                                  }();
                                  var statearr_12686_12716 = state_12670__$1;
                                  statearr_12686_12716[2] = null;
                                  statearr_12686_12716[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12671 === 5) {
                                    var inst_12654 = state_12670[2];
                                    var state_12670__$1 = function() {
                                      var statearr_12687 = state_12670;
                                      statearr_12687[11] = inst_12654;
                                      return statearr_12687;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12670__$1, 12, dchan);
                                  } else {
                                    if (state_val_12671 === 14) {
                                      var inst_12656 = state_12670[8];
                                      var inst_12661 = cljs.core.apply.call(null, f, inst_12656);
                                      var state_12670__$1 = state_12670;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12670__$1, 16, out, inst_12661);
                                    } else {
                                      if (state_val_12671 === 16) {
                                        var inst_12663 = state_12670[2];
                                        var state_12670__$1 = function() {
                                          var statearr_12688 = state_12670;
                                          statearr_12688[12] = inst_12663;
                                          return statearr_12688;
                                        }();
                                        var statearr_12689_12717 = state_12670__$1;
                                        statearr_12689_12717[2] = null;
                                        statearr_12689_12717[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12671 === 10) {
                                          var inst_12638 = state_12670[2];
                                          var inst_12639 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var state_12670__$1 = function() {
                                            var statearr_12690 = state_12670;
                                            statearr_12690[13] = inst_12638;
                                            return statearr_12690;
                                          }();
                                          var statearr_12691_12718 = state_12670__$1;
                                          statearr_12691_12718[2] = inst_12639;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12670__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12671 === 8) {
                                            var inst_12652 = state_12670[2];
                                            var state_12670__$1 = state_12670;
                                            var statearr_12692_12719 = state_12670__$1;
                                            statearr_12692_12719[2] = inst_12652;
                                            statearr_12692_12719[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___12704, chs__$1, out, cnt, rets, dchan, dctr, done);
        return function(switch__7949__auto__, c__8014__auto___12704, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function() {
            var cljs$core$async$state_machine__7950__auto__ = null;
            var cljs$core$async$state_machine__7950__auto____0 = function() {
              var statearr_12696 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12696[0] = cljs$core$async$state_machine__7950__auto__;
              statearr_12696[1] = 1;
              return statearr_12696;
            };
            var cljs$core$async$state_machine__7950__auto____1 = function(state_12670) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_12670);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e12697) {
                    if (e12697 instanceof Object) {
                      var ex__7953__auto__ = e12697;
                      var statearr_12698_12720 = state_12670;
                      statearr_12698_12720[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12670);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12697;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12721 = state_12670;
                  state_12670 = G__12721;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7950__auto__ = function(state_12670) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7950__auto____1.call(this, state_12670);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7950__auto____0;
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7950__auto____1;
            return cljs$core$async$state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___12704, chs__$1, out, cnt, rets, dchan, dctr, done);
      }();
      var state__8016__auto__ = function() {
        var statearr_12699 = f__8015__auto__.call(null);
        statearr_12699[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___12704;
        return statearr_12699;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___12704, chs__$1, out, cnt, rets, dchan, dctr, done));
  return out;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function cljs$core$async$merge() {
  var args12723 = [];
  var len__5565__auto___12779 = arguments.length;
  var i__5566__auto___12780 = 0;
  while (true) {
    if (i__5566__auto___12780 < len__5565__auto___12779) {
      args12723.push(arguments[i__5566__auto___12780]);
      var G__12781 = i__5566__auto___12780 + 1;
      i__5566__auto___12780 = G__12781;
      continue;
    } else {
    }
    break;
  }
  var G__12725 = args12723.length;
  switch(G__12725) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12723.length)].join(""));;
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(chs) {
  return cljs.core.async.merge.call(null, chs, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(chs, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__8014__auto___12783 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___12783, out) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___12783, out) {
          return function(state_12755) {
            var state_val_12756 = state_12755[1];
            if (state_val_12756 === 7) {
              var inst_12735 = state_12755[7];
              var inst_12734 = state_12755[8];
              var inst_12734__$1 = state_12755[2];
              var inst_12735__$1 = cljs.core.nth.call(null, inst_12734__$1, 0, null);
              var inst_12736 = cljs.core.nth.call(null, inst_12734__$1, 1, null);
              var inst_12737 = inst_12735__$1 == null;
              var state_12755__$1 = function() {
                var statearr_12757 = state_12755;
                statearr_12757[7] = inst_12735__$1;
                statearr_12757[9] = inst_12736;
                statearr_12757[8] = inst_12734__$1;
                return statearr_12757;
              }();
              if (cljs.core.truth_(inst_12737)) {
                var statearr_12758_12784 = state_12755__$1;
                statearr_12758_12784[1] = 8;
              } else {
                var statearr_12759_12785 = state_12755__$1;
                statearr_12759_12785[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12756 === 1) {
                var inst_12726 = cljs.core.vec.call(null, chs);
                var inst_12727 = inst_12726;
                var state_12755__$1 = function() {
                  var statearr_12760 = state_12755;
                  statearr_12760[10] = inst_12727;
                  return statearr_12760;
                }();
                var statearr_12761_12786 = state_12755__$1;
                statearr_12761_12786[2] = null;
                statearr_12761_12786[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12756 === 4) {
                  var inst_12727 = state_12755[10];
                  var state_12755__$1 = state_12755;
                  return cljs.core.async.ioc_alts_BANG_.call(null, state_12755__$1, 7, inst_12727);
                } else {
                  if (state_val_12756 === 6) {
                    var inst_12751 = state_12755[2];
                    var state_12755__$1 = state_12755;
                    var statearr_12762_12787 = state_12755__$1;
                    statearr_12762_12787[2] = inst_12751;
                    statearr_12762_12787[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12756 === 3) {
                      var inst_12753 = state_12755[2];
                      var state_12755__$1 = state_12755;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12755__$1, inst_12753);
                    } else {
                      if (state_val_12756 === 2) {
                        var inst_12727 = state_12755[10];
                        var inst_12729 = cljs.core.count.call(null, inst_12727);
                        var inst_12730 = inst_12729 > 0;
                        var state_12755__$1 = state_12755;
                        if (cljs.core.truth_(inst_12730)) {
                          var statearr_12764_12788 = state_12755__$1;
                          statearr_12764_12788[1] = 4;
                        } else {
                          var statearr_12765_12789 = state_12755__$1;
                          statearr_12765_12789[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12756 === 11) {
                          var inst_12727 = state_12755[10];
                          var inst_12744 = state_12755[2];
                          var tmp12763 = inst_12727;
                          var inst_12727__$1 = tmp12763;
                          var state_12755__$1 = function() {
                            var statearr_12766 = state_12755;
                            statearr_12766[10] = inst_12727__$1;
                            statearr_12766[11] = inst_12744;
                            return statearr_12766;
                          }();
                          var statearr_12767_12790 = state_12755__$1;
                          statearr_12767_12790[2] = null;
                          statearr_12767_12790[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12756 === 9) {
                            var inst_12735 = state_12755[7];
                            var state_12755__$1 = state_12755;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12755__$1, 11, out, inst_12735);
                          } else {
                            if (state_val_12756 === 5) {
                              var inst_12749 = cljs.core.async.close_BANG_.call(null, out);
                              var state_12755__$1 = state_12755;
                              var statearr_12768_12791 = state_12755__$1;
                              statearr_12768_12791[2] = inst_12749;
                              statearr_12768_12791[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12756 === 10) {
                                var inst_12747 = state_12755[2];
                                var state_12755__$1 = state_12755;
                                var statearr_12769_12792 = state_12755__$1;
                                statearr_12769_12792[2] = inst_12747;
                                statearr_12769_12792[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12756 === 8) {
                                  var inst_12735 = state_12755[7];
                                  var inst_12736 = state_12755[9];
                                  var inst_12734 = state_12755[8];
                                  var inst_12727 = state_12755[10];
                                  var inst_12739 = function() {
                                    var cs = inst_12727;
                                    var vec__12732 = inst_12734;
                                    var v = inst_12735;
                                    var c = inst_12736;
                                    return function(cs, vec__12732, v, c, inst_12735, inst_12736, inst_12734, inst_12727, state_val_12756, c__8014__auto___12783, out) {
                                      return function(p1__12722_SHARP_) {
                                        return cljs.core.not_EQ_.call(null, c, p1__12722_SHARP_);
                                      };
                                    }(cs, vec__12732, v, c, inst_12735, inst_12736, inst_12734, inst_12727, state_val_12756, c__8014__auto___12783, out);
                                  }();
                                  var inst_12740 = cljs.core.filterv.call(null, inst_12739, inst_12727);
                                  var inst_12727__$1 = inst_12740;
                                  var state_12755__$1 = function() {
                                    var statearr_12770 = state_12755;
                                    statearr_12770[10] = inst_12727__$1;
                                    return statearr_12770;
                                  }();
                                  var statearr_12771_12793 = state_12755__$1;
                                  statearr_12771_12793[2] = null;
                                  statearr_12771_12793[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___12783, out);
        return function(switch__7949__auto__, c__8014__auto___12783, out) {
          return function() {
            var cljs$core$async$state_machine__7950__auto__ = null;
            var cljs$core$async$state_machine__7950__auto____0 = function() {
              var statearr_12775 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12775[0] = cljs$core$async$state_machine__7950__auto__;
              statearr_12775[1] = 1;
              return statearr_12775;
            };
            var cljs$core$async$state_machine__7950__auto____1 = function(state_12755) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_12755);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e12776) {
                    if (e12776 instanceof Object) {
                      var ex__7953__auto__ = e12776;
                      var statearr_12777_12794 = state_12755;
                      statearr_12777_12794[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12755);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12776;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12795 = state_12755;
                  state_12755 = G__12795;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7950__auto__ = function(state_12755) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7950__auto____1.call(this, state_12755);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7950__auto____0;
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7950__auto____1;
            return cljs$core$async$state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___12783, out);
      }();
      var state__8016__auto__ = function() {
        var statearr_12778 = f__8015__auto__.call(null);
        statearr_12778[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___12783;
        return statearr_12778;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___12783, out));
  return out;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function cljs$core$async$take() {
  var args12796 = [];
  var len__5565__auto___12845 = arguments.length;
  var i__5566__auto___12846 = 0;
  while (true) {
    if (i__5566__auto___12846 < len__5565__auto___12845) {
      args12796.push(arguments[i__5566__auto___12846]);
      var G__12847 = i__5566__auto___12846 + 1;
      i__5566__auto___12846 = G__12847;
      continue;
    } else {
    }
    break;
  }
  var G__12798 = args12796.length;
  switch(G__12798) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12796.length)].join(""));;
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.take.call(null, n, ch, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__8014__auto___12849 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___12849, out) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___12849, out) {
          return function(state_12822) {
            var state_val_12823 = state_12822[1];
            if (state_val_12823 === 7) {
              var inst_12804 = state_12822[7];
              var inst_12804__$1 = state_12822[2];
              var inst_12805 = inst_12804__$1 == null;
              var inst_12806 = cljs.core.not.call(null, inst_12805);
              var state_12822__$1 = function() {
                var statearr_12824 = state_12822;
                statearr_12824[7] = inst_12804__$1;
                return statearr_12824;
              }();
              if (inst_12806) {
                var statearr_12825_12850 = state_12822__$1;
                statearr_12825_12850[1] = 8;
              } else {
                var statearr_12826_12851 = state_12822__$1;
                statearr_12826_12851[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12823 === 1) {
                var inst_12799 = 0;
                var state_12822__$1 = function() {
                  var statearr_12827 = state_12822;
                  statearr_12827[8] = inst_12799;
                  return statearr_12827;
                }();
                var statearr_12828_12852 = state_12822__$1;
                statearr_12828_12852[2] = null;
                statearr_12828_12852[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12823 === 4) {
                  var state_12822__$1 = state_12822;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12822__$1, 7, ch);
                } else {
                  if (state_val_12823 === 6) {
                    var inst_12817 = state_12822[2];
                    var state_12822__$1 = state_12822;
                    var statearr_12829_12853 = state_12822__$1;
                    statearr_12829_12853[2] = inst_12817;
                    statearr_12829_12853[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12823 === 3) {
                      var inst_12819 = state_12822[2];
                      var inst_12820 = cljs.core.async.close_BANG_.call(null, out);
                      var state_12822__$1 = function() {
                        var statearr_12830 = state_12822;
                        statearr_12830[9] = inst_12819;
                        return statearr_12830;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12822__$1, inst_12820);
                    } else {
                      if (state_val_12823 === 2) {
                        var inst_12799 = state_12822[8];
                        var inst_12801 = inst_12799 < n;
                        var state_12822__$1 = state_12822;
                        if (cljs.core.truth_(inst_12801)) {
                          var statearr_12831_12854 = state_12822__$1;
                          statearr_12831_12854[1] = 4;
                        } else {
                          var statearr_12832_12855 = state_12822__$1;
                          statearr_12832_12855[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12823 === 11) {
                          var inst_12799 = state_12822[8];
                          var inst_12809 = state_12822[2];
                          var inst_12810 = inst_12799 + 1;
                          var inst_12799__$1 = inst_12810;
                          var state_12822__$1 = function() {
                            var statearr_12833 = state_12822;
                            statearr_12833[8] = inst_12799__$1;
                            statearr_12833[10] = inst_12809;
                            return statearr_12833;
                          }();
                          var statearr_12834_12856 = state_12822__$1;
                          statearr_12834_12856[2] = null;
                          statearr_12834_12856[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12823 === 9) {
                            var state_12822__$1 = state_12822;
                            var statearr_12835_12857 = state_12822__$1;
                            statearr_12835_12857[2] = null;
                            statearr_12835_12857[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12823 === 5) {
                              var state_12822__$1 = state_12822;
                              var statearr_12836_12858 = state_12822__$1;
                              statearr_12836_12858[2] = null;
                              statearr_12836_12858[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12823 === 10) {
                                var inst_12814 = state_12822[2];
                                var state_12822__$1 = state_12822;
                                var statearr_12837_12859 = state_12822__$1;
                                statearr_12837_12859[2] = inst_12814;
                                statearr_12837_12859[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12823 === 8) {
                                  var inst_12804 = state_12822[7];
                                  var state_12822__$1 = state_12822;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12822__$1, 11, out, inst_12804);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___12849, out);
        return function(switch__7949__auto__, c__8014__auto___12849, out) {
          return function() {
            var cljs$core$async$state_machine__7950__auto__ = null;
            var cljs$core$async$state_machine__7950__auto____0 = function() {
              var statearr_12841 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_12841[0] = cljs$core$async$state_machine__7950__auto__;
              statearr_12841[1] = 1;
              return statearr_12841;
            };
            var cljs$core$async$state_machine__7950__auto____1 = function(state_12822) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_12822);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e12842) {
                    if (e12842 instanceof Object) {
                      var ex__7953__auto__ = e12842;
                      var statearr_12843_12860 = state_12822;
                      statearr_12843_12860[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12822);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12842;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12861 = state_12822;
                  state_12822 = G__12861;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7950__auto__ = function(state_12822) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7950__auto____1.call(this, state_12822);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7950__auto____0;
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7950__auto____1;
            return cljs$core$async$state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___12849, out);
      }();
      var state__8016__auto__ = function() {
        var statearr_12844 = f__8015__auto__.call(null);
        statearr_12844[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___12849;
        return statearr_12844;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___12849, out));
  return out;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs.core.async.t12869 !== "undefined") {
  } else {
    cljs.core.async.t12869 = function(map_LT_, f, ch, meta12870) {
      this.map_LT_ = map_LT_;
      this.f = f;
      this.ch = ch;
      this.meta12870 = meta12870;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t12869.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12871, meta12870__$1) {
      var self__ = this;
      var _12871__$1 = this;
      return new cljs.core.async.t12869(self__.map_LT_, self__.f, self__.ch, meta12870__$1);
    };
    cljs.core.async.t12869.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12871) {
      var self__ = this;
      var _12871__$1 = this;
      return self__.meta12870;
    };
    cljs.core.async.t12869.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t12869.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t12869.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t12869.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t12869.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t12872 !== "undefined") {
        } else {
          cljs.core.async.t12872 = function(map_LT_, f, ch, meta12870, _, fn1, meta12873) {
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta12870 = meta12870;
            this._ = _;
            this.fn1 = fn1;
            this.meta12873 = meta12873;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.core.async.t12872.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_12874, meta12873__$1) {
              var self__ = this;
              var _12874__$1 = this;
              return new cljs.core.async.t12872(self__.map_LT_, self__.f, self__.ch, self__.meta12870, self__._, self__.fn1, meta12873__$1);
            };
          }(___$1);
          cljs.core.async.t12872.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_12874) {
              var self__ = this;
              var _12874__$1 = this;
              return self__.meta12873;
            };
          }(___$1);
          cljs.core.async.t12872.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t12872.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t12872.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__12862_SHARP_) {
                  return f1.call(null, p1__12862_SHARP_ == null ? null : self__.f.call(null, p1__12862_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t12872.getBasis = function(___$1) {
            return function() {
              return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
              "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta12870", "meta12870", 220202806, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), 
              new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", "t12869", "cljs.core.async/t12869", -1532024740, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta12873", "meta12873", -462451747, null)], null);
            };
          }(___$1);
          cljs.core.async.t12872.cljs$lang$type = true;
          cljs.core.async.t12872.cljs$lang$ctorStr = "cljs.core.async/t12872";
          cljs.core.async.t12872.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
              return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t12872");
            };
          }(___$1);
          cljs.core.async.__GT_t12872 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t12872(map_LT___$1, f__$1, ch__$1, meta12870__$1, ___$2, fn1__$1, meta12873) {
              return new cljs.core.async.t12872(map_LT___$1, f__$1, ch__$1, meta12870__$1, ___$2, fn1__$1, meta12873);
            };
          }(___$1);
        }
        return new cljs.core.async.t12872(self__.map_LT_, self__.f, self__.ch, self__.meta12870, ___$1, fn1, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = ret;
        if (cljs.core.truth_(and__4514__auto__)) {
          return !(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__4514__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t12869.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t12869.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t12869.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta12870", "meta12870", 220202806, null)], null);
    };
    cljs.core.async.t12869.cljs$lang$type = true;
    cljs.core.async.t12869.cljs$lang$ctorStr = "cljs.core.async/t12869";
    cljs.core.async.t12869.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t12869");
    };
    cljs.core.async.__GT_t12869 = function cljs$core$async$map_LT__$___GT_t12869(map_LT___$1, f__$1, ch__$1, meta12870) {
      return new cljs.core.async.t12869(map_LT___$1, f__$1, ch__$1, meta12870);
    };
  }
  return new cljs.core.async.t12869(cljs$core$async$map_LT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs.core.async.t12878 !== "undefined") {
  } else {
    cljs.core.async.t12878 = function(map_GT_, f, ch, meta12879) {
      this.map_GT_ = map_GT_;
      this.f = f;
      this.ch = ch;
      this.meta12879 = meta12879;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t12878.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12880, meta12879__$1) {
      var self__ = this;
      var _12880__$1 = this;
      return new cljs.core.async.t12878(self__.map_GT_, self__.f, self__.ch, meta12879__$1);
    };
    cljs.core.async.t12878.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12880) {
      var self__ = this;
      var _12880__$1 = this;
      return self__.meta12879;
    };
    cljs.core.async.t12878.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t12878.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t12878.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t12878.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t12878.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t12878.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t12878.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3e", "map\x3e", 1676369295, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta12879", "meta12879", 94962899, null)], null);
    };
    cljs.core.async.t12878.cljs$lang$type = true;
    cljs.core.async.t12878.cljs$lang$ctorStr = "cljs.core.async/t12878";
    cljs.core.async.t12878.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t12878");
    };
    cljs.core.async.__GT_t12878 = function cljs$core$async$map_GT__$___GT_t12878(map_GT___$1, f__$1, ch__$1, meta12879) {
      return new cljs.core.async.t12878(map_GT___$1, f__$1, ch__$1, meta12879);
    };
  }
  return new cljs.core.async.t12878(cljs$core$async$map_GT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs.core.async.t12884 !== "undefined") {
  } else {
    cljs.core.async.t12884 = function(filter_GT_, p, ch, meta12885) {
      this.filter_GT_ = filter_GT_;
      this.p = p;
      this.ch = ch;
      this.meta12885 = meta12885;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t12884.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12886, meta12885__$1) {
      var self__ = this;
      var _12886__$1 = this;
      return new cljs.core.async.t12884(self__.filter_GT_, self__.p, self__.ch, meta12885__$1);
    };
    cljs.core.async.t12884.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12886) {
      var self__ = this;
      var _12886__$1 = this;
      return self__.meta12885;
    };
    cljs.core.async.t12884.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t12884.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t12884.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t12884.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t12884.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t12884.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t12884.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t12884.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "filter\x3e", "filter\x3e", -37644455, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta12885", "meta12885", -1270374521, null)], null);
    };
    cljs.core.async.t12884.cljs$lang$type = true;
    cljs.core.async.t12884.cljs$lang$ctorStr = "cljs.core.async/t12884";
    cljs.core.async.t12884.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.core.async/t12884");
    };
    cljs.core.async.__GT_t12884 = function cljs$core$async$filter_GT__$___GT_t12884(filter_GT___$1, p__$1, ch__$1, meta12885) {
      return new cljs.core.async.t12884(filter_GT___$1, p__$1, ch__$1, meta12885);
    };
  }
  return new cljs.core.async.t12884(cljs$core$async$filter_GT_, p, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function cljs$core$async$filter_LT_() {
  var args12887 = [];
  var len__5565__auto___12931 = arguments.length;
  var i__5566__auto___12932 = 0;
  while (true) {
    if (i__5566__auto___12932 < len__5565__auto___12931) {
      args12887.push(arguments[i__5566__auto___12932]);
      var G__12933 = i__5566__auto___12932 + 1;
      i__5566__auto___12932 = G__12933;
      continue;
    } else {
    }
    break;
  }
  var G__12889 = args12887.length;
  switch(G__12889) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12887.length)].join(""));;
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.filter_LT_.call(null, p, ch, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__8014__auto___12935 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___12935, out) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___12935, out) {
          return function(state_12910) {
            var state_val_12911 = state_12910[1];
            if (state_val_12911 === 7) {
              var inst_12906 = state_12910[2];
              var state_12910__$1 = state_12910;
              var statearr_12912_12936 = state_12910__$1;
              statearr_12912_12936[2] = inst_12906;
              statearr_12912_12936[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12911 === 1) {
                var state_12910__$1 = state_12910;
                var statearr_12913_12937 = state_12910__$1;
                statearr_12913_12937[2] = null;
                statearr_12913_12937[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12911 === 4) {
                  var inst_12892 = state_12910[7];
                  var inst_12892__$1 = state_12910[2];
                  var inst_12893 = inst_12892__$1 == null;
                  var state_12910__$1 = function() {
                    var statearr_12914 = state_12910;
                    statearr_12914[7] = inst_12892__$1;
                    return statearr_12914;
                  }();
                  if (cljs.core.truth_(inst_12893)) {
                    var statearr_12915_12938 = state_12910__$1;
                    statearr_12915_12938[1] = 5;
                  } else {
                    var statearr_12916_12939 = state_12910__$1;
                    statearr_12916_12939[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12911 === 6) {
                    var inst_12892 = state_12910[7];
                    var inst_12897 = p.call(null, inst_12892);
                    var state_12910__$1 = state_12910;
                    if (cljs.core.truth_(inst_12897)) {
                      var statearr_12917_12940 = state_12910__$1;
                      statearr_12917_12940[1] = 8;
                    } else {
                      var statearr_12918_12941 = state_12910__$1;
                      statearr_12918_12941[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12911 === 3) {
                      var inst_12908 = state_12910[2];
                      var state_12910__$1 = state_12910;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12910__$1, inst_12908);
                    } else {
                      if (state_val_12911 === 2) {
                        var state_12910__$1 = state_12910;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12910__$1, 4, ch);
                      } else {
                        if (state_val_12911 === 11) {
                          var inst_12900 = state_12910[2];
                          var state_12910__$1 = state_12910;
                          var statearr_12919_12942 = state_12910__$1;
                          statearr_12919_12942[2] = inst_12900;
                          statearr_12919_12942[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12911 === 9) {
                            var state_12910__$1 = state_12910;
                            var statearr_12920_12943 = state_12910__$1;
                            statearr_12920_12943[2] = null;
                            statearr_12920_12943[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12911 === 5) {
                              var inst_12895 = cljs.core.async.close_BANG_.call(null, out);
                              var state_12910__$1 = state_12910;
                              var statearr_12921_12944 = state_12910__$1;
                              statearr_12921_12944[2] = inst_12895;
                              statearr_12921_12944[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12911 === 10) {
                                var inst_12903 = state_12910[2];
                                var state_12910__$1 = function() {
                                  var statearr_12922 = state_12910;
                                  statearr_12922[8] = inst_12903;
                                  return statearr_12922;
                                }();
                                var statearr_12923_12945 = state_12910__$1;
                                statearr_12923_12945[2] = null;
                                statearr_12923_12945[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12911 === 8) {
                                  var inst_12892 = state_12910[7];
                                  var state_12910__$1 = state_12910;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12910__$1, 11, out, inst_12892);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___12935, out);
        return function(switch__7949__auto__, c__8014__auto___12935, out) {
          return function() {
            var cljs$core$async$state_machine__7950__auto__ = null;
            var cljs$core$async$state_machine__7950__auto____0 = function() {
              var statearr_12927 = [null, null, null, null, null, null, null, null, null];
              statearr_12927[0] = cljs$core$async$state_machine__7950__auto__;
              statearr_12927[1] = 1;
              return statearr_12927;
            };
            var cljs$core$async$state_machine__7950__auto____1 = function(state_12910) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_12910);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e12928) {
                    if (e12928 instanceof Object) {
                      var ex__7953__auto__ = e12928;
                      var statearr_12929_12946 = state_12910;
                      statearr_12929_12946[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12910);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12928;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12947 = state_12910;
                  state_12910 = G__12947;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7950__auto__ = function(state_12910) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7950__auto____1.call(this, state_12910);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7950__auto____0;
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7950__auto____1;
            return cljs$core$async$state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___12935, out);
      }();
      var state__8016__auto__ = function() {
        var statearr_12930 = f__8015__auto__.call(null);
        statearr_12930[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___12935;
        return statearr_12930;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___12935, out));
  return out;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function cljs$core$async$remove_LT_() {
  var args12948 = [];
  var len__5565__auto___12951 = arguments.length;
  var i__5566__auto___12952 = 0;
  while (true) {
    if (i__5566__auto___12952 < len__5565__auto___12951) {
      args12948.push(arguments[i__5566__auto___12952]);
      var G__12953 = i__5566__auto___12952 + 1;
      i__5566__auto___12952 = G__12953;
      continue;
    } else {
    }
    break;
  }
  var G__12950 = args12948.length;
  switch(G__12950) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12948.length)].join(""));;
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.remove_LT_.call(null, p, ch, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__8014__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto__) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto__) {
          return function(state_13120) {
            var state_val_13121 = state_13120[1];
            if (state_val_13121 === 7) {
              var inst_13116 = state_13120[2];
              var state_13120__$1 = state_13120;
              var statearr_13122_13163 = state_13120__$1;
              statearr_13122_13163[2] = inst_13116;
              statearr_13122_13163[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13121 === 20) {
                var inst_13086 = state_13120[7];
                var inst_13097 = state_13120[2];
                var inst_13098 = cljs.core.next.call(null, inst_13086);
                var inst_13072 = inst_13098;
                var inst_13073 = null;
                var inst_13074 = 0;
                var inst_13075 = 0;
                var state_13120__$1 = function() {
                  var statearr_13123 = state_13120;
                  statearr_13123[8] = inst_13097;
                  statearr_13123[9] = inst_13075;
                  statearr_13123[10] = inst_13074;
                  statearr_13123[11] = inst_13073;
                  statearr_13123[12] = inst_13072;
                  return statearr_13123;
                }();
                var statearr_13124_13164 = state_13120__$1;
                statearr_13124_13164[2] = null;
                statearr_13124_13164[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13121 === 1) {
                  var state_13120__$1 = state_13120;
                  var statearr_13125_13165 = state_13120__$1;
                  statearr_13125_13165[2] = null;
                  statearr_13125_13165[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13121 === 4) {
                    var inst_13061 = state_13120[13];
                    var inst_13061__$1 = state_13120[2];
                    var inst_13062 = inst_13061__$1 == null;
                    var state_13120__$1 = function() {
                      var statearr_13126 = state_13120;
                      statearr_13126[13] = inst_13061__$1;
                      return statearr_13126;
                    }();
                    if (cljs.core.truth_(inst_13062)) {
                      var statearr_13127_13166 = state_13120__$1;
                      statearr_13127_13166[1] = 5;
                    } else {
                      var statearr_13128_13167 = state_13120__$1;
                      statearr_13128_13167[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13121 === 15) {
                      var state_13120__$1 = state_13120;
                      var statearr_13132_13168 = state_13120__$1;
                      statearr_13132_13168[2] = null;
                      statearr_13132_13168[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13121 === 21) {
                        var state_13120__$1 = state_13120;
                        var statearr_13133_13169 = state_13120__$1;
                        statearr_13133_13169[2] = null;
                        statearr_13133_13169[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13121 === 13) {
                          var inst_13075 = state_13120[9];
                          var inst_13074 = state_13120[10];
                          var inst_13073 = state_13120[11];
                          var inst_13072 = state_13120[12];
                          var inst_13082 = state_13120[2];
                          var inst_13083 = inst_13075 + 1;
                          var tmp13129 = inst_13074;
                          var tmp13130 = inst_13073;
                          var tmp13131 = inst_13072;
                          var inst_13072__$1 = tmp13131;
                          var inst_13073__$1 = tmp13130;
                          var inst_13074__$1 = tmp13129;
                          var inst_13075__$1 = inst_13083;
                          var state_13120__$1 = function() {
                            var statearr_13134 = state_13120;
                            statearr_13134[14] = inst_13082;
                            statearr_13134[9] = inst_13075__$1;
                            statearr_13134[10] = inst_13074__$1;
                            statearr_13134[11] = inst_13073__$1;
                            statearr_13134[12] = inst_13072__$1;
                            return statearr_13134;
                          }();
                          var statearr_13135_13170 = state_13120__$1;
                          statearr_13135_13170[2] = null;
                          statearr_13135_13170[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13121 === 22) {
                            var state_13120__$1 = state_13120;
                            var statearr_13136_13171 = state_13120__$1;
                            statearr_13136_13171[2] = null;
                            statearr_13136_13171[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13121 === 6) {
                              var inst_13061 = state_13120[13];
                              var inst_13070 = f.call(null, inst_13061);
                              var inst_13071 = cljs.core.seq.call(null, inst_13070);
                              var inst_13072 = inst_13071;
                              var inst_13073 = null;
                              var inst_13074 = 0;
                              var inst_13075 = 0;
                              var state_13120__$1 = function() {
                                var statearr_13137 = state_13120;
                                statearr_13137[9] = inst_13075;
                                statearr_13137[10] = inst_13074;
                                statearr_13137[11] = inst_13073;
                                statearr_13137[12] = inst_13072;
                                return statearr_13137;
                              }();
                              var statearr_13138_13172 = state_13120__$1;
                              statearr_13138_13172[2] = null;
                              statearr_13138_13172[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13121 === 17) {
                                var inst_13086 = state_13120[7];
                                var inst_13090 = cljs.core.chunk_first.call(null, inst_13086);
                                var inst_13091 = cljs.core.chunk_rest.call(null, inst_13086);
                                var inst_13092 = cljs.core.count.call(null, inst_13090);
                                var inst_13072 = inst_13091;
                                var inst_13073 = inst_13090;
                                var inst_13074 = inst_13092;
                                var inst_13075 = 0;
                                var state_13120__$1 = function() {
                                  var statearr_13139 = state_13120;
                                  statearr_13139[9] = inst_13075;
                                  statearr_13139[10] = inst_13074;
                                  statearr_13139[11] = inst_13073;
                                  statearr_13139[12] = inst_13072;
                                  return statearr_13139;
                                }();
                                var statearr_13140_13173 = state_13120__$1;
                                statearr_13140_13173[2] = null;
                                statearr_13140_13173[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13121 === 3) {
                                  var inst_13118 = state_13120[2];
                                  var state_13120__$1 = state_13120;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13120__$1, inst_13118);
                                } else {
                                  if (state_val_13121 === 12) {
                                    var inst_13106 = state_13120[2];
                                    var state_13120__$1 = state_13120;
                                    var statearr_13141_13174 = state_13120__$1;
                                    statearr_13141_13174[2] = inst_13106;
                                    statearr_13141_13174[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13121 === 2) {
                                      var state_13120__$1 = state_13120;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13120__$1, 4, in$);
                                    } else {
                                      if (state_val_13121 === 23) {
                                        var inst_13114 = state_13120[2];
                                        var state_13120__$1 = state_13120;
                                        var statearr_13142_13175 = state_13120__$1;
                                        statearr_13142_13175[2] = inst_13114;
                                        statearr_13142_13175[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13121 === 19) {
                                          var inst_13101 = state_13120[2];
                                          var state_13120__$1 = state_13120;
                                          var statearr_13143_13176 = state_13120__$1;
                                          statearr_13143_13176[2] = inst_13101;
                                          statearr_13143_13176[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_13121 === 11) {
                                            var inst_13086 = state_13120[7];
                                            var inst_13072 = state_13120[12];
                                            var inst_13086__$1 = cljs.core.seq.call(null, inst_13072);
                                            var state_13120__$1 = function() {
                                              var statearr_13144 = state_13120;
                                              statearr_13144[7] = inst_13086__$1;
                                              return statearr_13144;
                                            }();
                                            if (inst_13086__$1) {
                                              var statearr_13145_13177 = state_13120__$1;
                                              statearr_13145_13177[1] = 14;
                                            } else {
                                              var statearr_13146_13178 = state_13120__$1;
                                              statearr_13146_13178[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_13121 === 9) {
                                              var inst_13108 = state_13120[2];
                                              var inst_13109 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_13120__$1 = function() {
                                                var statearr_13147 = state_13120;
                                                statearr_13147[15] = inst_13108;
                                                return statearr_13147;
                                              }();
                                              if (cljs.core.truth_(inst_13109)) {
                                                var statearr_13148_13179 = state_13120__$1;
                                                statearr_13148_13179[1] = 21;
                                              } else {
                                                var statearr_13149_13180 = state_13120__$1;
                                                statearr_13149_13180[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_13121 === 5) {
                                                var inst_13064 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_13120__$1 = state_13120;
                                                var statearr_13150_13181 = state_13120__$1;
                                                statearr_13150_13181[2] = inst_13064;
                                                statearr_13150_13181[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_13121 === 14) {
                                                  var inst_13086 = state_13120[7];
                                                  var inst_13088 = cljs.core.chunked_seq_QMARK_.call(null, inst_13086);
                                                  var state_13120__$1 = state_13120;
                                                  if (inst_13088) {
                                                    var statearr_13151_13182 = state_13120__$1;
                                                    statearr_13151_13182[1] = 17;
                                                  } else {
                                                    var statearr_13152_13183 = state_13120__$1;
                                                    statearr_13152_13183[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_13121 === 16) {
                                                    var inst_13104 = state_13120[2];
                                                    var state_13120__$1 = state_13120;
                                                    var statearr_13153_13184 = state_13120__$1;
                                                    statearr_13153_13184[2] = inst_13104;
                                                    statearr_13153_13184[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_13121 === 10) {
                                                      var inst_13075 = state_13120[9];
                                                      var inst_13073 = state_13120[11];
                                                      var inst_13080 = cljs.core._nth.call(null, inst_13073, inst_13075);
                                                      var state_13120__$1 = state_13120;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13120__$1, 13, out, inst_13080);
                                                    } else {
                                                      if (state_val_13121 === 18) {
                                                        var inst_13086 = state_13120[7];
                                                        var inst_13095 = cljs.core.first.call(null, inst_13086);
                                                        var state_13120__$1 = state_13120;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13120__$1, 20, out, inst_13095);
                                                      } else {
                                                        if (state_val_13121 === 8) {
                                                          var inst_13075 = state_13120[9];
                                                          var inst_13074 = state_13120[10];
                                                          var inst_13077 = inst_13075 < inst_13074;
                                                          var inst_13078 = inst_13077;
                                                          var state_13120__$1 = state_13120;
                                                          if (cljs.core.truth_(inst_13078)) {
                                                            var statearr_13154_13185 = state_13120__$1;
                                                            statearr_13154_13185[1] = 10;
                                                          } else {
                                                            var statearr_13155_13186 = state_13120__$1;
                                                            statearr_13155_13186[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto__);
        return function(switch__7949__auto__, c__8014__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__7950__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__7950__auto____0 = function() {
              var statearr_13159 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13159[0] = cljs$core$async$mapcat_STAR__$_state_machine__7950__auto__;
              statearr_13159[1] = 1;
              return statearr_13159;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__7950__auto____1 = function(state_13120) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_13120);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e13160) {
                    if (e13160 instanceof Object) {
                      var ex__7953__auto__ = e13160;
                      var statearr_13161_13187 = state_13120;
                      statearr_13161_13187[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13120);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e13160;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13188 = state_13120;
                  state_13120 = G__13188;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__7950__auto__ = function(state_13120) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__7950__auto____1.call(this, state_13120);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mapcat_STAR__$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__7950__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__7950__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto__);
      }();
      var state__8016__auto__ = function() {
        var statearr_13162 = f__8015__auto__.call(null);
        statearr_13162[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto__;
        return statearr_13162;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto__));
  return c__8014__auto__;
};
cljs.core.async.mapcat_LT_ = function cljs$core$async$mapcat_LT_() {
  var args13189 = [];
  var len__5565__auto___13192 = arguments.length;
  var i__5566__auto___13193 = 0;
  while (true) {
    if (i__5566__auto___13193 < len__5565__auto___13192) {
      args13189.push(arguments[i__5566__auto___13193]);
      var G__13194 = i__5566__auto___13193 + 1;
      i__5566__auto___13193 = G__13194;
      continue;
    } else {
    }
    break;
  }
  var G__13191 = args13189.length;
  switch(G__13191) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13189.length)].join(""));;
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(f, in$) {
  return cljs.core.async.mapcat_LT_.call(null, f, in$, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(f, in$, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return out;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function cljs$core$async$mapcat_GT_() {
  var args13196 = [];
  var len__5565__auto___13199 = arguments.length;
  var i__5566__auto___13200 = 0;
  while (true) {
    if (i__5566__auto___13200 < len__5565__auto___13199) {
      args13196.push(arguments[i__5566__auto___13200]);
      var G__13201 = i__5566__auto___13200 + 1;
      i__5566__auto___13200 = G__13201;
      continue;
    } else {
    }
    break;
  }
  var G__13198 = args13196.length;
  switch(G__13198) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13196.length)].join(""));;
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(f, out) {
  return cljs.core.async.mapcat_GT_.call(null, f, out, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(f, out, buf_or_n) {
  var in$ = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return in$;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function cljs$core$async$unique() {
  var args13203 = [];
  var len__5565__auto___13254 = arguments.length;
  var i__5566__auto___13255 = 0;
  while (true) {
    if (i__5566__auto___13255 < len__5565__auto___13254) {
      args13203.push(arguments[i__5566__auto___13255]);
      var G__13256 = i__5566__auto___13255 + 1;
      i__5566__auto___13255 = G__13256;
      continue;
    } else {
    }
    break;
  }
  var G__13205 = args13203.length;
  switch(G__13205) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13203.length)].join(""));;
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(ch) {
  return cljs.core.async.unique.call(null, ch, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__8014__auto___13258 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___13258, out) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___13258, out) {
          return function(state_13229) {
            var state_val_13230 = state_13229[1];
            if (state_val_13230 === 7) {
              var inst_13224 = state_13229[2];
              var state_13229__$1 = state_13229;
              var statearr_13231_13259 = state_13229__$1;
              statearr_13231_13259[2] = inst_13224;
              statearr_13231_13259[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13230 === 1) {
                var inst_13206 = null;
                var state_13229__$1 = function() {
                  var statearr_13232 = state_13229;
                  statearr_13232[7] = inst_13206;
                  return statearr_13232;
                }();
                var statearr_13233_13260 = state_13229__$1;
                statearr_13233_13260[2] = null;
                statearr_13233_13260[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13230 === 4) {
                  var inst_13209 = state_13229[8];
                  var inst_13209__$1 = state_13229[2];
                  var inst_13210 = inst_13209__$1 == null;
                  var inst_13211 = cljs.core.not.call(null, inst_13210);
                  var state_13229__$1 = function() {
                    var statearr_13234 = state_13229;
                    statearr_13234[8] = inst_13209__$1;
                    return statearr_13234;
                  }();
                  if (inst_13211) {
                    var statearr_13235_13261 = state_13229__$1;
                    statearr_13235_13261[1] = 5;
                  } else {
                    var statearr_13236_13262 = state_13229__$1;
                    statearr_13236_13262[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13230 === 6) {
                    var state_13229__$1 = state_13229;
                    var statearr_13237_13263 = state_13229__$1;
                    statearr_13237_13263[2] = null;
                    statearr_13237_13263[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13230 === 3) {
                      var inst_13226 = state_13229[2];
                      var inst_13227 = cljs.core.async.close_BANG_.call(null, out);
                      var state_13229__$1 = function() {
                        var statearr_13238 = state_13229;
                        statearr_13238[9] = inst_13226;
                        return statearr_13238;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13229__$1, inst_13227);
                    } else {
                      if (state_val_13230 === 2) {
                        var state_13229__$1 = state_13229;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13229__$1, 4, ch);
                      } else {
                        if (state_val_13230 === 11) {
                          var inst_13209 = state_13229[8];
                          var inst_13218 = state_13229[2];
                          var inst_13206 = inst_13209;
                          var state_13229__$1 = function() {
                            var statearr_13239 = state_13229;
                            statearr_13239[7] = inst_13206;
                            statearr_13239[10] = inst_13218;
                            return statearr_13239;
                          }();
                          var statearr_13240_13264 = state_13229__$1;
                          statearr_13240_13264[2] = null;
                          statearr_13240_13264[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13230 === 9) {
                            var inst_13209 = state_13229[8];
                            var state_13229__$1 = state_13229;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13229__$1, 11, out, inst_13209);
                          } else {
                            if (state_val_13230 === 5) {
                              var inst_13206 = state_13229[7];
                              var inst_13209 = state_13229[8];
                              var inst_13213 = cljs.core._EQ_.call(null, inst_13209, inst_13206);
                              var state_13229__$1 = state_13229;
                              if (inst_13213) {
                                var statearr_13242_13265 = state_13229__$1;
                                statearr_13242_13265[1] = 8;
                              } else {
                                var statearr_13243_13266 = state_13229__$1;
                                statearr_13243_13266[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13230 === 10) {
                                var inst_13221 = state_13229[2];
                                var state_13229__$1 = state_13229;
                                var statearr_13244_13267 = state_13229__$1;
                                statearr_13244_13267[2] = inst_13221;
                                statearr_13244_13267[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13230 === 8) {
                                  var inst_13206 = state_13229[7];
                                  var tmp13241 = inst_13206;
                                  var inst_13206__$1 = tmp13241;
                                  var state_13229__$1 = function() {
                                    var statearr_13245 = state_13229;
                                    statearr_13245[7] = inst_13206__$1;
                                    return statearr_13245;
                                  }();
                                  var statearr_13246_13268 = state_13229__$1;
                                  statearr_13246_13268[2] = null;
                                  statearr_13246_13268[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___13258, out);
        return function(switch__7949__auto__, c__8014__auto___13258, out) {
          return function() {
            var cljs$core$async$state_machine__7950__auto__ = null;
            var cljs$core$async$state_machine__7950__auto____0 = function() {
              var statearr_13250 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_13250[0] = cljs$core$async$state_machine__7950__auto__;
              statearr_13250[1] = 1;
              return statearr_13250;
            };
            var cljs$core$async$state_machine__7950__auto____1 = function(state_13229) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_13229);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e13251) {
                    if (e13251 instanceof Object) {
                      var ex__7953__auto__ = e13251;
                      var statearr_13252_13269 = state_13229;
                      statearr_13252_13269[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13229);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e13251;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13270 = state_13229;
                  state_13229 = G__13270;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7950__auto__ = function(state_13229) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7950__auto____1.call(this, state_13229);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7950__auto____0;
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7950__auto____1;
            return cljs$core$async$state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___13258, out);
      }();
      var state__8016__auto__ = function() {
        var statearr_13253 = f__8015__auto__.call(null);
        statearr_13253[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___13258;
        return statearr_13253;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___13258, out));
  return out;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function cljs$core$async$partition() {
  var args13271 = [];
  var len__5565__auto___13341 = arguments.length;
  var i__5566__auto___13342 = 0;
  while (true) {
    if (i__5566__auto___13342 < len__5565__auto___13341) {
      args13271.push(arguments[i__5566__auto___13342]);
      var G__13343 = i__5566__auto___13342 + 1;
      i__5566__auto___13342 = G__13343;
      continue;
    } else {
    }
    break;
  }
  var G__13273 = args13271.length;
  switch(G__13273) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13271.length)].join(""));;
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.partition.call(null, n, ch, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__8014__auto___13345 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___13345, out) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___13345, out) {
          return function(state_13311) {
            var state_val_13312 = state_13311[1];
            if (state_val_13312 === 7) {
              var inst_13307 = state_13311[2];
              var state_13311__$1 = state_13311;
              var statearr_13313_13346 = state_13311__$1;
              statearr_13313_13346[2] = inst_13307;
              statearr_13313_13346[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13312 === 1) {
                var inst_13274 = new Array(n);
                var inst_13275 = inst_13274;
                var inst_13276 = 0;
                var state_13311__$1 = function() {
                  var statearr_13314 = state_13311;
                  statearr_13314[7] = inst_13276;
                  statearr_13314[8] = inst_13275;
                  return statearr_13314;
                }();
                var statearr_13315_13347 = state_13311__$1;
                statearr_13315_13347[2] = null;
                statearr_13315_13347[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13312 === 4) {
                  var inst_13279 = state_13311[9];
                  var inst_13279__$1 = state_13311[2];
                  var inst_13280 = inst_13279__$1 == null;
                  var inst_13281 = cljs.core.not.call(null, inst_13280);
                  var state_13311__$1 = function() {
                    var statearr_13316 = state_13311;
                    statearr_13316[9] = inst_13279__$1;
                    return statearr_13316;
                  }();
                  if (inst_13281) {
                    var statearr_13317_13348 = state_13311__$1;
                    statearr_13317_13348[1] = 5;
                  } else {
                    var statearr_13318_13349 = state_13311__$1;
                    statearr_13318_13349[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13312 === 15) {
                    var inst_13301 = state_13311[2];
                    var state_13311__$1 = state_13311;
                    var statearr_13319_13350 = state_13311__$1;
                    statearr_13319_13350[2] = inst_13301;
                    statearr_13319_13350[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13312 === 13) {
                      var state_13311__$1 = state_13311;
                      var statearr_13320_13351 = state_13311__$1;
                      statearr_13320_13351[2] = null;
                      statearr_13320_13351[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13312 === 6) {
                        var inst_13276 = state_13311[7];
                        var inst_13297 = inst_13276 > 0;
                        var state_13311__$1 = state_13311;
                        if (cljs.core.truth_(inst_13297)) {
                          var statearr_13321_13352 = state_13311__$1;
                          statearr_13321_13352[1] = 12;
                        } else {
                          var statearr_13322_13353 = state_13311__$1;
                          statearr_13322_13353[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13312 === 3) {
                          var inst_13309 = state_13311[2];
                          var state_13311__$1 = state_13311;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13311__$1, inst_13309);
                        } else {
                          if (state_val_13312 === 12) {
                            var inst_13275 = state_13311[8];
                            var inst_13299 = cljs.core.vec.call(null, inst_13275);
                            var state_13311__$1 = state_13311;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13311__$1, 15, out, inst_13299);
                          } else {
                            if (state_val_13312 === 2) {
                              var state_13311__$1 = state_13311;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13311__$1, 4, ch);
                            } else {
                              if (state_val_13312 === 11) {
                                var inst_13291 = state_13311[2];
                                var inst_13292 = new Array(n);
                                var inst_13275 = inst_13292;
                                var inst_13276 = 0;
                                var state_13311__$1 = function() {
                                  var statearr_13323 = state_13311;
                                  statearr_13323[7] = inst_13276;
                                  statearr_13323[10] = inst_13291;
                                  statearr_13323[8] = inst_13275;
                                  return statearr_13323;
                                }();
                                var statearr_13324_13354 = state_13311__$1;
                                statearr_13324_13354[2] = null;
                                statearr_13324_13354[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13312 === 9) {
                                  var inst_13275 = state_13311[8];
                                  var inst_13289 = cljs.core.vec.call(null, inst_13275);
                                  var state_13311__$1 = state_13311;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13311__$1, 11, out, inst_13289);
                                } else {
                                  if (state_val_13312 === 5) {
                                    var inst_13276 = state_13311[7];
                                    var inst_13275 = state_13311[8];
                                    var inst_13279 = state_13311[9];
                                    var inst_13284 = state_13311[11];
                                    var inst_13283 = inst_13275[inst_13276] = inst_13279;
                                    var inst_13284__$1 = inst_13276 + 1;
                                    var inst_13285 = inst_13284__$1 < n;
                                    var state_13311__$1 = function() {
                                      var statearr_13325 = state_13311;
                                      statearr_13325[11] = inst_13284__$1;
                                      statearr_13325[12] = inst_13283;
                                      return statearr_13325;
                                    }();
                                    if (cljs.core.truth_(inst_13285)) {
                                      var statearr_13326_13355 = state_13311__$1;
                                      statearr_13326_13355[1] = 8;
                                    } else {
                                      var statearr_13327_13356 = state_13311__$1;
                                      statearr_13327_13356[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13312 === 14) {
                                      var inst_13304 = state_13311[2];
                                      var inst_13305 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_13311__$1 = function() {
                                        var statearr_13329 = state_13311;
                                        statearr_13329[13] = inst_13304;
                                        return statearr_13329;
                                      }();
                                      var statearr_13330_13357 = state_13311__$1;
                                      statearr_13330_13357[2] = inst_13305;
                                      statearr_13330_13357[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13312 === 10) {
                                        var inst_13295 = state_13311[2];
                                        var state_13311__$1 = state_13311;
                                        var statearr_13331_13358 = state_13311__$1;
                                        statearr_13331_13358[2] = inst_13295;
                                        statearr_13331_13358[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13312 === 8) {
                                          var inst_13275 = state_13311[8];
                                          var inst_13284 = state_13311[11];
                                          var tmp13328 = inst_13275;
                                          var inst_13275__$1 = tmp13328;
                                          var inst_13276 = inst_13284;
                                          var state_13311__$1 = function() {
                                            var statearr_13332 = state_13311;
                                            statearr_13332[7] = inst_13276;
                                            statearr_13332[8] = inst_13275__$1;
                                            return statearr_13332;
                                          }();
                                          var statearr_13333_13359 = state_13311__$1;
                                          statearr_13333_13359[2] = null;
                                          statearr_13333_13359[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___13345, out);
        return function(switch__7949__auto__, c__8014__auto___13345, out) {
          return function() {
            var cljs$core$async$state_machine__7950__auto__ = null;
            var cljs$core$async$state_machine__7950__auto____0 = function() {
              var statearr_13337 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13337[0] = cljs$core$async$state_machine__7950__auto__;
              statearr_13337[1] = 1;
              return statearr_13337;
            };
            var cljs$core$async$state_machine__7950__auto____1 = function(state_13311) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_13311);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e13338) {
                    if (e13338 instanceof Object) {
                      var ex__7953__auto__ = e13338;
                      var statearr_13339_13360 = state_13311;
                      statearr_13339_13360[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13311);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e13338;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13361 = state_13311;
                  state_13311 = G__13361;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7950__auto__ = function(state_13311) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7950__auto____1.call(this, state_13311);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7950__auto____0;
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7950__auto____1;
            return cljs$core$async$state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___13345, out);
      }();
      var state__8016__auto__ = function() {
        var statearr_13340 = f__8015__auto__.call(null);
        statearr_13340[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___13345;
        return statearr_13340;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___13345, out));
  return out;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function cljs$core$async$partition_by() {
  var args13362 = [];
  var len__5565__auto___13436 = arguments.length;
  var i__5566__auto___13437 = 0;
  while (true) {
    if (i__5566__auto___13437 < len__5565__auto___13436) {
      args13362.push(arguments[i__5566__auto___13437]);
      var G__13438 = i__5566__auto___13437 + 1;
      i__5566__auto___13437 = G__13438;
      continue;
    } else {
    }
    break;
  }
  var G__13364 = args13362.length;
  switch(G__13364) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13362.length)].join(""));;
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, ch) {
  return cljs.core.async.partition_by.call(null, f, ch, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(f, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__8014__auto___13440 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___13440, out) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___13440, out) {
          return function(state_13406) {
            var state_val_13407 = state_13406[1];
            if (state_val_13407 === 7) {
              var inst_13402 = state_13406[2];
              var state_13406__$1 = state_13406;
              var statearr_13408_13441 = state_13406__$1;
              statearr_13408_13441[2] = inst_13402;
              statearr_13408_13441[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13407 === 1) {
                var inst_13365 = [];
                var inst_13366 = inst_13365;
                var inst_13367 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                var state_13406__$1 = function() {
                  var statearr_13409 = state_13406;
                  statearr_13409[7] = inst_13366;
                  statearr_13409[8] = inst_13367;
                  return statearr_13409;
                }();
                var statearr_13410_13442 = state_13406__$1;
                statearr_13410_13442[2] = null;
                statearr_13410_13442[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13407 === 4) {
                  var inst_13370 = state_13406[9];
                  var inst_13370__$1 = state_13406[2];
                  var inst_13371 = inst_13370__$1 == null;
                  var inst_13372 = cljs.core.not.call(null, inst_13371);
                  var state_13406__$1 = function() {
                    var statearr_13411 = state_13406;
                    statearr_13411[9] = inst_13370__$1;
                    return statearr_13411;
                  }();
                  if (inst_13372) {
                    var statearr_13412_13443 = state_13406__$1;
                    statearr_13412_13443[1] = 5;
                  } else {
                    var statearr_13413_13444 = state_13406__$1;
                    statearr_13413_13444[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13407 === 15) {
                    var inst_13396 = state_13406[2];
                    var state_13406__$1 = state_13406;
                    var statearr_13414_13445 = state_13406__$1;
                    statearr_13414_13445[2] = inst_13396;
                    statearr_13414_13445[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13407 === 13) {
                      var state_13406__$1 = state_13406;
                      var statearr_13415_13446 = state_13406__$1;
                      statearr_13415_13446[2] = null;
                      statearr_13415_13446[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13407 === 6) {
                        var inst_13366 = state_13406[7];
                        var inst_13391 = inst_13366.length;
                        var inst_13392 = inst_13391 > 0;
                        var state_13406__$1 = state_13406;
                        if (cljs.core.truth_(inst_13392)) {
                          var statearr_13416_13447 = state_13406__$1;
                          statearr_13416_13447[1] = 12;
                        } else {
                          var statearr_13417_13448 = state_13406__$1;
                          statearr_13417_13448[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13407 === 3) {
                          var inst_13404 = state_13406[2];
                          var state_13406__$1 = state_13406;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13406__$1, inst_13404);
                        } else {
                          if (state_val_13407 === 12) {
                            var inst_13366 = state_13406[7];
                            var inst_13394 = cljs.core.vec.call(null, inst_13366);
                            var state_13406__$1 = state_13406;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13406__$1, 15, out, inst_13394);
                          } else {
                            if (state_val_13407 === 2) {
                              var state_13406__$1 = state_13406;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13406__$1, 4, ch);
                            } else {
                              if (state_val_13407 === 11) {
                                var inst_13374 = state_13406[10];
                                var inst_13370 = state_13406[9];
                                var inst_13384 = state_13406[2];
                                var inst_13385 = [];
                                var inst_13386 = inst_13385.push(inst_13370);
                                var inst_13366 = inst_13385;
                                var inst_13367 = inst_13374;
                                var state_13406__$1 = function() {
                                  var statearr_13418 = state_13406;
                                  statearr_13418[11] = inst_13384;
                                  statearr_13418[7] = inst_13366;
                                  statearr_13418[8] = inst_13367;
                                  statearr_13418[12] = inst_13386;
                                  return statearr_13418;
                                }();
                                var statearr_13419_13449 = state_13406__$1;
                                statearr_13419_13449[2] = null;
                                statearr_13419_13449[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13407 === 9) {
                                  var inst_13366 = state_13406[7];
                                  var inst_13382 = cljs.core.vec.call(null, inst_13366);
                                  var state_13406__$1 = state_13406;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13406__$1, 11, out, inst_13382);
                                } else {
                                  if (state_val_13407 === 5) {
                                    var inst_13374 = state_13406[10];
                                    var inst_13367 = state_13406[8];
                                    var inst_13370 = state_13406[9];
                                    var inst_13374__$1 = f.call(null, inst_13370);
                                    var inst_13375 = cljs.core._EQ_.call(null, inst_13374__$1, inst_13367);
                                    var inst_13376 = cljs.core.keyword_identical_QMARK_.call(null, inst_13367, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                    var inst_13377 = inst_13375 || inst_13376;
                                    var state_13406__$1 = function() {
                                      var statearr_13420 = state_13406;
                                      statearr_13420[10] = inst_13374__$1;
                                      return statearr_13420;
                                    }();
                                    if (cljs.core.truth_(inst_13377)) {
                                      var statearr_13421_13450 = state_13406__$1;
                                      statearr_13421_13450[1] = 8;
                                    } else {
                                      var statearr_13422_13451 = state_13406__$1;
                                      statearr_13422_13451[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13407 === 14) {
                                      var inst_13399 = state_13406[2];
                                      var inst_13400 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_13406__$1 = function() {
                                        var statearr_13424 = state_13406;
                                        statearr_13424[13] = inst_13399;
                                        return statearr_13424;
                                      }();
                                      var statearr_13425_13452 = state_13406__$1;
                                      statearr_13425_13452[2] = inst_13400;
                                      statearr_13425_13452[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13407 === 10) {
                                        var inst_13389 = state_13406[2];
                                        var state_13406__$1 = state_13406;
                                        var statearr_13426_13453 = state_13406__$1;
                                        statearr_13426_13453[2] = inst_13389;
                                        statearr_13426_13453[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13407 === 8) {
                                          var inst_13374 = state_13406[10];
                                          var inst_13366 = state_13406[7];
                                          var inst_13370 = state_13406[9];
                                          var inst_13379 = inst_13366.push(inst_13370);
                                          var tmp13423 = inst_13366;
                                          var inst_13366__$1 = tmp13423;
                                          var inst_13367 = inst_13374;
                                          var state_13406__$1 = function() {
                                            var statearr_13427 = state_13406;
                                            statearr_13427[14] = inst_13379;
                                            statearr_13427[7] = inst_13366__$1;
                                            statearr_13427[8] = inst_13367;
                                            return statearr_13427;
                                          }();
                                          var statearr_13428_13454 = state_13406__$1;
                                          statearr_13428_13454[2] = null;
                                          statearr_13428_13454[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___13440, out);
        return function(switch__7949__auto__, c__8014__auto___13440, out) {
          return function() {
            var cljs$core$async$state_machine__7950__auto__ = null;
            var cljs$core$async$state_machine__7950__auto____0 = function() {
              var statearr_13432 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13432[0] = cljs$core$async$state_machine__7950__auto__;
              statearr_13432[1] = 1;
              return statearr_13432;
            };
            var cljs$core$async$state_machine__7950__auto____1 = function(state_13406) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_13406);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e13433) {
                    if (e13433 instanceof Object) {
                      var ex__7953__auto__ = e13433;
                      var statearr_13434_13455 = state_13406;
                      statearr_13434_13455[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13406);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e13433;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13456 = state_13406;
                  state_13406 = G__13456;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7950__auto__ = function(state_13406) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7950__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7950__auto____1.call(this, state_13406);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7950__auto____0;
            cljs$core$async$state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7950__auto____1;
            return cljs$core$async$state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___13440, out);
      }();
      var state__8016__auto__ = function() {
        var statearr_13435 = f__8015__auto__.call(null);
        statearr_13435[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___13440;
        return statearr_13435;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___13440, out));
  return out;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
goog.provide("khroma.log");
goog.require("cljs.core");
khroma.log.console_fn = function khroma$log$console_fn(f) {
  return function() {
    var G__10754__delegate = function(args) {
      return f.apply(console, cljs.core.clj__GT_js.call(null, cljs.core.map.call(null, cljs.core.clj__GT_js, args)));
    };
    var G__10754 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__10755__i = 0, G__10755__a = new Array(arguments.length - 0);
        while (G__10755__i < G__10755__a.length) {
          G__10755__a[G__10755__i] = arguments[G__10755__i + 0];
          ++G__10755__i;
        }
        args = new cljs.core.IndexedSeq(G__10755__a, 0);
      }
      return G__10754__delegate.call(this, args);
    };
    G__10754.cljs$lang$maxFixedArity = 0;
    G__10754.cljs$lang$applyTo = function(arglist__10756) {
      var args = cljs.core.seq(arglist__10756);
      return G__10754__delegate(args);
    };
    G__10754.cljs$core$IFn$_invoke$arity$variadic = G__10754__delegate;
    return G__10754;
  }();
};
khroma.log.assert = khroma.log.console_fn.call(null, console.assert);
khroma.log.clear = khroma.log.console_fn.call(null, console.clear);
khroma.log.count = khroma.log.console_fn.call(null, console.count);
khroma.log.debug = khroma.log.console_fn.call(null, console.debug);
khroma.log.dir = khroma.log.console_fn.call(null, console.dir);
khroma.log.dirxml = khroma.log.console_fn.call(null, console.dirxml);
khroma.log.error = khroma.log.console_fn.call(null, console.error);
khroma.log.group = khroma.log.console_fn.call(null, console.group);
khroma.log.group_collapsed = khroma.log.console_fn.call(null, console.groupCollapsed);
khroma.log.group_end = khroma.log.console_fn.call(null, console.groupEnd);
khroma.log.info = khroma.log.console_fn.call(null, console.info);
khroma.log.log = khroma.log.console_fn.call(null, console.log);
khroma.log.profile = khroma.log.console_fn.call(null, console.profile);
khroma.log.profile_end = khroma.log.console_fn.call(null, console.profileEnd);
khroma.log.time = khroma.log.console_fn.call(null, console.time);
khroma.log.time_end = khroma.log.console_fn.call(null, console.timeEnd);
khroma.log.time_stamp = khroma.log.console_fn.call(null, console.timeStamp);
khroma.log.trace = khroma.log.console_fn.call(null, console.trace);
khroma.log.warn = khroma.log.console_fn.call(null, console.warn);
goog.provide("khroma.runtime");
goog.require("cljs.core");
goog.require("khroma.log");
goog.require("cljs.core.async");
goog.require("cljs.core.async.impl.protocols");
khroma.runtime.available_QMARK_ = !(chrome.runtime == null);
khroma.runtime.manifest = new cljs.core.Delay(function() {
  return cljs.core.js__GT_clj.call(null, chrome.runtime.getManifest());
}, null);
khroma.runtime.options__GT_jsparams = function khroma$runtime$options__GT_jsparams(options) {
  return cljs.core.clj__GT_js.call(null, cljs.core.map.call(null, cljs.core.clj__GT_js, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), options)));
};
khroma.runtime.chan = cljs.core.partial.call(null, cljs.core.async.chan, 100);
khroma.runtime.IChromePort = {};
khroma.runtime.port_name = function khroma$runtime$port_name(this$) {
  if (!(this$ == null) && !(this$.khroma$runtime$IChromePort$port_name$arity$1 == null)) {
    return this$.khroma$runtime$IChromePort$port_name$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = khroma.runtime.port_name[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = khroma.runtime.port_name["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IChromePort.port-name", this$);
      }
    }
  }
};
khroma.runtime.channel_from_port = function khroma$runtime$channel_from_port(port) {
  var in$ = khroma.runtime.chan.call(null);
  var out = khroma.runtime.chan.call(null);
  var c__8014__auto___10651 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto___10651, in$, out) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto___10651, in$, out) {
          return function(state_10617) {
            var state_val_10618 = state_10617[1];
            if (state_val_10618 === 1) {
              var state_10617__$1 = state_10617;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10617__$1, 2, out);
            } else {
              if (state_val_10618 === 2) {
                var inst_10602 = state_10617[2];
                var inst_10603 = inst_10602;
                var state_10617__$1 = function() {
                  var statearr_10619 = state_10617;
                  statearr_10619[7] = inst_10603;
                  return statearr_10619;
                }();
                var statearr_10620_10652 = state_10617__$1;
                statearr_10620_10652[2] = null;
                statearr_10620_10652[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10618 === 3) {
                  var inst_10603 = state_10617[7];
                  var state_10617__$1 = state_10617;
                  if (cljs.core.truth_(inst_10603)) {
                    var statearr_10621_10653 = state_10617__$1;
                    statearr_10621_10653[1] = 5;
                  } else {
                    var statearr_10622_10654 = state_10617__$1;
                    statearr_10622_10654[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10618 === 4) {
                    var inst_10615 = state_10617[2];
                    var state_10617__$1 = state_10617;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10617__$1, inst_10615);
                  } else {
                    if (state_val_10618 === 5) {
                      var inst_10603 = state_10617[7];
                      var inst_10606 = cljs.core.clj__GT_js.call(null, inst_10603);
                      var inst_10607 = port.postMessage(inst_10606);
                      var state_10617__$1 = function() {
                        var statearr_10623 = state_10617;
                        statearr_10623[8] = inst_10607;
                        return statearr_10623;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10617__$1, 8, out);
                    } else {
                      if (state_val_10618 === 6) {
                        var state_10617__$1 = state_10617;
                        var statearr_10624_10655 = state_10617__$1;
                        statearr_10624_10655[2] = null;
                        statearr_10624_10655[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10618 === 7) {
                          var inst_10613 = state_10617[2];
                          var state_10617__$1 = state_10617;
                          var statearr_10625_10656 = state_10617__$1;
                          statearr_10625_10656[2] = inst_10613;
                          statearr_10625_10656[1] = 4;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10618 === 8) {
                            var inst_10609 = state_10617[2];
                            var inst_10603 = inst_10609;
                            var state_10617__$1 = function() {
                              var statearr_10626 = state_10617;
                              statearr_10626[7] = inst_10603;
                              return statearr_10626;
                            }();
                            var statearr_10627_10657 = state_10617__$1;
                            statearr_10627_10657[2] = null;
                            statearr_10627_10657[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8014__auto___10651, in$, out);
        return function(switch__7949__auto__, c__8014__auto___10651, in$, out) {
          return function() {
            var khroma$runtime$channel_from_port_$_state_machine__7950__auto__ = null;
            var khroma$runtime$channel_from_port_$_state_machine__7950__auto____0 = function() {
              var statearr_10631 = [null, null, null, null, null, null, null, null, null];
              statearr_10631[0] = khroma$runtime$channel_from_port_$_state_machine__7950__auto__;
              statearr_10631[1] = 1;
              return statearr_10631;
            };
            var khroma$runtime$channel_from_port_$_state_machine__7950__auto____1 = function(state_10617) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_10617);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e10632) {
                    if (e10632 instanceof Object) {
                      var ex__7953__auto__ = e10632;
                      var statearr_10633_10658 = state_10617;
                      statearr_10633_10658[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10617);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10632;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10659 = state_10617;
                  state_10617 = G__10659;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            khroma$runtime$channel_from_port_$_state_machine__7950__auto__ = function(state_10617) {
              switch(arguments.length) {
                case 0:
                  return khroma$runtime$channel_from_port_$_state_machine__7950__auto____0.call(this);
                case 1:
                  return khroma$runtime$channel_from_port_$_state_machine__7950__auto____1.call(this, state_10617);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            khroma$runtime$channel_from_port_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = khroma$runtime$channel_from_port_$_state_machine__7950__auto____0;
            khroma$runtime$channel_from_port_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = khroma$runtime$channel_from_port_$_state_machine__7950__auto____1;
            return khroma$runtime$channel_from_port_$_state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto___10651, in$, out);
      }();
      var state__8016__auto__ = function() {
        var statearr_10634 = f__8015__auto__.call(null);
        statearr_10634[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto___10651;
        return statearr_10634;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto___10651, in$, out));
  port.onMessage.addListener(function(in$, out) {
    return function(message, sender, response_fn) {
      var c__8014__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto__, in$, out) {
        return function() {
          var f__8015__auto__ = function() {
            var switch__7949__auto__ = function(c__8014__auto__, in$, out) {
              return function(state_10639) {
                var state_val_10640 = state_10639[1];
                if (state_val_10640 === 1) {
                  var inst_10635 = cljs.core.js__GT_clj.call(null, message);
                  var state_10639__$1 = state_10639;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10639__$1, 2, in$, inst_10635);
                } else {
                  if (state_val_10640 === 2) {
                    var inst_10637 = state_10639[2];
                    var state_10639__$1 = state_10639;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10639__$1, inst_10637);
                  } else {
                    return null;
                  }
                }
              };
            }(c__8014__auto__, in$, out);
            return function(switch__7949__auto__, c__8014__auto__, in$, out) {
              return function() {
                var khroma$runtime$channel_from_port_$_state_machine__7950__auto__ = null;
                var khroma$runtime$channel_from_port_$_state_machine__7950__auto____0 = function() {
                  var statearr_10644 = [null, null, null, null, null, null, null];
                  statearr_10644[0] = khroma$runtime$channel_from_port_$_state_machine__7950__auto__;
                  statearr_10644[1] = 1;
                  return statearr_10644;
                };
                var khroma$runtime$channel_from_port_$_state_machine__7950__auto____1 = function(state_10639) {
                  while (true) {
                    var ret_value__7951__auto__ = function() {
                      try {
                        while (true) {
                          var result__7952__auto__ = switch__7949__auto__.call(null, state_10639);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__7952__auto__;
                          }
                          break;
                        }
                      } catch (e10645) {
                        if (e10645 instanceof Object) {
                          var ex__7953__auto__ = e10645;
                          var statearr_10646_10660 = state_10639;
                          statearr_10646_10660[5] = ex__7953__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10639);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e10645;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__10661 = state_10639;
                      state_10639 = G__10661;
                      continue;
                    } else {
                      return ret_value__7951__auto__;
                    }
                    break;
                  }
                };
                khroma$runtime$channel_from_port_$_state_machine__7950__auto__ = function(state_10639) {
                  switch(arguments.length) {
                    case 0:
                      return khroma$runtime$channel_from_port_$_state_machine__7950__auto____0.call(this);
                    case 1:
                      return khroma$runtime$channel_from_port_$_state_machine__7950__auto____1.call(this, state_10639);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                khroma$runtime$channel_from_port_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = khroma$runtime$channel_from_port_$_state_machine__7950__auto____0;
                khroma$runtime$channel_from_port_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = khroma$runtime$channel_from_port_$_state_machine__7950__auto____1;
                return khroma$runtime$channel_from_port_$_state_machine__7950__auto__;
              }();
            }(switch__7949__auto__, c__8014__auto__, in$, out);
          }();
          var state__8016__auto__ = function() {
            var statearr_10647 = f__8015__auto__.call(null);
            statearr_10647[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto__;
            return statearr_10647;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
        };
      }(c__8014__auto__, in$, out));
      return c__8014__auto__;
    };
  }(in$, out));
  port.onDisconnect.addListener(function(in$, out) {
    return function() {
      cljs.core.async.close_BANG_.call(null, in$);
      return cljs.core.async.close_BANG_.call(null, out);
    };
  }(in$, out));
  if (typeof khroma.runtime.t10648 !== "undefined") {
  } else {
    khroma.runtime.t10648 = function(channel_from_port, port, in$, out, meta10649) {
      this.channel_from_port = channel_from_port;
      this.port = port;
      this.in$ = in$;
      this.out = out;
      this.meta10649 = meta10649;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    khroma.runtime.t10648.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(in$, out) {
      return function(_10650, meta10649__$1) {
        var self__ = this;
        var _10650__$1 = this;
        return new khroma.runtime.t10648(self__.channel_from_port, self__.port, self__.in$, self__.out, meta10649__$1);
      };
    }(in$, out);
    khroma.runtime.t10648.prototype.cljs$core$IMeta$_meta$arity$1 = function(in$, out) {
      return function(_10650) {
        var self__ = this;
        var _10650__$1 = this;
        return self__.meta10649;
      };
    }(in$, out);
    khroma.runtime.t10648.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    khroma.runtime.t10648.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(in$, out) {
      return function(_, handler) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.in$, handler);
      };
    }(in$, out);
    khroma.runtime.t10648.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    khroma.runtime.t10648.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(in$, out) {
      return function(_, message, handler) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.out, message, handler);
      };
    }(in$, out);
    khroma.runtime.t10648.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    khroma.runtime.t10648.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(in$, out) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.async.impl.protocols.close_BANG_.call(null, self__.in$);
        cljs.core.async.impl.protocols.close_BANG_.call(null, self__.out);
        return self__.port.disconnect();
      };
    }(in$, out);
    khroma.runtime.t10648.prototype.khroma$runtime$IChromePort$ = true;
    khroma.runtime.t10648.prototype.khroma$runtime$IChromePort$port_name$arity$1 = function(in$, out) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.port.name;
      };
    }(in$, out);
    khroma.runtime.t10648.getBasis = function(in$, out) {
      return function() {
        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "channel-from-port", "channel-from-port", -1134747206, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
        "port", "port", -1119498507, null)], null)))], null)), new cljs.core.Symbol(null, "port", "port", -1119498507, null), new cljs.core.Symbol(null, "in", "in", 109346662, null), new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "meta10649", "meta10649", 2110817673, null)], null);
      };
    }(in$, out);
    khroma.runtime.t10648.cljs$lang$type = true;
    khroma.runtime.t10648.cljs$lang$ctorStr = "khroma.runtime/t10648";
    khroma.runtime.t10648.cljs$lang$ctorPrWriter = function(in$, out) {
      return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
        return cljs.core._write.call(null, writer__5106__auto__, "khroma.runtime/t10648");
      };
    }(in$, out);
    khroma.runtime.__GT_t10648 = function(in$, out) {
      return function khroma$runtime$channel_from_port_$___GT_t10648(channel_from_port__$1, port__$1, in$__$1, out__$1, meta10649) {
        return new khroma.runtime.t10648(channel_from_port__$1, port__$1, in$__$1, out__$1, meta10649);
      };
    }(in$, out);
  }
  return new khroma.runtime.t10648(khroma$runtime$channel_from_port, port, in$, out, cljs.core.PersistentArrayMap.EMPTY);
};
khroma.runtime.connect = function khroma$runtime$connect() {
  var args__5572__auto__ = [];
  var len__5565__auto___10665 = arguments.length;
  var i__5566__auto___10666 = 0;
  while (true) {
    if (i__5566__auto___10666 < len__5565__auto___10665) {
      args__5572__auto__.push(arguments[i__5566__auto___10666]);
      var G__10667 = i__5566__auto___10666 + 1;
      i__5566__auto___10666 = G__10667;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return khroma.runtime.connect.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
khroma.runtime.connect.cljs$core$IFn$_invoke$arity$variadic = function(options) {
  return khroma.runtime.channel_from_port.call(null, function() {
    var map__10663 = cljs.core.apply.call(null, cljs.core.hash_map, options);
    var map__10663__$1 = (!(map__10663 == null) ? map__10663.cljs$lang$protocol_mask$partition0$ & 64 || map__10663.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10663) : map__10663;
    var extensionId = cljs.core.get.call(null, map__10663__$1, new cljs.core.Keyword(null, "extensionId", "extensionId", -1340958256));
    var connectInfo = cljs.core.get.call(null, map__10663__$1, new cljs.core.Keyword(null, "connectInfo", "connectInfo", 1971889406));
    return chrome.runtime.connect.apply(chrome.runtime, khroma.runtime.options__GT_jsparams.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [extensionId, connectInfo], null)));
  }());
};
khroma.runtime.connect.cljs$lang$maxFixedArity = 0;
khroma.runtime.connect.cljs$lang$applyTo = function(seq10662) {
  return khroma.runtime.connect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq10662));
};
khroma.runtime.connections = function khroma$runtime$connections() {
  var c = khroma.runtime.chan.call(null);
  chrome.runtime.onConnect.addListener(function(c) {
    return function(port) {
      var c__8014__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto__, c) {
        return function() {
          var f__8015__auto__ = function() {
            var switch__7949__auto__ = function(c__8014__auto__, c) {
              return function(state_10685) {
                var state_val_10686 = state_10685[1];
                if (state_val_10686 === 1) {
                  var inst_10681 = khroma.runtime.channel_from_port.call(null, port);
                  var state_10685__$1 = state_10685;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10685__$1, 2, c, inst_10681);
                } else {
                  if (state_val_10686 === 2) {
                    var inst_10683 = state_10685[2];
                    var state_10685__$1 = state_10685;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10685__$1, inst_10683);
                  } else {
                    return null;
                  }
                }
              };
            }(c__8014__auto__, c);
            return function(switch__7949__auto__, c__8014__auto__, c) {
              return function() {
                var khroma$runtime$connections_$_state_machine__7950__auto__ = null;
                var khroma$runtime$connections_$_state_machine__7950__auto____0 = function() {
                  var statearr_10690 = [null, null, null, null, null, null, null];
                  statearr_10690[0] = khroma$runtime$connections_$_state_machine__7950__auto__;
                  statearr_10690[1] = 1;
                  return statearr_10690;
                };
                var khroma$runtime$connections_$_state_machine__7950__auto____1 = function(state_10685) {
                  while (true) {
                    var ret_value__7951__auto__ = function() {
                      try {
                        while (true) {
                          var result__7952__auto__ = switch__7949__auto__.call(null, state_10685);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__7952__auto__;
                          }
                          break;
                        }
                      } catch (e10691) {
                        if (e10691 instanceof Object) {
                          var ex__7953__auto__ = e10691;
                          var statearr_10692_10694 = state_10685;
                          statearr_10692_10694[5] = ex__7953__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10685);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e10691;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__10695 = state_10685;
                      state_10685 = G__10695;
                      continue;
                    } else {
                      return ret_value__7951__auto__;
                    }
                    break;
                  }
                };
                khroma$runtime$connections_$_state_machine__7950__auto__ = function(state_10685) {
                  switch(arguments.length) {
                    case 0:
                      return khroma$runtime$connections_$_state_machine__7950__auto____0.call(this);
                    case 1:
                      return khroma$runtime$connections_$_state_machine__7950__auto____1.call(this, state_10685);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                khroma$runtime$connections_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = khroma$runtime$connections_$_state_machine__7950__auto____0;
                khroma$runtime$connections_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = khroma$runtime$connections_$_state_machine__7950__auto____1;
                return khroma$runtime$connections_$_state_machine__7950__auto__;
              }();
            }(switch__7949__auto__, c__8014__auto__, c);
          }();
          var state__8016__auto__ = function() {
            var statearr_10693 = f__8015__auto__.call(null);
            statearr_10693[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto__;
            return statearr_10693;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
        };
      }(c__8014__auto__, c));
      return c__8014__auto__;
    };
  }(c));
  return c;
};
khroma.runtime.message_event = function khroma$runtime$message_event(message, sender, response_fn) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "message", "message", -406056002), cljs.core.js__GT_clj.call(null, message), new cljs.core.Keyword(null, "sender", "sender", 1557303285), cljs.core.js__GT_clj.call(null, sender), new cljs.core.Keyword(null, "response-fn", "response-fn", 377411189), response_fn], null);
};
khroma.runtime.messages = function khroma$runtime$messages() {
  var ch = khroma.runtime.chan.call(null);
  chrome.runtime.onMessage.addListener(function(ch) {
    return function(message, sender, reply_fn) {
      var c__8014__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto__, ch) {
        return function() {
          var f__8015__auto__ = function() {
            var switch__7949__auto__ = function(c__8014__auto__, ch) {
              return function(state_10713) {
                var state_val_10714 = state_10713[1];
                if (state_val_10714 === 1) {
                  var inst_10709 = khroma.runtime.message_event.call(null, message, sender, reply_fn);
                  var state_10713__$1 = state_10713;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10713__$1, 2, ch, inst_10709);
                } else {
                  if (state_val_10714 === 2) {
                    var inst_10711 = state_10713[2];
                    var state_10713__$1 = state_10713;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10713__$1, inst_10711);
                  } else {
                    return null;
                  }
                }
              };
            }(c__8014__auto__, ch);
            return function(switch__7949__auto__, c__8014__auto__, ch) {
              return function() {
                var khroma$runtime$messages_$_state_machine__7950__auto__ = null;
                var khroma$runtime$messages_$_state_machine__7950__auto____0 = function() {
                  var statearr_10718 = [null, null, null, null, null, null, null];
                  statearr_10718[0] = khroma$runtime$messages_$_state_machine__7950__auto__;
                  statearr_10718[1] = 1;
                  return statearr_10718;
                };
                var khroma$runtime$messages_$_state_machine__7950__auto____1 = function(state_10713) {
                  while (true) {
                    var ret_value__7951__auto__ = function() {
                      try {
                        while (true) {
                          var result__7952__auto__ = switch__7949__auto__.call(null, state_10713);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__7952__auto__;
                          }
                          break;
                        }
                      } catch (e10719) {
                        if (e10719 instanceof Object) {
                          var ex__7953__auto__ = e10719;
                          var statearr_10720_10722 = state_10713;
                          statearr_10720_10722[5] = ex__7953__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10713);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e10719;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__10723 = state_10713;
                      state_10713 = G__10723;
                      continue;
                    } else {
                      return ret_value__7951__auto__;
                    }
                    break;
                  }
                };
                khroma$runtime$messages_$_state_machine__7950__auto__ = function(state_10713) {
                  switch(arguments.length) {
                    case 0:
                      return khroma$runtime$messages_$_state_machine__7950__auto____0.call(this);
                    case 1:
                      return khroma$runtime$messages_$_state_machine__7950__auto____1.call(this, state_10713);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                khroma$runtime$messages_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = khroma$runtime$messages_$_state_machine__7950__auto____0;
                khroma$runtime$messages_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = khroma$runtime$messages_$_state_machine__7950__auto____1;
                return khroma$runtime$messages_$_state_machine__7950__auto__;
              }();
            }(switch__7949__auto__, c__8014__auto__, ch);
          }();
          var state__8016__auto__ = function() {
            var statearr_10721 = f__8015__auto__.call(null);
            statearr_10721[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto__;
            return statearr_10721;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
        };
      }(c__8014__auto__, ch));
      return c__8014__auto__;
    };
  }(ch));
  return ch;
};
khroma.runtime.send_message = function khroma$runtime$send_message() {
  var args__5572__auto__ = [];
  var len__5565__auto___10728 = arguments.length;
  var i__5566__auto___10729 = 0;
  while (true) {
    if (i__5566__auto___10729 < len__5565__auto___10728) {
      args__5572__auto__.push(arguments[i__5566__auto___10729]);
      var G__10730 = i__5566__auto___10729 + 1;
      i__5566__auto___10729 = G__10730;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return khroma.runtime.send_message.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
khroma.runtime.send_message.cljs$core$IFn$_invoke$arity$variadic = function(message, options) {
  var map__10726 = cljs.core.apply.call(null, cljs.core.hash_map, options);
  var map__10726__$1 = (!(map__10726 == null) ? map__10726.cljs$lang$protocol_mask$partition0$ & 64 || map__10726.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10726) : map__10726;
  var extensionId = cljs.core.get.call(null, map__10726__$1, new cljs.core.Keyword(null, "extensionId", "extensionId", -1340958256));
  var options__$1 = cljs.core.get.call(null, map__10726__$1, new cljs.core.Keyword(null, "options", "options", 99638489));
  var responseCallback = cljs.core.get.call(null, map__10726__$1, new cljs.core.Keyword(null, "responseCallback", "responseCallback", 1804251354));
  return chrome.runtime.sendMessage.apply(chrome.runtime, khroma.runtime.options__GT_jsparams.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [extensionId, message, options__$1, responseCallback], null)));
};
khroma.runtime.send_message.cljs$lang$maxFixedArity = 1;
khroma.runtime.send_message.cljs$lang$applyTo = function(seq10724) {
  var G__10725 = cljs.core.first.call(null, seq10724);
  var seq10724__$1 = cljs.core.next.call(null, seq10724);
  return khroma.runtime.send_message.cljs$core$IFn$_invoke$arity$variadic(G__10725, seq10724__$1);
};
goog.provide("power_search.content");
goog.require("cljs.core");
goog.require("khroma.runtime");
goog.require("khroma.log");
goog.require("cljs.core.async");
power_search.content.init = function power_search$content$init() {
  var bg = khroma.runtime.connect.call(null);
  var c__8014__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto__, bg) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto__, bg) {
          return function(state_10451) {
            var state_val_10452 = state_10451[1];
            if (state_val_10452 === 1) {
              var state_10451__$1 = state_10451;
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10451__$1, 2, bg, new cljs.core.Keyword(null, "lol-i-am-a-content-script", "lol-i-am-a-content-script", 446041273));
            } else {
              if (state_val_10452 === 2) {
                var inst_10446 = state_10451[2];
                var state_10451__$1 = function() {
                  var statearr_10453 = state_10451;
                  statearr_10453[7] = inst_10446;
                  return statearr_10453;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10451__$1, 3, bg);
              } else {
                if (state_val_10452 === 3) {
                  var inst_10448 = state_10451[2];
                  var inst_10449 = khroma.log.log.call(null, "Background said: ", inst_10448);
                  var state_10451__$1 = state_10451;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10451__$1, inst_10449);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__8014__auto__, bg);
        return function(switch__7949__auto__, c__8014__auto__, bg) {
          return function() {
            var power_search$content$init_$_state_machine__7950__auto__ = null;
            var power_search$content$init_$_state_machine__7950__auto____0 = function() {
              var statearr_10457 = [null, null, null, null, null, null, null, null];
              statearr_10457[0] = power_search$content$init_$_state_machine__7950__auto__;
              statearr_10457[1] = 1;
              return statearr_10457;
            };
            var power_search$content$init_$_state_machine__7950__auto____1 = function(state_10451) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_10451);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e10458) {
                    if (e10458 instanceof Object) {
                      var ex__7953__auto__ = e10458;
                      var statearr_10459_10461 = state_10451;
                      statearr_10459_10461[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10451);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10458;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10462 = state_10451;
                  state_10451 = G__10462;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            power_search$content$init_$_state_machine__7950__auto__ = function(state_10451) {
              switch(arguments.length) {
                case 0:
                  return power_search$content$init_$_state_machine__7950__auto____0.call(this);
                case 1:
                  return power_search$content$init_$_state_machine__7950__auto____1.call(this, state_10451);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            power_search$content$init_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = power_search$content$init_$_state_machine__7950__auto____0;
            power_search$content$init_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = power_search$content$init_$_state_machine__7950__auto____1;
            return power_search$content$init_$_state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto__, bg);
      }();
      var state__8016__auto__ = function() {
        var statearr_10460 = f__8015__auto__.call(null);
        statearr_10460[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto__;
        return statearr_10460;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto__, bg));
  return c__8014__auto__;
};
goog.provide("power_search.background");
goog.require("cljs.core");
goog.require("khroma.log");
goog.require("khroma.runtime");
goog.require("cljs.core.async");
power_search.background.init = function power_search$background$init() {
  var c__8014__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto__) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto__) {
          return function(state_10497) {
            var state_val_10498 = state_10497[1];
            if (state_val_10498 === 1) {
              var inst_10487 = khroma.runtime.connections.call(null);
              var state_10497__$1 = state_10497;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10497__$1, 2, inst_10487);
            } else {
              if (state_val_10498 === 2) {
                var inst_10489 = state_10497[7];
                var inst_10489__$1 = state_10497[2];
                var state_10497__$1 = function() {
                  var statearr_10499 = state_10497;
                  statearr_10499[7] = inst_10489__$1;
                  return statearr_10499;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10497__$1, 3, inst_10489__$1);
              } else {
                if (state_val_10498 === 3) {
                  var inst_10489 = state_10497[7];
                  var inst_10491 = state_10497[2];
                  var inst_10492 = khroma.log.log.call(null, "Content script said: ", inst_10491);
                  var state_10497__$1 = function() {
                    var statearr_10500 = state_10497;
                    statearr_10500[8] = inst_10492;
                    return statearr_10500;
                  }();
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10497__$1, 4, inst_10489, new cljs.core.Keyword(null, "fml-i-am-the-background-script", "fml-i-am-the-background-script", -314269142));
                } else {
                  if (state_val_10498 === 4) {
                    var inst_10494 = state_10497[2];
                    var inst_10495 = power_search$background$init.call(null);
                    var state_10497__$1 = function() {
                      var statearr_10501 = state_10497;
                      statearr_10501[9] = inst_10494;
                      return statearr_10501;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10497__$1, inst_10495);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__8014__auto__);
        return function(switch__7949__auto__, c__8014__auto__) {
          return function() {
            var power_search$background$init_$_state_machine__7950__auto__ = null;
            var power_search$background$init_$_state_machine__7950__auto____0 = function() {
              var statearr_10505 = [null, null, null, null, null, null, null, null, null, null];
              statearr_10505[0] = power_search$background$init_$_state_machine__7950__auto__;
              statearr_10505[1] = 1;
              return statearr_10505;
            };
            var power_search$background$init_$_state_machine__7950__auto____1 = function(state_10497) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_10497);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e10506) {
                    if (e10506 instanceof Object) {
                      var ex__7953__auto__ = e10506;
                      var statearr_10507_10509 = state_10497;
                      statearr_10507_10509[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10497);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10506;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10510 = state_10497;
                  state_10497 = G__10510;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            power_search$background$init_$_state_machine__7950__auto__ = function(state_10497) {
              switch(arguments.length) {
                case 0:
                  return power_search$background$init_$_state_machine__7950__auto____0.call(this);
                case 1:
                  return power_search$background$init_$_state_machine__7950__auto____1.call(this, state_10497);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            power_search$background$init_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = power_search$background$init_$_state_machine__7950__auto____0;
            power_search$background$init_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = power_search$background$init_$_state_machine__7950__auto____1;
            return power_search$background$init_$_state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto__);
      }();
      var state__8016__auto__ = function() {
        var statearr_10508 = f__8015__auto__.call(null);
        statearr_10508[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto__;
        return statearr_10508;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto__));
  return c__8014__auto__;
};
goog.provide("power_search.popup");
goog.require("cljs.core");
goog.require("khroma.runtime");
goog.require("khroma.log");
goog.require("cljs.core.async");
power_search.popup.init = function power_search$popup$init() {
  var bg = khroma.runtime.connect.call(null);
  var c__8014__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8014__auto__, bg) {
    return function() {
      var f__8015__auto__ = function() {
        var switch__7949__auto__ = function(c__8014__auto__, bg) {
          return function(state_10535) {
            var state_val_10536 = state_10535[1];
            if (state_val_10536 === 1) {
              var state_10535__$1 = state_10535;
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10535__$1, 2, bg, new cljs.core.Keyword(null, "lol-i-am-a-popup", "lol-i-am-a-popup", 1982310068));
            } else {
              if (state_val_10536 === 2) {
                var inst_10530 = state_10535[2];
                var state_10535__$1 = function() {
                  var statearr_10537 = state_10535;
                  statearr_10537[7] = inst_10530;
                  return statearr_10537;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10535__$1, 3, bg);
              } else {
                if (state_val_10536 === 3) {
                  var inst_10532 = state_10535[2];
                  var inst_10533 = khroma.log.log.call(null, "Background said: ", inst_10532);
                  var state_10535__$1 = state_10535;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10535__$1, inst_10533);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__8014__auto__, bg);
        return function(switch__7949__auto__, c__8014__auto__, bg) {
          return function() {
            var power_search$popup$init_$_state_machine__7950__auto__ = null;
            var power_search$popup$init_$_state_machine__7950__auto____0 = function() {
              var statearr_10541 = [null, null, null, null, null, null, null, null];
              statearr_10541[0] = power_search$popup$init_$_state_machine__7950__auto__;
              statearr_10541[1] = 1;
              return statearr_10541;
            };
            var power_search$popup$init_$_state_machine__7950__auto____1 = function(state_10535) {
              while (true) {
                var ret_value__7951__auto__ = function() {
                  try {
                    while (true) {
                      var result__7952__auto__ = switch__7949__auto__.call(null, state_10535);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7952__auto__;
                      }
                      break;
                    }
                  } catch (e10542) {
                    if (e10542 instanceof Object) {
                      var ex__7953__auto__ = e10542;
                      var statearr_10543_10545 = state_10535;
                      statearr_10543_10545[5] = ex__7953__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10535);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10542;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7951__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10546 = state_10535;
                  state_10535 = G__10546;
                  continue;
                } else {
                  return ret_value__7951__auto__;
                }
                break;
              }
            };
            power_search$popup$init_$_state_machine__7950__auto__ = function(state_10535) {
              switch(arguments.length) {
                case 0:
                  return power_search$popup$init_$_state_machine__7950__auto____0.call(this);
                case 1:
                  return power_search$popup$init_$_state_machine__7950__auto____1.call(this, state_10535);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            power_search$popup$init_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$0 = power_search$popup$init_$_state_machine__7950__auto____0;
            power_search$popup$init_$_state_machine__7950__auto__.cljs$core$IFn$_invoke$arity$1 = power_search$popup$init_$_state_machine__7950__auto____1;
            return power_search$popup$init_$_state_machine__7950__auto__;
          }();
        }(switch__7949__auto__, c__8014__auto__, bg);
      }();
      var state__8016__auto__ = function() {
        var statearr_10544 = f__8015__auto__.call(null);
        statearr_10544[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8014__auto__;
        return statearr_10544;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8016__auto__);
    };
  }(c__8014__auto__, bg));
  return c__8014__auto__;
};
